// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnn_cnn_Pipeline_pad_for_rows_pad_for_cols (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        pad_img_address0,
        pad_img_ce0,
        pad_img_we0,
        pad_img_d0,
        img_in_address0,
        img_in_ce0,
        img_in_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] pad_img_address0;
output   pad_img_ce0;
output   pad_img_we0;
output  [31:0] pad_img_d0;
output  [9:0] img_in_address0;
output   img_in_ce0;
input  [31:0] img_in_q0;

reg ap_idle;
reg pad_img_ce0;
reg pad_img_we0;
reg img_in_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln16_fu_139_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [0:0] icmp_ln16_reg_368;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln16_reg_368_pp0_iter1_reg;
reg   [0:0] icmp_ln16_reg_368_pp0_iter2_reg;
reg   [0:0] icmp_ln16_reg_368_pp0_iter3_reg;
reg   [0:0] icmp_ln16_reg_368_pp0_iter4_reg;
reg   [0:0] icmp_ln16_reg_368_pp0_iter5_reg;
reg   [0:0] icmp_ln16_reg_368_pp0_iter6_reg;
reg   [0:0] icmp_ln16_reg_368_pp0_iter7_reg;
reg   [0:0] icmp_ln16_reg_368_pp0_iter8_reg;
reg   [0:0] icmp_ln16_reg_368_pp0_iter9_reg;
reg   [0:0] icmp_ln16_reg_368_pp0_iter10_reg;
reg   [0:0] icmp_ln16_reg_368_pp0_iter11_reg;
reg   [0:0] icmp_ln16_reg_368_pp0_iter12_reg;
reg   [0:0] icmp_ln16_reg_368_pp0_iter13_reg;
reg   [0:0] icmp_ln16_reg_368_pp0_iter14_reg;
reg   [0:0] icmp_ln16_reg_368_pp0_iter15_reg;
reg   [0:0] icmp_ln16_reg_368_pp0_iter16_reg;
reg   [0:0] icmp_ln16_reg_368_pp0_iter17_reg;
reg   [0:0] icmp_ln16_reg_368_pp0_iter18_reg;
wire   [4:0] select_ln16_fu_169_p3;
reg   [4:0] select_ln16_reg_372;
wire   [4:0] select_ln16_1_fu_177_p3;
reg   [4:0] select_ln16_1_reg_378;
wire   [9:0] sub_ln33_fu_219_p2;
reg   [9:0] sub_ln33_reg_384;
wire   [0:0] empty_113_fu_237_p2;
reg   [0:0] empty_113_reg_389;
reg   [0:0] empty_113_reg_389_pp0_iter1_reg;
reg   [0:0] empty_113_reg_389_pp0_iter2_reg;
reg   [0:0] empty_113_reg_389_pp0_iter3_reg;
reg   [0:0] empty_113_reg_389_pp0_iter4_reg;
reg   [0:0] empty_113_reg_389_pp0_iter5_reg;
reg   [0:0] empty_113_reg_389_pp0_iter6_reg;
reg   [0:0] empty_113_reg_389_pp0_iter7_reg;
reg   [0:0] empty_113_reg_389_pp0_iter8_reg;
reg   [0:0] empty_113_reg_389_pp0_iter9_reg;
reg   [0:0] empty_113_reg_389_pp0_iter10_reg;
reg   [0:0] empty_113_reg_389_pp0_iter11_reg;
reg   [0:0] empty_113_reg_389_pp0_iter12_reg;
reg   [0:0] empty_113_reg_389_pp0_iter13_reg;
reg   [0:0] empty_113_reg_389_pp0_iter14_reg;
reg   [0:0] empty_113_reg_389_pp0_iter15_reg;
reg   [0:0] empty_113_reg_389_pp0_iter16_reg;
reg   [0:0] empty_113_reg_389_pp0_iter17_reg;
reg   [0:0] empty_113_reg_389_pp0_iter18_reg;
wire   [0:0] empty_116_fu_255_p2;
reg   [0:0] empty_116_reg_393;
reg   [0:0] empty_116_reg_393_pp0_iter1_reg;
reg   [0:0] empty_116_reg_393_pp0_iter2_reg;
reg   [0:0] empty_116_reg_393_pp0_iter3_reg;
reg   [0:0] empty_116_reg_393_pp0_iter4_reg;
reg   [0:0] empty_116_reg_393_pp0_iter5_reg;
reg   [0:0] empty_116_reg_393_pp0_iter6_reg;
reg   [0:0] empty_116_reg_393_pp0_iter7_reg;
reg   [0:0] empty_116_reg_393_pp0_iter8_reg;
reg   [0:0] empty_116_reg_393_pp0_iter9_reg;
reg   [0:0] empty_116_reg_393_pp0_iter10_reg;
reg   [0:0] empty_116_reg_393_pp0_iter11_reg;
reg   [0:0] empty_116_reg_393_pp0_iter12_reg;
reg   [0:0] empty_116_reg_393_pp0_iter13_reg;
reg   [0:0] empty_116_reg_393_pp0_iter14_reg;
reg   [0:0] empty_116_reg_393_pp0_iter15_reg;
reg   [0:0] empty_116_reg_393_pp0_iter16_reg;
reg   [0:0] empty_116_reg_393_pp0_iter17_reg;
reg   [0:0] empty_116_reg_393_pp0_iter18_reg;
reg   [9:0] pad_img_addr_reg_397;
reg   [9:0] pad_img_addr_reg_397_pp0_iter2_reg;
reg   [9:0] pad_img_addr_reg_397_pp0_iter3_reg;
reg   [9:0] pad_img_addr_reg_397_pp0_iter4_reg;
reg   [9:0] pad_img_addr_reg_397_pp0_iter5_reg;
reg   [9:0] pad_img_addr_reg_397_pp0_iter6_reg;
reg   [9:0] pad_img_addr_reg_397_pp0_iter7_reg;
reg   [9:0] pad_img_addr_reg_397_pp0_iter8_reg;
reg   [9:0] pad_img_addr_reg_397_pp0_iter9_reg;
reg   [9:0] pad_img_addr_reg_397_pp0_iter10_reg;
reg   [9:0] pad_img_addr_reg_397_pp0_iter11_reg;
reg   [9:0] pad_img_addr_reg_397_pp0_iter12_reg;
reg   [9:0] pad_img_addr_reg_397_pp0_iter13_reg;
reg   [9:0] pad_img_addr_reg_397_pp0_iter14_reg;
reg   [9:0] pad_img_addr_reg_397_pp0_iter15_reg;
reg   [9:0] pad_img_addr_reg_397_pp0_iter16_reg;
reg   [9:0] pad_img_addr_reg_397_pp0_iter17_reg;
reg   [9:0] pad_img_addr_reg_397_pp0_iter18_reg;
reg   [31:0] img_in_load_reg_407;
wire   [31:0] grp_fu_116_p2;
reg   [31:0] conv23_i_reg_417;
reg   [31:0] ap_phi_mux_storemerge1_phi_fu_105_p6;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge1_reg_101;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge1_reg_101;
reg   [31:0] ap_phi_reg_pp0_iter2_storemerge1_reg_101;
reg   [31:0] ap_phi_reg_pp0_iter3_storemerge1_reg_101;
reg   [31:0] ap_phi_reg_pp0_iter4_storemerge1_reg_101;
reg   [31:0] ap_phi_reg_pp0_iter5_storemerge1_reg_101;
reg   [31:0] ap_phi_reg_pp0_iter6_storemerge1_reg_101;
reg   [31:0] ap_phi_reg_pp0_iter7_storemerge1_reg_101;
reg   [31:0] ap_phi_reg_pp0_iter8_storemerge1_reg_101;
reg   [31:0] ap_phi_reg_pp0_iter9_storemerge1_reg_101;
reg   [31:0] ap_phi_reg_pp0_iter10_storemerge1_reg_101;
reg   [31:0] ap_phi_reg_pp0_iter11_storemerge1_reg_101;
reg   [31:0] ap_phi_reg_pp0_iter12_storemerge1_reg_101;
reg   [31:0] ap_phi_reg_pp0_iter13_storemerge1_reg_101;
reg   [31:0] ap_phi_reg_pp0_iter14_storemerge1_reg_101;
reg   [31:0] ap_phi_reg_pp0_iter15_storemerge1_reg_101;
reg   [31:0] ap_phi_reg_pp0_iter16_storemerge1_reg_101;
reg   [31:0] ap_phi_reg_pp0_iter17_storemerge1_reg_101;
reg   [31:0] ap_phi_reg_pp0_iter18_storemerge1_reg_101;
reg   [31:0] ap_phi_reg_pp0_iter19_storemerge1_reg_101;
wire   [63:0] zext_ln23_2_fu_315_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln33_1_fu_338_p1;
reg   [4:0] c_fu_64;
wire   [4:0] add_ln18_fu_261_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_c_load;
reg   [4:0] r_fu_68;
reg   [4:0] ap_sig_allocacmp_r_load;
reg   [9:0] indvar_flatten_fu_72;
wire   [9:0] add_ln16_1_fu_145_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [31:0] grp_fu_116_p0;
wire   [0:0] icmp_ln18_fu_163_p2;
wire   [4:0] add_ln16_fu_157_p2;
wire   [4:0] empty_110_fu_185_p2;
wire   [4:0] select_ln16_2_fu_191_p3;
wire   [6:0] tmp_52_fu_207_p3;
wire   [9:0] tmp_51_fu_199_p3;
wire   [9:0] zext_ln33_fu_215_p1;
wire   [0:0] empty_112_fu_231_p2;
wire   [0:0] empty_111_fu_225_p2;
wire   [0:0] empty_115_fu_249_p2;
wire   [0:0] empty_114_fu_243_p2;
wire   [5:0] tmp_50_fu_289_p3;
wire   [9:0] tmp_49_fu_282_p3;
wire   [9:0] zext_ln23_fu_296_p1;
wire   [9:0] sub_ln23_fu_300_p2;
wire   [9:0] zext_ln23_1_fu_306_p1;
wire   [9:0] add_ln23_fu_309_p2;
wire   [5:0] trunc_ln25_cast_fu_320_p1;
wire   [5:0] add_ln33_fu_323_p2;
wire  signed [9:0] sext_ln33_fu_329_p1;
wire   [9:0] add_ln33_1_fu_333_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_done_reg = 1'b0;
end

cnn_fdiv_32ns_32ns_32_16_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_16_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_116_p0),
    .din1(32'd1132396544),
    .ce(1'b1),
    .dout(grp_fu_116_p2)
);

cnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter18_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (empty_116_fu_255_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (empty_113_fu_237_p2 == 1'd0) & (icmp_ln16_fu_139_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (empty_113_fu_237_p2 == 1'd1) & (icmp_ln16_fu_139_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_phi_reg_pp0_iter1_storemerge1_reg_101 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_storemerge1_reg_101 <= ap_phi_reg_pp0_iter0_storemerge1_reg_101;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln16_fu_139_p2 == 1'd0))) begin
            c_fu_64 <= add_ln18_fu_261_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            c_fu_64 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln16_fu_139_p2 == 1'd0))) begin
            indvar_flatten_fu_72 <= add_ln16_1_fu_145_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_72 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln16_fu_139_p2 == 1'd0))) begin
            r_fu_68 <= select_ln16_1_fu_177_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            r_fu_68 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        empty_113_reg_389_pp0_iter10_reg <= empty_113_reg_389_pp0_iter9_reg;
        empty_113_reg_389_pp0_iter11_reg <= empty_113_reg_389_pp0_iter10_reg;
        empty_113_reg_389_pp0_iter12_reg <= empty_113_reg_389_pp0_iter11_reg;
        empty_113_reg_389_pp0_iter13_reg <= empty_113_reg_389_pp0_iter12_reg;
        empty_113_reg_389_pp0_iter14_reg <= empty_113_reg_389_pp0_iter13_reg;
        empty_113_reg_389_pp0_iter15_reg <= empty_113_reg_389_pp0_iter14_reg;
        empty_113_reg_389_pp0_iter16_reg <= empty_113_reg_389_pp0_iter15_reg;
        empty_113_reg_389_pp0_iter17_reg <= empty_113_reg_389_pp0_iter16_reg;
        empty_113_reg_389_pp0_iter18_reg <= empty_113_reg_389_pp0_iter17_reg;
        empty_113_reg_389_pp0_iter2_reg <= empty_113_reg_389_pp0_iter1_reg;
        empty_113_reg_389_pp0_iter3_reg <= empty_113_reg_389_pp0_iter2_reg;
        empty_113_reg_389_pp0_iter4_reg <= empty_113_reg_389_pp0_iter3_reg;
        empty_113_reg_389_pp0_iter5_reg <= empty_113_reg_389_pp0_iter4_reg;
        empty_113_reg_389_pp0_iter6_reg <= empty_113_reg_389_pp0_iter5_reg;
        empty_113_reg_389_pp0_iter7_reg <= empty_113_reg_389_pp0_iter6_reg;
        empty_113_reg_389_pp0_iter8_reg <= empty_113_reg_389_pp0_iter7_reg;
        empty_113_reg_389_pp0_iter9_reg <= empty_113_reg_389_pp0_iter8_reg;
        empty_116_reg_393_pp0_iter10_reg <= empty_116_reg_393_pp0_iter9_reg;
        empty_116_reg_393_pp0_iter11_reg <= empty_116_reg_393_pp0_iter10_reg;
        empty_116_reg_393_pp0_iter12_reg <= empty_116_reg_393_pp0_iter11_reg;
        empty_116_reg_393_pp0_iter13_reg <= empty_116_reg_393_pp0_iter12_reg;
        empty_116_reg_393_pp0_iter14_reg <= empty_116_reg_393_pp0_iter13_reg;
        empty_116_reg_393_pp0_iter15_reg <= empty_116_reg_393_pp0_iter14_reg;
        empty_116_reg_393_pp0_iter16_reg <= empty_116_reg_393_pp0_iter15_reg;
        empty_116_reg_393_pp0_iter17_reg <= empty_116_reg_393_pp0_iter16_reg;
        empty_116_reg_393_pp0_iter18_reg <= empty_116_reg_393_pp0_iter17_reg;
        empty_116_reg_393_pp0_iter2_reg <= empty_116_reg_393_pp0_iter1_reg;
        empty_116_reg_393_pp0_iter3_reg <= empty_116_reg_393_pp0_iter2_reg;
        empty_116_reg_393_pp0_iter4_reg <= empty_116_reg_393_pp0_iter3_reg;
        empty_116_reg_393_pp0_iter5_reg <= empty_116_reg_393_pp0_iter4_reg;
        empty_116_reg_393_pp0_iter6_reg <= empty_116_reg_393_pp0_iter5_reg;
        empty_116_reg_393_pp0_iter7_reg <= empty_116_reg_393_pp0_iter6_reg;
        empty_116_reg_393_pp0_iter8_reg <= empty_116_reg_393_pp0_iter7_reg;
        empty_116_reg_393_pp0_iter9_reg <= empty_116_reg_393_pp0_iter8_reg;
        icmp_ln16_reg_368_pp0_iter10_reg <= icmp_ln16_reg_368_pp0_iter9_reg;
        icmp_ln16_reg_368_pp0_iter11_reg <= icmp_ln16_reg_368_pp0_iter10_reg;
        icmp_ln16_reg_368_pp0_iter12_reg <= icmp_ln16_reg_368_pp0_iter11_reg;
        icmp_ln16_reg_368_pp0_iter13_reg <= icmp_ln16_reg_368_pp0_iter12_reg;
        icmp_ln16_reg_368_pp0_iter14_reg <= icmp_ln16_reg_368_pp0_iter13_reg;
        icmp_ln16_reg_368_pp0_iter15_reg <= icmp_ln16_reg_368_pp0_iter14_reg;
        icmp_ln16_reg_368_pp0_iter16_reg <= icmp_ln16_reg_368_pp0_iter15_reg;
        icmp_ln16_reg_368_pp0_iter17_reg <= icmp_ln16_reg_368_pp0_iter16_reg;
        icmp_ln16_reg_368_pp0_iter18_reg <= icmp_ln16_reg_368_pp0_iter17_reg;
        icmp_ln16_reg_368_pp0_iter2_reg <= icmp_ln16_reg_368_pp0_iter1_reg;
        icmp_ln16_reg_368_pp0_iter3_reg <= icmp_ln16_reg_368_pp0_iter2_reg;
        icmp_ln16_reg_368_pp0_iter4_reg <= icmp_ln16_reg_368_pp0_iter3_reg;
        icmp_ln16_reg_368_pp0_iter5_reg <= icmp_ln16_reg_368_pp0_iter4_reg;
        icmp_ln16_reg_368_pp0_iter6_reg <= icmp_ln16_reg_368_pp0_iter5_reg;
        icmp_ln16_reg_368_pp0_iter7_reg <= icmp_ln16_reg_368_pp0_iter6_reg;
        icmp_ln16_reg_368_pp0_iter8_reg <= icmp_ln16_reg_368_pp0_iter7_reg;
        icmp_ln16_reg_368_pp0_iter9_reg <= icmp_ln16_reg_368_pp0_iter8_reg;
        pad_img_addr_reg_397_pp0_iter10_reg <= pad_img_addr_reg_397_pp0_iter9_reg;
        pad_img_addr_reg_397_pp0_iter11_reg <= pad_img_addr_reg_397_pp0_iter10_reg;
        pad_img_addr_reg_397_pp0_iter12_reg <= pad_img_addr_reg_397_pp0_iter11_reg;
        pad_img_addr_reg_397_pp0_iter13_reg <= pad_img_addr_reg_397_pp0_iter12_reg;
        pad_img_addr_reg_397_pp0_iter14_reg <= pad_img_addr_reg_397_pp0_iter13_reg;
        pad_img_addr_reg_397_pp0_iter15_reg <= pad_img_addr_reg_397_pp0_iter14_reg;
        pad_img_addr_reg_397_pp0_iter16_reg <= pad_img_addr_reg_397_pp0_iter15_reg;
        pad_img_addr_reg_397_pp0_iter17_reg <= pad_img_addr_reg_397_pp0_iter16_reg;
        pad_img_addr_reg_397_pp0_iter18_reg <= pad_img_addr_reg_397_pp0_iter17_reg;
        pad_img_addr_reg_397_pp0_iter2_reg <= pad_img_addr_reg_397;
        pad_img_addr_reg_397_pp0_iter3_reg <= pad_img_addr_reg_397_pp0_iter2_reg;
        pad_img_addr_reg_397_pp0_iter4_reg <= pad_img_addr_reg_397_pp0_iter3_reg;
        pad_img_addr_reg_397_pp0_iter5_reg <= pad_img_addr_reg_397_pp0_iter4_reg;
        pad_img_addr_reg_397_pp0_iter6_reg <= pad_img_addr_reg_397_pp0_iter5_reg;
        pad_img_addr_reg_397_pp0_iter7_reg <= pad_img_addr_reg_397_pp0_iter6_reg;
        pad_img_addr_reg_397_pp0_iter8_reg <= pad_img_addr_reg_397_pp0_iter7_reg;
        pad_img_addr_reg_397_pp0_iter9_reg <= pad_img_addr_reg_397_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        empty_113_reg_389_pp0_iter1_reg <= empty_113_reg_389;
        empty_116_reg_393_pp0_iter1_reg <= empty_116_reg_393;
        icmp_ln16_reg_368 <= icmp_ln16_fu_139_p2;
        icmp_ln16_reg_368_pp0_iter1_reg <= icmp_ln16_reg_368;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter10_storemerge1_reg_101 <= ap_phi_reg_pp0_iter9_storemerge1_reg_101;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter11_storemerge1_reg_101 <= ap_phi_reg_pp0_iter10_storemerge1_reg_101;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter12_storemerge1_reg_101 <= ap_phi_reg_pp0_iter11_storemerge1_reg_101;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter13_storemerge1_reg_101 <= ap_phi_reg_pp0_iter12_storemerge1_reg_101;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter14_storemerge1_reg_101 <= ap_phi_reg_pp0_iter13_storemerge1_reg_101;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter15_storemerge1_reg_101 <= ap_phi_reg_pp0_iter14_storemerge1_reg_101;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter16_storemerge1_reg_101 <= ap_phi_reg_pp0_iter15_storemerge1_reg_101;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter17_storemerge1_reg_101 <= ap_phi_reg_pp0_iter16_storemerge1_reg_101;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter18_storemerge1_reg_101 <= ap_phi_reg_pp0_iter17_storemerge1_reg_101;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter19_storemerge1_reg_101 <= ap_phi_reg_pp0_iter18_storemerge1_reg_101;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_storemerge1_reg_101 <= ap_phi_reg_pp0_iter1_storemerge1_reg_101;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter3_storemerge1_reg_101 <= ap_phi_reg_pp0_iter2_storemerge1_reg_101;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_storemerge1_reg_101 <= ap_phi_reg_pp0_iter3_storemerge1_reg_101;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter5_storemerge1_reg_101 <= ap_phi_reg_pp0_iter4_storemerge1_reg_101;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter6_storemerge1_reg_101 <= ap_phi_reg_pp0_iter5_storemerge1_reg_101;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter7_storemerge1_reg_101 <= ap_phi_reg_pp0_iter6_storemerge1_reg_101;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter8_storemerge1_reg_101 <= ap_phi_reg_pp0_iter7_storemerge1_reg_101;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter9_storemerge1_reg_101 <= ap_phi_reg_pp0_iter8_storemerge1_reg_101;
    end
end

always @ (posedge ap_clk) begin
    if (((empty_116_reg_393_pp0_iter17_reg == 1'd0) & (empty_113_reg_389_pp0_iter17_reg == 1'd0) & (icmp_ln16_reg_368_pp0_iter17_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv23_i_reg_417 <= grp_fu_116_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln16_fu_139_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_113_reg_389 <= empty_113_fu_237_p2;
        select_ln16_1_reg_378 <= select_ln16_1_fu_177_p3;
        select_ln16_reg_372 <= select_ln16_fu_169_p3;
        sub_ln33_reg_384[9 : 2] <= sub_ln33_fu_219_p2[9 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (empty_113_fu_237_p2 == 1'd0) & (icmp_ln16_fu_139_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_116_reg_393 <= empty_116_fu_255_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((empty_116_reg_393_pp0_iter1_reg == 1'd0) & (empty_113_reg_389_pp0_iter1_reg == 1'd0) & (icmp_ln16_reg_368_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        img_in_load_reg_407 <= img_in_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln16_reg_368 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pad_img_addr_reg_397 <= zext_ln23_2_fu_315_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln16_fu_139_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter18_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((empty_116_reg_393_pp0_iter18_reg == 1'd0) & (empty_113_reg_389_pp0_iter18_reg == 1'd0) & (icmp_ln16_reg_368_pp0_iter18_reg == 1'd0))) begin
        ap_phi_mux_storemerge1_phi_fu_105_p6 = conv23_i_reg_417;
    end else begin
        ap_phi_mux_storemerge1_phi_fu_105_p6 = ap_phi_reg_pp0_iter19_storemerge1_reg_101;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_c_load = 5'd0;
    end else begin
        ap_sig_allocacmp_c_load = c_fu_64;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_72;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_r_load = 5'd0;
    end else begin
        ap_sig_allocacmp_r_load = r_fu_68;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        img_in_ce0 = 1'b1;
    end else begin
        img_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pad_img_ce0 = 1'b1;
    end else begin
        pad_img_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pad_img_we0 = 1'b1;
    end else begin
        pad_img_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln16_1_fu_145_p2 = (ap_sig_allocacmp_indvar_flatten_load + 10'd1);

assign add_ln16_fu_157_p2 = (ap_sig_allocacmp_r_load + 5'd1);

assign add_ln18_fu_261_p2 = (select_ln16_fu_169_p3 + 5'd1);

assign add_ln23_fu_309_p2 = (sub_ln23_fu_300_p2 + zext_ln23_1_fu_306_p1);

assign add_ln33_1_fu_333_p2 = ($signed(sub_ln33_reg_384) + $signed(sext_ln33_fu_329_p1));

assign add_ln33_fu_323_p2 = ($signed(trunc_ln25_cast_fu_320_p1) + $signed(6'd63));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_storemerge1_reg_101 = 'bx;

assign empty_110_fu_185_p2 = ($signed(ap_sig_allocacmp_r_load) + $signed(5'd31));

assign empty_111_fu_225_p2 = ((select_ln16_1_fu_177_p3 == 5'd29) ? 1'b1 : 1'b0);

assign empty_112_fu_231_p2 = ((select_ln16_1_fu_177_p3 == 5'd0) ? 1'b1 : 1'b0);

assign empty_113_fu_237_p2 = (empty_112_fu_231_p2 | empty_111_fu_225_p2);

assign empty_114_fu_243_p2 = ((select_ln16_fu_169_p3 == 5'd29) ? 1'b1 : 1'b0);

assign empty_115_fu_249_p2 = ((select_ln16_fu_169_p3 == 5'd0) ? 1'b1 : 1'b0);

assign empty_116_fu_255_p2 = (empty_115_fu_249_p2 | empty_114_fu_243_p2);

assign grp_fu_116_p0 = img_in_load_reg_407;

assign icmp_ln16_fu_139_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 10'd900) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_163_p2 = ((ap_sig_allocacmp_c_load == 5'd30) ? 1'b1 : 1'b0);

assign img_in_address0 = zext_ln33_1_fu_338_p1;

assign pad_img_address0 = pad_img_addr_reg_397_pp0_iter18_reg;

assign pad_img_d0 = ap_phi_mux_storemerge1_phi_fu_105_p6;

assign select_ln16_1_fu_177_p3 = ((icmp_ln18_fu_163_p2[0:0] == 1'b1) ? add_ln16_fu_157_p2 : ap_sig_allocacmp_r_load);

assign select_ln16_2_fu_191_p3 = ((icmp_ln18_fu_163_p2[0:0] == 1'b1) ? ap_sig_allocacmp_r_load : empty_110_fu_185_p2);

assign select_ln16_fu_169_p3 = ((icmp_ln18_fu_163_p2[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_c_load);

assign sext_ln33_fu_329_p1 = $signed(add_ln33_fu_323_p2);

assign sub_ln23_fu_300_p2 = (tmp_49_fu_282_p3 - zext_ln23_fu_296_p1);

assign sub_ln33_fu_219_p2 = (tmp_51_fu_199_p3 - zext_ln33_fu_215_p1);

assign tmp_49_fu_282_p3 = {{select_ln16_1_reg_378}, {5'd0}};

assign tmp_50_fu_289_p3 = {{select_ln16_1_reg_378}, {1'd0}};

assign tmp_51_fu_199_p3 = {{select_ln16_2_fu_191_p3}, {5'd0}};

assign tmp_52_fu_207_p3 = {{select_ln16_2_fu_191_p3}, {2'd0}};

assign trunc_ln25_cast_fu_320_p1 = select_ln16_reg_372;

assign zext_ln23_1_fu_306_p1 = select_ln16_reg_372;

assign zext_ln23_2_fu_315_p1 = add_ln23_fu_309_p2;

assign zext_ln23_fu_296_p1 = tmp_50_fu_289_p3;

assign zext_ln33_1_fu_338_p1 = add_ln33_1_fu_333_p2;

assign zext_ln33_fu_215_p1 = tmp_52_fu_207_p3;

always @ (posedge ap_clk) begin
    sub_ln33_reg_384[1:0] <= 2'b00;
end

endmodule //cnn_cnn_Pipeline_pad_for_rows_pad_for_cols
