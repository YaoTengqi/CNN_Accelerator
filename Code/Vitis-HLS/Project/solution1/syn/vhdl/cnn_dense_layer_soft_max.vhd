-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_dense_layer_soft_max is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dense_to_softmax_streams_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    dense_to_softmax_streams_0_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    dense_to_softmax_streams_0_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    dense_to_softmax_streams_0_empty_n : IN STD_LOGIC;
    dense_to_softmax_streams_0_read : OUT STD_LOGIC;
    dense_to_softmax_streams_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    dense_to_softmax_streams_1_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    dense_to_softmax_streams_1_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    dense_to_softmax_streams_1_empty_n : IN STD_LOGIC;
    dense_to_softmax_streams_1_read : OUT STD_LOGIC;
    dense_to_softmax_streams_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    dense_to_softmax_streams_2_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    dense_to_softmax_streams_2_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    dense_to_softmax_streams_2_empty_n : IN STD_LOGIC;
    dense_to_softmax_streams_2_read : OUT STD_LOGIC;
    dense_to_softmax_streams_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    dense_to_softmax_streams_3_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    dense_to_softmax_streams_3_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    dense_to_softmax_streams_3_empty_n : IN STD_LOGIC;
    dense_to_softmax_streams_3_read : OUT STD_LOGIC;
    dense_to_softmax_streams_4_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    dense_to_softmax_streams_4_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    dense_to_softmax_streams_4_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    dense_to_softmax_streams_4_empty_n : IN STD_LOGIC;
    dense_to_softmax_streams_4_read : OUT STD_LOGIC;
    dense_to_softmax_streams_5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    dense_to_softmax_streams_5_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    dense_to_softmax_streams_5_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    dense_to_softmax_streams_5_empty_n : IN STD_LOGIC;
    dense_to_softmax_streams_5_read : OUT STD_LOGIC;
    dense_to_softmax_streams_6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    dense_to_softmax_streams_6_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    dense_to_softmax_streams_6_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    dense_to_softmax_streams_6_empty_n : IN STD_LOGIC;
    dense_to_softmax_streams_6_read : OUT STD_LOGIC;
    dense_to_softmax_streams_7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    dense_to_softmax_streams_7_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    dense_to_softmax_streams_7_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    dense_to_softmax_streams_7_empty_n : IN STD_LOGIC;
    dense_to_softmax_streams_7_read : OUT STD_LOGIC;
    prediction_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    prediction_ce0 : OUT STD_LOGIC;
    prediction_we0 : OUT STD_LOGIC;
    prediction_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    prediction_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    prediction_ce1 : OUT STD_LOGIC;
    prediction_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of cnn_dense_layer_soft_max is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_ap_start : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_ap_done : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_ap_idle : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_ap_ready : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_0_read : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_1_read : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_2_read : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_3_read : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_4_read : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_5_read : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_6_read : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_7_read : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_prediction_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_prediction_ce0 : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_prediction_we0 : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_prediction_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_exp_sum_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_exp_sum_out_ap_vld : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_start : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_done : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_idle : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_ready : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_ce0 : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_we0 : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_ce1 : STD_LOGIC;
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call11 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dense_to_softmax_streams_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_to_softmax_streams_0_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        dense_to_softmax_streams_0_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        dense_to_softmax_streams_0_empty_n : IN STD_LOGIC;
        dense_to_softmax_streams_0_read : OUT STD_LOGIC;
        dense_to_softmax_streams_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_to_softmax_streams_1_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        dense_to_softmax_streams_1_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        dense_to_softmax_streams_1_empty_n : IN STD_LOGIC;
        dense_to_softmax_streams_1_read : OUT STD_LOGIC;
        dense_to_softmax_streams_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_to_softmax_streams_2_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        dense_to_softmax_streams_2_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        dense_to_softmax_streams_2_empty_n : IN STD_LOGIC;
        dense_to_softmax_streams_2_read : OUT STD_LOGIC;
        dense_to_softmax_streams_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_to_softmax_streams_3_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        dense_to_softmax_streams_3_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        dense_to_softmax_streams_3_empty_n : IN STD_LOGIC;
        dense_to_softmax_streams_3_read : OUT STD_LOGIC;
        dense_to_softmax_streams_4_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_to_softmax_streams_4_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        dense_to_softmax_streams_4_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        dense_to_softmax_streams_4_empty_n : IN STD_LOGIC;
        dense_to_softmax_streams_4_read : OUT STD_LOGIC;
        dense_to_softmax_streams_5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_to_softmax_streams_5_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        dense_to_softmax_streams_5_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        dense_to_softmax_streams_5_empty_n : IN STD_LOGIC;
        dense_to_softmax_streams_5_read : OUT STD_LOGIC;
        dense_to_softmax_streams_6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_to_softmax_streams_6_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        dense_to_softmax_streams_6_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        dense_to_softmax_streams_6_empty_n : IN STD_LOGIC;
        dense_to_softmax_streams_6_read : OUT STD_LOGIC;
        dense_to_softmax_streams_7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_to_softmax_streams_7_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        dense_to_softmax_streams_7_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        dense_to_softmax_streams_7_empty_n : IN STD_LOGIC;
        dense_to_softmax_streams_7_read : OUT STD_LOGIC;
        prediction_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        prediction_ce0 : OUT STD_LOGIC;
        prediction_we0 : OUT STD_LOGIC;
        prediction_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        exp_sum_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        exp_sum_out_ap_vld : OUT STD_LOGIC );
    end component;


    component cnn_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        prediction_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        prediction_ce0 : OUT STD_LOGIC;
        prediction_we0 : OUT STD_LOGIC;
        prediction_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        prediction_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        prediction_ce1 : OUT STD_LOGIC;
        prediction_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        exp_sum_reload : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44 : component cnn_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_ap_start,
        ap_done => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_ap_done,
        ap_idle => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_ap_idle,
        ap_ready => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_ap_ready,
        dense_to_softmax_streams_0_dout => dense_to_softmax_streams_0_dout,
        dense_to_softmax_streams_0_num_data_valid => ap_const_lv5_0,
        dense_to_softmax_streams_0_fifo_cap => ap_const_lv5_0,
        dense_to_softmax_streams_0_empty_n => dense_to_softmax_streams_0_empty_n,
        dense_to_softmax_streams_0_read => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_0_read,
        dense_to_softmax_streams_1_dout => dense_to_softmax_streams_1_dout,
        dense_to_softmax_streams_1_num_data_valid => ap_const_lv5_0,
        dense_to_softmax_streams_1_fifo_cap => ap_const_lv5_0,
        dense_to_softmax_streams_1_empty_n => dense_to_softmax_streams_1_empty_n,
        dense_to_softmax_streams_1_read => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_1_read,
        dense_to_softmax_streams_2_dout => dense_to_softmax_streams_2_dout,
        dense_to_softmax_streams_2_num_data_valid => ap_const_lv5_0,
        dense_to_softmax_streams_2_fifo_cap => ap_const_lv5_0,
        dense_to_softmax_streams_2_empty_n => dense_to_softmax_streams_2_empty_n,
        dense_to_softmax_streams_2_read => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_2_read,
        dense_to_softmax_streams_3_dout => dense_to_softmax_streams_3_dout,
        dense_to_softmax_streams_3_num_data_valid => ap_const_lv5_0,
        dense_to_softmax_streams_3_fifo_cap => ap_const_lv5_0,
        dense_to_softmax_streams_3_empty_n => dense_to_softmax_streams_3_empty_n,
        dense_to_softmax_streams_3_read => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_3_read,
        dense_to_softmax_streams_4_dout => dense_to_softmax_streams_4_dout,
        dense_to_softmax_streams_4_num_data_valid => ap_const_lv5_0,
        dense_to_softmax_streams_4_fifo_cap => ap_const_lv5_0,
        dense_to_softmax_streams_4_empty_n => dense_to_softmax_streams_4_empty_n,
        dense_to_softmax_streams_4_read => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_4_read,
        dense_to_softmax_streams_5_dout => dense_to_softmax_streams_5_dout,
        dense_to_softmax_streams_5_num_data_valid => ap_const_lv5_0,
        dense_to_softmax_streams_5_fifo_cap => ap_const_lv5_0,
        dense_to_softmax_streams_5_empty_n => dense_to_softmax_streams_5_empty_n,
        dense_to_softmax_streams_5_read => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_5_read,
        dense_to_softmax_streams_6_dout => dense_to_softmax_streams_6_dout,
        dense_to_softmax_streams_6_num_data_valid => ap_const_lv5_0,
        dense_to_softmax_streams_6_fifo_cap => ap_const_lv5_0,
        dense_to_softmax_streams_6_empty_n => dense_to_softmax_streams_6_empty_n,
        dense_to_softmax_streams_6_read => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_6_read,
        dense_to_softmax_streams_7_dout => dense_to_softmax_streams_7_dout,
        dense_to_softmax_streams_7_num_data_valid => ap_const_lv5_0,
        dense_to_softmax_streams_7_fifo_cap => ap_const_lv5_0,
        dense_to_softmax_streams_7_empty_n => dense_to_softmax_streams_7_empty_n,
        dense_to_softmax_streams_7_read => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_7_read,
        prediction_address0 => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_prediction_address0,
        prediction_ce0 => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_prediction_ce0,
        prediction_we0 => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_prediction_we0,
        prediction_d0 => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_prediction_d0,
        exp_sum_out => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_exp_sum_out,
        exp_sum_out_ap_vld => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_exp_sum_out_ap_vld);

    grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69 : component cnn_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_start,
        ap_done => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_done,
        ap_idle => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_idle,
        ap_ready => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_ready,
        prediction_address0 => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_address0,
        prediction_ce0 => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_ce0,
        prediction_we0 => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_we0,
        prediction_d0 => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_d0,
        prediction_address1 => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_address1,
        prediction_ce1 => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_ce1,
        prediction_q1 => prediction_q1,
        exp_sum_reload => grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_exp_sum_out);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_done = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_ap_ready = ap_const_logic_1)) then 
                    grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_ready = ap_const_logic_1)) then 
                    grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_ap_done, grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_ap_done)
    begin
        if ((grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_done)
    begin
        if ((grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_ignore_call11_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call11 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_done, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_done, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    dense_to_softmax_streams_0_read_assign_proc : process(grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_0_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_to_softmax_streams_0_read <= grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_0_read;
        else 
            dense_to_softmax_streams_0_read <= ap_const_logic_0;
        end if; 
    end process;


    dense_to_softmax_streams_1_read_assign_proc : process(grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_1_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_to_softmax_streams_1_read <= grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_1_read;
        else 
            dense_to_softmax_streams_1_read <= ap_const_logic_0;
        end if; 
    end process;


    dense_to_softmax_streams_2_read_assign_proc : process(grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_2_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_to_softmax_streams_2_read <= grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_2_read;
        else 
            dense_to_softmax_streams_2_read <= ap_const_logic_0;
        end if; 
    end process;


    dense_to_softmax_streams_3_read_assign_proc : process(grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_3_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_to_softmax_streams_3_read <= grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_3_read;
        else 
            dense_to_softmax_streams_3_read <= ap_const_logic_0;
        end if; 
    end process;


    dense_to_softmax_streams_4_read_assign_proc : process(grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_4_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_to_softmax_streams_4_read <= grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_4_read;
        else 
            dense_to_softmax_streams_4_read <= ap_const_logic_0;
        end if; 
    end process;


    dense_to_softmax_streams_5_read_assign_proc : process(grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_5_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_to_softmax_streams_5_read <= grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_5_read;
        else 
            dense_to_softmax_streams_5_read <= ap_const_logic_0;
        end if; 
    end process;


    dense_to_softmax_streams_6_read_assign_proc : process(grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_6_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_to_softmax_streams_6_read <= grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_6_read;
        else 
            dense_to_softmax_streams_6_read <= ap_const_logic_0;
        end if; 
    end process;


    dense_to_softmax_streams_7_read_assign_proc : process(grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_7_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_to_softmax_streams_7_read <= grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_dense_to_softmax_streams_7_read;
        else 
            dense_to_softmax_streams_7_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_ap_start <= grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_ap_start_reg;
    grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_start <= grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_ap_start_reg;

    prediction_address0_assign_proc : process(grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_prediction_address0, grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            prediction_address0 <= grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            prediction_address0 <= grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_prediction_address0;
        else 
            prediction_address0 <= "XXXX";
        end if; 
    end process;

    prediction_address1 <= grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_address1;

    prediction_ce0_assign_proc : process(grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_prediction_ce0, grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            prediction_ce0 <= grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            prediction_ce0 <= grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_prediction_ce0;
        else 
            prediction_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    prediction_ce1_assign_proc : process(grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_ce1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            prediction_ce1 <= grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_ce1;
        else 
            prediction_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    prediction_d0_assign_proc : process(grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_prediction_d0, grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_d0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            prediction_d0 <= grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            prediction_d0 <= grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_prediction_d0;
        else 
            prediction_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    prediction_we0_assign_proc : process(grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_prediction_we0, grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_we0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            prediction_we0 <= grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_digits_fu_69_prediction_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            prediction_we0 <= grp_dense_layer_soft_max_Pipeline_dense_soft_max_for_dense_size_fu_44_prediction_we0;
        else 
            prediction_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
