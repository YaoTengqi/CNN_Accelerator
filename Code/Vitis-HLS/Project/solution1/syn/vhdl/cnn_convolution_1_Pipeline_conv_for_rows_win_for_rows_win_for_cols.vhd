-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_convolution_1_Pipeline_conv_for_rows_win_for_rows_win_for_cols is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    pad_img_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce0 : OUT STD_LOGIC;
    pad_img_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce1 : OUT STD_LOGIC;
    pad_img_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    w : IN STD_LOGIC_VECTOR (31 downto 0);
    w_15 : IN STD_LOGIC_VECTOR (31 downto 0);
    w_8 : IN STD_LOGIC_VECTOR (31 downto 0);
    w_9 : IN STD_LOGIC_VECTOR (31 downto 0);
    w_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    w_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    w_3 : IN STD_LOGIC_VECTOR (31 downto 0);
    w_4 : IN STD_LOGIC_VECTOR (31 downto 0);
    w_5 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv7 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_1_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    conv_to_pool_streams_1_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    conv_to_pool_streams_1_full_n : IN STD_LOGIC;
    conv_to_pool_streams_1_write : OUT STD_LOGIC );
end;


architecture behav of cnn_convolution_1_Pipeline_conv_for_rows_win_for_rows_win_for_cols is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv10_310 : STD_LOGIC_VECTOR (9 downto 0) := "1100010000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv7_38 : STD_LOGIC_VECTOR (6 downto 0) := "0111000";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state15_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state20_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state25_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state30_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_state35_pp0_stage4_iter6 : BOOLEAN;
    signal ap_block_state40_pp0_stage4_iter7 : BOOLEAN;
    signal ap_block_state45_pp0_stage4_iter8 : BOOLEAN;
    signal ap_block_state50_pp0_stage4_iter9 : BOOLEAN;
    signal ap_block_state55_pp0_stage4_iter10 : BOOLEAN;
    signal ap_block_state60_pp0_stage4_iter11 : BOOLEAN;
    signal ap_block_state65_pp0_stage4_iter12 : BOOLEAN;
    signal ap_block_state70_pp0_stage4_iter13 : BOOLEAN;
    signal ap_block_state75_pp0_stage4_iter14 : BOOLEAN;
    signal ap_block_state80_pp0_stage4_iter15 : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal icmp_ln39_reg_1054 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage4 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal conv_to_pool_streams_1_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state36_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state46_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state51_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state56_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state61_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state66_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state71_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state76_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state81_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal wr_8_reg_1041 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_8_reg_1046 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln39_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1054_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1054_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1054_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1054_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1054_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1054_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1054_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1054_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1054_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1054_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1054_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1054_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1054_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1054_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln39_fu_374_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln39_reg_1058 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln42_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1064 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln39_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln39_reg_1075 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln45_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln45_reg_1080 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln39_7_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln39_7_reg_1085 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln42_fu_410_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln42_reg_1094 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln65_fu_663_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln65_reg_1100 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state17_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state27_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state32_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state37_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state42_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state47_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state52_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_state57_pp0_stage1_iter11 : BOOLEAN;
    signal ap_block_state62_pp0_stage1_iter12 : BOOLEAN;
    signal ap_block_state67_pp0_stage1_iter13 : BOOLEAN;
    signal ap_block_state72_pp0_stage1_iter14 : BOOLEAN;
    signal ap_block_state77_pp0_stage1_iter15 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal select_ln45_32_fu_675_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln45_32_reg_1107 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln45_33_fu_689_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln45_33_reg_1113 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_109_fu_708_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_109_reg_1119 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln65_13_fu_758_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln65_13_reg_1126 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state18_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state23_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state28_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state33_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state38_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state43_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_state48_pp0_stage2_iter9 : BOOLEAN;
    signal ap_block_state53_pp0_stage2_iter10 : BOOLEAN;
    signal ap_block_state58_pp0_stage2_iter11 : BOOLEAN;
    signal ap_block_state63_pp0_stage2_iter12 : BOOLEAN;
    signal ap_block_state68_pp0_stage2_iter13 : BOOLEAN;
    signal ap_block_state73_pp0_stage2_iter14 : BOOLEAN;
    signal ap_block_state78_pp0_stage2_iter15 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal zext_ln65_101_fu_764_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln65_101_reg_1133 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln65_105_fu_782_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln65_105_reg_1144 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state14_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state19_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state24_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state29_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state34_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state39_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_state44_pp0_stage3_iter8 : BOOLEAN;
    signal ap_block_state49_pp0_stage3_iter9 : BOOLEAN;
    signal ap_block_state54_pp0_stage3_iter10 : BOOLEAN;
    signal ap_block_state59_pp0_stage3_iter11 : BOOLEAN;
    signal ap_block_state64_pp0_stage3_iter12 : BOOLEAN;
    signal ap_block_state69_pp0_stage3_iter13 : BOOLEAN;
    signal ap_block_state74_pp0_stage3_iter14 : BOOLEAN;
    signal ap_block_state79_pp0_stage3_iter15 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal pixel_reg_1160 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixel_57_reg_1165 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln65_109_fu_810_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln65_109_reg_1170 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln65_102_fu_848_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln65_102_reg_1181 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal add_ln65_105_fu_862_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln65_105_reg_1191 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln65_108_fu_876_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln65_108_reg_1201 : STD_LOGIC_VECTOR (9 downto 0);
    signal pixel_58_reg_1206 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixel_59_reg_1211 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixel_60_reg_1226 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixel_61_reg_1231 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixel_62_reg_1241 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixel_63_reg_1246 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_299_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_1251 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_303_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_s_reg_1256 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_s_reg_1256_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal pixel_64_reg_1261 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_9_reg_1266 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_9_reg_1266_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_9_reg_1266_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_1271 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_1271_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_1271_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_1271_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_1271_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_reg_1276 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_reg_1276_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_reg_1276_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_reg_1276_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_reg_1276_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_reg_1276_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_reg_1281 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_reg_1281_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_reg_1281_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_reg_1281_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_reg_1281_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_reg_1281_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_reg_1281_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_1286 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_1286_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_1286_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_1286_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_1286_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_1286_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_1286_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_1286_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_1_reg_1291 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_1_reg_1291_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_1_reg_1291_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_1_reg_1291_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_1_reg_1291_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_1_reg_1291_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_1_reg_1291_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_1_reg_1291_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_1_reg_1291_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_1_reg_1291_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1296 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1296_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1296_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1296_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1296_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1296_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1296_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1296_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1296_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1296_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1296_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_290_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_reg_1301 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_49_reg_1306 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_50_reg_1311 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_51_reg_1316 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_52_reg_1321 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_295_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_53_reg_1326 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_54_reg_1331 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_55_reg_1336 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_56_reg_1341 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_reg_1346 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln77_fu_934_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln77_reg_1352 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln65_102_fu_772_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln65_106_fu_791_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln65_103_fu_800_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln65_110_fu_819_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln65_107_fu_857_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln65_111_fu_871_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln65_104_fu_881_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln65_108_fu_885_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln65_112_fu_889_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal wc_fu_114 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln47_fu_714_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal wr_fu_118 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln45_34_fu_697_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_wr_8 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_fu_122 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln45_35_fu_424_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (3 downto 0);
    signal c_fu_126 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln42_34_fu_595_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten25_fu_130 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln42_35_fu_438_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_allocacmp_indvar_flatten25_load : STD_LOGIC_VECTOR (6 downto 0);
    signal r_fu_134 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln39_29_fu_535_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_allocacmp_r_8 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten59_fu_138 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln39_7_fu_362_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_indvar_flatten59_load : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_290_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_290_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_295_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_295_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_299_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_299_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_303_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_303_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln42_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln45_7_fu_418_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln42_7_fu_432_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln45_fu_461_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_fu_464_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln65_94_fu_500_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln65_14_fu_469_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln65_95_fu_512_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln65_15_fu_475_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln47_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln39_fu_487_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln39_26_fu_494_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln65_96_fu_553_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln39_27_fu_505_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln65_97_fu_566_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln39_28_fu_517_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal xor_ln42_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln39_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_7_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln42_fu_540_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln42_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln45_fu_607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln45_8_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln45_fu_602_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln45_7_fu_625_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid1_fu_629_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln42_31_fu_546_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln45_31_fu_635_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_38_fu_651_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_37_fu_643_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln65_fu_659_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln65_98_fu_669_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln42_32_fu_559_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln65_99_fu_683_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln42_33_fu_572_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln45_fu_617_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln47_fu_704_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_40_fu_747_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_39_fu_740_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln65_99_fu_754_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln65_100_fu_767_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln65_fu_777_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln65_103_fu_786_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln65_101_fu_796_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln65_7_fu_805_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln65_106_fu_814_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_42_fu_831_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_41_fu_824_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln65_100_fu_838_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln65_14_fu_842_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln65_104_fu_853_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln65_107_fu_867_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal bitcast_ln7_fu_893_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_896_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln7_fu_906_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln7_7_fu_916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_fu_910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln7_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln7_fu_928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_290_ce : STD_LOGIC;
    signal grp_fu_295_ce : STD_LOGIC;
    signal grp_fu_299_ce : STD_LOGIC;
    signal grp_fu_303_ce : STD_LOGIC;
    signal grp_fu_307_ce : STD_LOGIC;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter15_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to14 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0_1to16 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_fadd_32ns_32ns_32_7_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component cnn_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fadd_32ns_32ns_32_7_full_dsp_1_U64 : component cnn_fadd_32ns_32ns_32_7_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_290_p0,
        din1 => grp_fu_290_p1,
        ce => grp_fu_290_ce,
        dout => grp_fu_290_p2);

    fadd_32ns_32ns_32_7_full_dsp_1_U65 : component cnn_fadd_32ns_32ns_32_7_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_295_p0,
        din1 => grp_fu_295_p1,
        ce => grp_fu_295_ce,
        dout => grp_fu_295_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U66 : component cnn_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_299_p0,
        din1 => grp_fu_299_p1,
        ce => grp_fu_299_ce,
        dout => grp_fu_299_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U67 : component cnn_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_303_p0,
        din1 => grp_fu_303_p1,
        ce => grp_fu_303_ce,
        dout => grp_fu_303_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U68 : component cnn_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => x_assign_reg_1346,
        din1 => ap_const_lv32_0,
        ce => grp_fu_307_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_307_p2);

    flow_control_loop_pipe_sequential_init_U : component cnn_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage4,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter15_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage4)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter10_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter11_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter12_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter13_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter13_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter14_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter14_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter15_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter15_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter8_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter9_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
            end if; 
        end if;
    end process;

    c_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                c_fu_126 <= ap_const_lv5_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln39_reg_1054 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                c_fu_126 <= select_ln42_34_fu_595_p3;
            end if; 
        end if;
    end process;

    indvar_flatten25_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln39_fu_356_p2 = ap_const_lv1_0))) then 
                    indvar_flatten25_fu_130 <= select_ln42_35_fu_438_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten25_fu_130 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten59_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln39_fu_356_p2 = ap_const_lv1_0))) then 
                    indvar_flatten59_fu_138 <= add_ln39_7_fu_362_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten59_fu_138 <= ap_const_lv10_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln39_fu_356_p2 = ap_const_lv1_0))) then 
                    indvar_flatten_fu_122 <= select_ln45_35_fu_424_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_122 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;

    r_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                r_fu_134 <= ap_const_lv5_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln39_reg_1054 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                r_fu_134 <= select_ln39_29_fu_535_p3;
            end if; 
        end if;
    end process;

    wc_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                wc_fu_114 <= ap_const_lv2_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln39_reg_1054 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                wc_fu_114 <= add_ln47_fu_714_p2;
            end if; 
        end if;
    end process;

    wr_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                wr_fu_118 <= ap_const_lv2_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln39_reg_1054 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                wr_fu_118 <= select_ln45_34_fu_697_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln39_fu_356_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln39_reg_1058 <= add_ln39_fu_374_p2;
                and_ln39_7_reg_1085 <= and_ln39_7_fu_398_p2;
                icmp_ln42_reg_1064 <= icmp_ln42_fu_380_p2;
                icmp_ln45_reg_1080 <= icmp_ln45_fu_392_p2;
                select_ln42_reg_1094 <= select_ln42_fu_410_p3;
                xor_ln39_reg_1075 <= xor_ln39_fu_386_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln39_reg_1054 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                add_ln65_102_reg_1181 <= add_ln65_102_fu_848_p2;
                add_ln65_105_reg_1191 <= add_ln65_105_fu_862_p2;
                add_ln65_108_reg_1201 <= add_ln65_108_fu_876_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln39_reg_1054 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                empty_109_reg_1119 <= empty_109_fu_708_p2;
                select_ln45_32_reg_1107 <= select_ln45_32_fu_675_p3;
                select_ln45_33_reg_1113 <= select_ln45_33_fu_689_p3;
                    sub_ln65_reg_1100(9 downto 1) <= sub_ln65_fu_663_p2(9 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln39_reg_1054 <= icmp_ln39_fu_356_p2;
                icmp_ln39_reg_1054_pp0_iter10_reg <= icmp_ln39_reg_1054_pp0_iter9_reg;
                icmp_ln39_reg_1054_pp0_iter11_reg <= icmp_ln39_reg_1054_pp0_iter10_reg;
                icmp_ln39_reg_1054_pp0_iter12_reg <= icmp_ln39_reg_1054_pp0_iter11_reg;
                icmp_ln39_reg_1054_pp0_iter13_reg <= icmp_ln39_reg_1054_pp0_iter12_reg;
                icmp_ln39_reg_1054_pp0_iter14_reg <= icmp_ln39_reg_1054_pp0_iter13_reg;
                icmp_ln39_reg_1054_pp0_iter1_reg <= icmp_ln39_reg_1054;
                icmp_ln39_reg_1054_pp0_iter2_reg <= icmp_ln39_reg_1054_pp0_iter1_reg;
                icmp_ln39_reg_1054_pp0_iter3_reg <= icmp_ln39_reg_1054_pp0_iter2_reg;
                icmp_ln39_reg_1054_pp0_iter4_reg <= icmp_ln39_reg_1054_pp0_iter3_reg;
                icmp_ln39_reg_1054_pp0_iter5_reg <= icmp_ln39_reg_1054_pp0_iter4_reg;
                icmp_ln39_reg_1054_pp0_iter6_reg <= icmp_ln39_reg_1054_pp0_iter5_reg;
                icmp_ln39_reg_1054_pp0_iter7_reg <= icmp_ln39_reg_1054_pp0_iter6_reg;
                icmp_ln39_reg_1054_pp0_iter8_reg <= icmp_ln39_reg_1054_pp0_iter7_reg;
                icmp_ln39_reg_1054_pp0_iter9_reg <= icmp_ln39_reg_1054_pp0_iter8_reg;
                mul_2_1_reg_1291_pp0_iter10_reg <= mul_2_1_reg_1291_pp0_iter9_reg;
                mul_2_1_reg_1291_pp0_iter11_reg <= mul_2_1_reg_1291_pp0_iter10_reg;
                mul_2_1_reg_1291_pp0_iter3_reg <= mul_2_1_reg_1291;
                mul_2_1_reg_1291_pp0_iter4_reg <= mul_2_1_reg_1291_pp0_iter3_reg;
                mul_2_1_reg_1291_pp0_iter5_reg <= mul_2_1_reg_1291_pp0_iter4_reg;
                mul_2_1_reg_1291_pp0_iter6_reg <= mul_2_1_reg_1291_pp0_iter5_reg;
                mul_2_1_reg_1291_pp0_iter7_reg <= mul_2_1_reg_1291_pp0_iter6_reg;
                mul_2_1_reg_1291_pp0_iter8_reg <= mul_2_1_reg_1291_pp0_iter7_reg;
                mul_2_1_reg_1291_pp0_iter9_reg <= mul_2_1_reg_1291_pp0_iter8_reg;
                mul_2_reg_1286_pp0_iter3_reg <= mul_2_reg_1286;
                mul_2_reg_1286_pp0_iter4_reg <= mul_2_reg_1286_pp0_iter3_reg;
                mul_2_reg_1286_pp0_iter5_reg <= mul_2_reg_1286_pp0_iter4_reg;
                mul_2_reg_1286_pp0_iter6_reg <= mul_2_reg_1286_pp0_iter5_reg;
                mul_2_reg_1286_pp0_iter7_reg <= mul_2_reg_1286_pp0_iter6_reg;
                mul_2_reg_1286_pp0_iter8_reg <= mul_2_reg_1286_pp0_iter7_reg;
                mul_2_reg_1286_pp0_iter9_reg <= mul_2_reg_1286_pp0_iter8_reg;
                r_8_reg_1046 <= ap_sig_allocacmp_r_8;
                wr_8_reg_1041 <= ap_sig_allocacmp_wr_8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                mul_1_1_reg_1276 <= grp_fu_299_p2;
                mul_1_2_reg_1281 <= grp_fu_303_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                mul_1_1_reg_1276_pp0_iter2_reg <= mul_1_1_reg_1276;
                mul_1_1_reg_1276_pp0_iter3_reg <= mul_1_1_reg_1276_pp0_iter2_reg;
                mul_1_1_reg_1276_pp0_iter4_reg <= mul_1_1_reg_1276_pp0_iter3_reg;
                mul_1_1_reg_1276_pp0_iter5_reg <= mul_1_1_reg_1276_pp0_iter4_reg;
                mul_1_1_reg_1276_pp0_iter6_reg <= mul_1_1_reg_1276_pp0_iter5_reg;
                mul_1_2_reg_1281_pp0_iter2_reg <= mul_1_2_reg_1281;
                mul_1_2_reg_1281_pp0_iter3_reg <= mul_1_2_reg_1281_pp0_iter2_reg;
                mul_1_2_reg_1281_pp0_iter4_reg <= mul_1_2_reg_1281_pp0_iter3_reg;
                mul_1_2_reg_1281_pp0_iter5_reg <= mul_1_2_reg_1281_pp0_iter4_reg;
                mul_1_2_reg_1281_pp0_iter6_reg <= mul_1_2_reg_1281_pp0_iter5_reg;
                mul_1_2_reg_1281_pp0_iter7_reg <= mul_1_2_reg_1281_pp0_iter6_reg;
                select_ln77_reg_1352 <= select_ln77_fu_934_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                mul_1_reg_1271 <= grp_fu_303_p2;
                mul_9_reg_1266 <= grp_fu_299_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                mul_1_reg_1271_pp0_iter2_reg <= mul_1_reg_1271;
                mul_1_reg_1271_pp0_iter3_reg <= mul_1_reg_1271_pp0_iter2_reg;
                mul_1_reg_1271_pp0_iter4_reg <= mul_1_reg_1271_pp0_iter3_reg;
                mul_1_reg_1271_pp0_iter5_reg <= mul_1_reg_1271_pp0_iter4_reg;
                mul_9_reg_1266_pp0_iter2_reg <= mul_9_reg_1266;
                mul_9_reg_1266_pp0_iter3_reg <= mul_9_reg_1266_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mul_2_1_reg_1291 <= grp_fu_303_p2;
                mul_2_reg_1286 <= grp_fu_299_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                mul_2_2_reg_1296 <= grp_fu_299_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                mul_2_2_reg_1296_pp0_iter10_reg <= mul_2_2_reg_1296_pp0_iter9_reg;
                mul_2_2_reg_1296_pp0_iter11_reg <= mul_2_2_reg_1296_pp0_iter10_reg;
                mul_2_2_reg_1296_pp0_iter12_reg <= mul_2_2_reg_1296_pp0_iter11_reg;
                mul_2_2_reg_1296_pp0_iter3_reg <= mul_2_2_reg_1296;
                mul_2_2_reg_1296_pp0_iter4_reg <= mul_2_2_reg_1296_pp0_iter3_reg;
                mul_2_2_reg_1296_pp0_iter5_reg <= mul_2_2_reg_1296_pp0_iter4_reg;
                mul_2_2_reg_1296_pp0_iter6_reg <= mul_2_2_reg_1296_pp0_iter5_reg;
                mul_2_2_reg_1296_pp0_iter7_reg <= mul_2_2_reg_1296_pp0_iter6_reg;
                mul_2_2_reg_1296_pp0_iter8_reg <= mul_2_2_reg_1296_pp0_iter7_reg;
                mul_2_2_reg_1296_pp0_iter9_reg <= mul_2_2_reg_1296_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                mul_reg_1251 <= grp_fu_299_p2;
                mul_s_reg_1256 <= grp_fu_303_p2;
                pixel_64_reg_1261 <= pad_img_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                mul_s_reg_1256_pp0_iter2_reg <= mul_s_reg_1256;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln39_reg_1054 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                pixel_57_reg_1165 <= pad_img_q0;
                pixel_reg_1160 <= pad_img_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln39_reg_1054 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                pixel_58_reg_1206 <= pad_img_q1;
                pixel_59_reg_1211 <= pad_img_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                pixel_60_reg_1226 <= pad_img_q1;
                pixel_61_reg_1231 <= pad_img_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                pixel_62_reg_1241 <= pad_img_q1;
                pixel_63_reg_1246 <= pad_img_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln39_reg_1054 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                    sub_ln65_13_reg_1126(9 downto 1) <= sub_ln65_13_fu_758_p2(9 downto 1);
                    zext_ln65_101_reg_1133(4 downto 0) <= zext_ln65_101_fu_764_p1(4 downto 0);
                    zext_ln65_105_reg_1144(4 downto 0) <= zext_ln65_105_fu_782_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                w_sum_49_reg_1306 <= grp_fu_290_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                w_sum_50_reg_1311 <= grp_fu_290_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                w_sum_51_reg_1316 <= grp_fu_290_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                w_sum_52_reg_1321 <= grp_fu_290_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                w_sum_53_reg_1326 <= grp_fu_295_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                w_sum_54_reg_1331 <= grp_fu_295_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                w_sum_55_reg_1336 <= grp_fu_295_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                w_sum_56_reg_1341 <= grp_fu_295_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                w_sum_reg_1301 <= grp_fu_290_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                x_assign_reg_1346 <= grp_fu_295_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln39_reg_1054 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                    zext_ln65_109_reg_1170(4 downto 0) <= zext_ln65_109_fu_810_p1(4 downto 0);
            end if;
        end if;
    end process;
    sub_ln65_reg_1100(0) <= '0';
    sub_ln65_13_reg_1126(0) <= '0';
    zext_ln65_101_reg_1133(9 downto 5) <= "00000";
    zext_ln65_105_reg_1144(9 downto 5) <= "00000";
    zext_ln65_109_reg_1170(9 downto 5) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage4_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter15_stage0, ap_idle_pp0_0to14, ap_idle_pp0_1to16, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to16 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln39_7_fu_362_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten59_load) + unsigned(ap_const_lv10_1));
    add_ln39_fu_374_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_r_8) + unsigned(ap_const_lv5_2));
    add_ln42_7_fu_432_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten25_load) + unsigned(ap_const_lv7_1));
    add_ln42_fu_540_p2 <= std_logic_vector(unsigned(select_ln39_fu_487_p3) + unsigned(ap_const_lv5_2));
    add_ln45_7_fu_418_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv4_1));
    add_ln45_fu_602_p2 <= std_logic_vector(unsigned(select_ln42_reg_1094) + unsigned(ap_const_lv2_1));
    add_ln47_fu_714_p2 <= std_logic_vector(unsigned(select_ln45_fu_617_p3) + unsigned(ap_const_lv2_1));
    add_ln65_100_fu_767_p2 <= std_logic_vector(unsigned(sub_ln65_reg_1100) + unsigned(zext_ln65_101_fu_764_p1));
    add_ln65_101_fu_796_p2 <= std_logic_vector(unsigned(sub_ln65_13_reg_1126) + unsigned(zext_ln65_101_reg_1133));
    add_ln65_102_fu_848_p2 <= std_logic_vector(unsigned(sub_ln65_14_fu_842_p2) + unsigned(zext_ln65_101_reg_1133));
    add_ln65_103_fu_786_p2 <= std_logic_vector(unsigned(sub_ln65_reg_1100) + unsigned(zext_ln65_105_fu_782_p1));
    add_ln65_104_fu_853_p2 <= std_logic_vector(unsigned(sub_ln65_13_reg_1126) + unsigned(zext_ln65_105_reg_1144));
    add_ln65_105_fu_862_p2 <= std_logic_vector(unsigned(sub_ln65_14_fu_842_p2) + unsigned(zext_ln65_105_reg_1144));
    add_ln65_106_fu_814_p2 <= std_logic_vector(unsigned(sub_ln65_reg_1100) + unsigned(zext_ln65_109_fu_810_p1));
    add_ln65_107_fu_867_p2 <= std_logic_vector(unsigned(sub_ln65_13_reg_1126) + unsigned(zext_ln65_109_reg_1170));
    add_ln65_108_fu_876_p2 <= std_logic_vector(unsigned(sub_ln65_14_fu_842_p2) + unsigned(zext_ln65_109_reg_1170));
    add_ln65_14_fu_469_p2 <= std_logic_vector(unsigned(empty_fu_464_p2) + unsigned(ap_const_lv5_1));
    add_ln65_15_fu_475_p2 <= std_logic_vector(unsigned(empty_fu_464_p2) + unsigned(ap_const_lv5_2));
    add_ln65_7_fu_805_p2 <= std_logic_vector(unsigned(empty_109_reg_1119) + unsigned(ap_const_lv5_2));
    add_ln65_94_fu_500_p2 <= std_logic_vector(unsigned(r_8_reg_1046) + unsigned(ap_const_lv5_3));
    add_ln65_95_fu_512_p2 <= std_logic_vector(unsigned(r_8_reg_1046) + unsigned(ap_const_lv5_4));
    add_ln65_96_fu_553_p2 <= std_logic_vector(unsigned(select_ln39_29_fu_535_p3) + unsigned(ap_const_lv5_1));
    add_ln65_97_fu_566_p2 <= std_logic_vector(unsigned(select_ln39_29_fu_535_p3) + unsigned(ap_const_lv5_2));
    add_ln65_98_fu_669_p2 <= std_logic_vector(unsigned(p_mid1_fu_629_p2) + unsigned(ap_const_lv5_1));
    add_ln65_99_fu_683_p2 <= std_logic_vector(unsigned(p_mid1_fu_629_p2) + unsigned(ap_const_lv5_2));
    add_ln65_fu_777_p2 <= std_logic_vector(unsigned(empty_109_reg_1119) + unsigned(ap_const_lv5_1));
    and_ln39_7_fu_398_p2 <= (xor_ln39_fu_386_p2 and icmp_ln45_fu_392_p2);
    and_ln39_fu_530_p2 <= (xor_ln39_reg_1075 and icmp_ln47_fu_524_p2);
    and_ln42_fu_589_p2 <= (or_ln42_7_fu_584_p2 and and_ln39_fu_530_p2);
    and_ln7_fu_928_p2 <= (or_ln7_fu_922_p2 and grp_fu_307_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter16, conv_to_pool_streams_1_full_n)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (conv_to_pool_streams_1_full_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter16, conv_to_pool_streams_1_full_n)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (conv_to_pool_streams_1_full_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter16, conv_to_pool_streams_1_full_n)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (conv_to_pool_streams_1_full_n = ap_const_logic_0));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage4_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage3_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage4_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage2_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage3_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage4_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage2_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage3_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage4_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage1_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage2_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage3_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage4_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage1_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage2_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage3_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage4_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage1_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage2_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage3_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage4_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp0_stage1_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp0_stage2_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp0_stage3_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp0_stage4_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp0_stage1_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp0_stage2_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp0_stage3_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp0_stage4_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state81_pp0_stage0_iter16_assign_proc : process(conv_to_pool_streams_1_full_n)
    begin
                ap_block_state81_pp0_stage0_iter16 <= (conv_to_pool_streams_1_full_n = ap_const_logic_0);
    end process;

        ap_block_state8_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone, icmp_ln39_reg_1054)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln39_reg_1054 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
            ap_condition_exit_pp0_iter0_stage4 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter15_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter15, icmp_ln39_reg_1054_pp0_iter14_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (icmp_ln39_reg_1054_pp0_iter14_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter15_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter15_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter15_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter15_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to14_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to14 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to16_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to16 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to16 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage4;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten25_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten25_fu_130)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten25_load <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_indvar_flatten25_load <= indvar_flatten25_fu_130;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten59_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten59_fu_138)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten59_load <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_indvar_flatten59_load <= indvar_flatten59_fu_138;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_122)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_122;
        end if; 
    end process;


    ap_sig_allocacmp_r_8_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, r_fu_134)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_r_8 <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_r_8 <= r_fu_134;
        end if; 
    end process;


    ap_sig_allocacmp_wr_8_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, wr_fu_118)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_wr_8 <= ap_const_lv2_0;
        else 
            ap_sig_allocacmp_wr_8 <= wr_fu_118;
        end if; 
    end process;

    bitcast_ln7_fu_893_p1 <= x_assign_reg_1346;

    conv_to_pool_streams_1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter16, conv_to_pool_streams_1_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            conv_to_pool_streams_1_blk_n <= conv_to_pool_streams_1_full_n;
        else 
            conv_to_pool_streams_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    conv_to_pool_streams_1_din <= select_ln77_reg_1352;

    conv_to_pool_streams_1_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_to_pool_streams_1_write <= ap_const_logic_1;
        else 
            conv_to_pool_streams_1_write <= ap_const_logic_0;
        end if; 
    end process;

    empty_109_fu_708_p2 <= std_logic_vector(unsigned(select_ln42_34_fu_595_p3) + unsigned(zext_ln47_fu_704_p1));
    empty_fu_464_p2 <= std_logic_vector(unsigned(r_8_reg_1046) + unsigned(zext_ln45_fu_461_p1));

    grp_fu_290_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_290_ce <= ap_const_logic_1;
        else 
            grp_fu_290_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_290_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, mul_reg_1251, w_sum_reg_1301, w_sum_49_reg_1306, w_sum_50_reg_1311, w_sum_51_reg_1316, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_290_p0 <= w_sum_51_reg_1316;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_290_p0 <= w_sum_50_reg_1311;
        elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_290_p0 <= w_sum_49_reg_1306;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_290_p0 <= w_sum_reg_1301;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_290_p0 <= mul_reg_1251;
        else 
            grp_fu_290_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_290_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, mul_s_reg_1256_pp0_iter2_reg, mul_9_reg_1266_pp0_iter3_reg, mul_1_reg_1271_pp0_iter5_reg, mul_1_1_reg_1276_pp0_iter6_reg, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_290_p1 <= mul_1_1_reg_1276_pp0_iter6_reg;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_290_p1 <= mul_1_reg_1271_pp0_iter5_reg;
        elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_290_p1 <= mul_9_reg_1266_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_290_p1 <= mul_s_reg_1256_pp0_iter2_reg;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_290_p1 <= ap_const_lv32_0;
        else 
            grp_fu_290_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_295_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_295_ce <= ap_const_logic_1;
        else 
            grp_fu_295_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_295_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter14, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, w_sum_52_reg_1321, w_sum_53_reg_1326, w_sum_54_reg_1331, w_sum_55_reg_1336, w_sum_56_reg_1341, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_295_p0 <= w_sum_56_reg_1341;
        elsif (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_295_p0 <= w_sum_55_reg_1336;
        elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_295_p0 <= w_sum_54_reg_1331;
        elsif (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_295_p0 <= w_sum_53_reg_1326;
        elsif (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_295_p0 <= w_sum_52_reg_1321;
        else 
            grp_fu_295_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_295_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter14, ap_CS_fsm_pp0_stage4, conv7, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, mul_1_2_reg_1281_pp0_iter7_reg, mul_2_reg_1286_pp0_iter9_reg, mul_2_1_reg_1291_pp0_iter11_reg, mul_2_2_reg_1296_pp0_iter12_reg, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_295_p1 <= conv7;
        elsif (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_295_p1 <= mul_2_2_reg_1296_pp0_iter12_reg;
        elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_295_p1 <= mul_2_1_reg_1291_pp0_iter11_reg;
        elsif (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_295_p1 <= mul_2_reg_1286_pp0_iter9_reg;
        elsif (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_295_p1 <= mul_1_2_reg_1281_pp0_iter7_reg;
        else 
            grp_fu_295_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_299_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_299_ce <= ap_const_logic_1;
        else 
            grp_fu_299_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_299_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, w, w_8, w_1, w_3, w_5, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_299_p0 <= w_5;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_299_p0 <= w_3;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_299_p0 <= w_1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_299_p0 <= w_8;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_299_p0 <= w;
        else 
            grp_fu_299_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_299_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, pixel_reg_1160, pixel_58_reg_1206, pixel_60_reg_1226, pixel_62_reg_1241, pixel_64_reg_1261, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_299_p1 <= pixel_64_reg_1261;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_299_p1 <= pixel_62_reg_1241;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_299_p1 <= pixel_60_reg_1226;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_299_p1 <= pixel_58_reg_1206;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_299_p1 <= pixel_reg_1160;
        else 
            grp_fu_299_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_303_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_303_ce <= ap_const_logic_1;
        else 
            grp_fu_303_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_303_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, w_15, w_9, w_2, w_4, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_303_p0 <= w_4;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_303_p0 <= w_2;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_303_p0 <= w_9;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_303_p0 <= w_15;
        else 
            grp_fu_303_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_303_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, pixel_57_reg_1165, pixel_59_reg_1211, pixel_61_reg_1231, pixel_63_reg_1246, ap_block_pp0_stage2, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_303_p1 <= pixel_63_reg_1246;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_303_p1 <= pixel_61_reg_1231;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_303_p1 <= pixel_59_reg_1211;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_303_p1 <= pixel_57_reg_1165;
        else 
            grp_fu_303_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_307_ce_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            grp_fu_307_ce <= ap_const_logic_1;
        else 
            grp_fu_307_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln39_fu_356_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten59_load = ap_const_lv10_310) else "0";
    icmp_ln42_fu_380_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten25_load = ap_const_lv7_38) else "0";
    icmp_ln45_fu_392_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv4_4) else "0";
    icmp_ln47_fu_524_p2 <= "1" when (wc_fu_114 = ap_const_lv2_2) else "0";
    icmp_ln7_7_fu_916_p2 <= "1" when (trunc_ln7_fu_906_p1 = ap_const_lv23_0) else "0";
    icmp_ln7_fu_910_p2 <= "0" when (tmp_fu_896_p4 = ap_const_lv8_FF) else "1";
    or_ln42_7_fu_584_p2 <= (xor_ln42_fu_579_p2 or icmp_ln42_reg_1064);
    or_ln42_fu_404_p2 <= (icmp_ln42_fu_380_p2 or and_ln39_7_fu_398_p2);
    or_ln45_8_fu_612_p2 <= (or_ln45_fu_607_p2 or icmp_ln42_reg_1064);
    or_ln45_fu_607_p2 <= (and_ln42_fu_589_p2 or and_ln39_7_reg_1085);
    or_ln7_fu_922_p2 <= (icmp_ln7_fu_910_p2 or icmp_ln7_7_fu_916_p2);
    p_mid1_fu_629_p2 <= std_logic_vector(unsigned(select_ln39_29_fu_535_p3) + unsigned(zext_ln45_7_fu_625_p1));

    pad_img_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2, zext_ln65_106_fu_791_p1, zext_ln65_103_fu_800_p1, ap_block_pp0_stage3, ap_block_pp0_stage4, zext_ln65_111_fu_871_p1, zext_ln65_108_fu_885_p1, zext_ln65_112_fu_889_p1, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            pad_img_address0 <= zext_ln65_112_fu_889_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            pad_img_address0 <= zext_ln65_108_fu_885_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            pad_img_address0 <= zext_ln65_111_fu_871_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            pad_img_address0 <= zext_ln65_103_fu_800_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            pad_img_address0 <= zext_ln65_106_fu_791_p1(10 - 1 downto 0);
        else 
            pad_img_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    pad_img_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, zext_ln65_102_fu_772_p1, ap_block_pp0_stage2, ap_block_pp0_stage3, zext_ln65_110_fu_819_p1, zext_ln65_107_fu_857_p1, ap_block_pp0_stage4, zext_ln65_104_fu_881_p1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            pad_img_address1 <= zext_ln65_104_fu_881_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            pad_img_address1 <= zext_ln65_107_fu_857_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            pad_img_address1 <= zext_ln65_110_fu_819_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            pad_img_address1 <= zext_ln65_102_fu_772_p1(10 - 1 downto 0);
        else 
            pad_img_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    pad_img_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            pad_img_ce0 <= ap_const_logic_1;
        else 
            pad_img_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pad_img_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            pad_img_ce1 <= ap_const_logic_1;
        else 
            pad_img_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln39_26_fu_494_p3 <= 
        add_ln39_reg_1058 when (icmp_ln42_reg_1064(0) = '1') else 
        empty_fu_464_p2;
    select_ln39_27_fu_505_p3 <= 
        add_ln65_94_fu_500_p2 when (icmp_ln42_reg_1064(0) = '1') else 
        add_ln65_14_fu_469_p2;
    select_ln39_28_fu_517_p3 <= 
        add_ln65_95_fu_512_p2 when (icmp_ln42_reg_1064(0) = '1') else 
        add_ln65_15_fu_475_p2;
    select_ln39_29_fu_535_p3 <= 
        add_ln39_reg_1058 when (icmp_ln42_reg_1064(0) = '1') else 
        r_8_reg_1046;
    select_ln39_fu_487_p3 <= 
        ap_const_lv5_0 when (icmp_ln42_reg_1064(0) = '1') else 
        c_fu_126;
    select_ln42_31_fu_546_p3 <= 
        select_ln39_29_fu_535_p3 when (and_ln39_7_reg_1085(0) = '1') else 
        select_ln39_26_fu_494_p3;
    select_ln42_32_fu_559_p3 <= 
        add_ln65_96_fu_553_p2 when (and_ln39_7_reg_1085(0) = '1') else 
        select_ln39_27_fu_505_p3;
    select_ln42_33_fu_572_p3 <= 
        add_ln65_97_fu_566_p2 when (and_ln39_7_reg_1085(0) = '1') else 
        select_ln39_28_fu_517_p3;
    select_ln42_34_fu_595_p3 <= 
        add_ln42_fu_540_p2 when (and_ln39_7_reg_1085(0) = '1') else 
        select_ln39_fu_487_p3;
    select_ln42_35_fu_438_p3 <= 
        ap_const_lv7_1 when (icmp_ln42_fu_380_p2(0) = '1') else 
        add_ln42_7_fu_432_p2;
    select_ln42_fu_410_p3 <= 
        ap_const_lv2_0 when (or_ln42_fu_404_p2(0) = '1') else 
        ap_sig_allocacmp_wr_8;
    select_ln45_31_fu_635_p3 <= 
        p_mid1_fu_629_p2 when (and_ln42_fu_589_p2(0) = '1') else 
        select_ln42_31_fu_546_p3;
    select_ln45_32_fu_675_p3 <= 
        add_ln65_98_fu_669_p2 when (and_ln42_fu_589_p2(0) = '1') else 
        select_ln42_32_fu_559_p3;
    select_ln45_33_fu_689_p3 <= 
        add_ln65_99_fu_683_p2 when (and_ln42_fu_589_p2(0) = '1') else 
        select_ln42_33_fu_572_p3;
    select_ln45_34_fu_697_p3 <= 
        add_ln45_fu_602_p2 when (and_ln42_fu_589_p2(0) = '1') else 
        select_ln42_reg_1094;
    select_ln45_35_fu_424_p3 <= 
        ap_const_lv4_1 when (or_ln42_fu_404_p2(0) = '1') else 
        add_ln45_7_fu_418_p2;
    select_ln45_fu_617_p3 <= 
        ap_const_lv2_0 when (or_ln45_8_fu_612_p2(0) = '1') else 
        wc_fu_114;
    select_ln77_fu_934_p3 <= 
        bitcast_ln7_fu_893_p1 when (and_ln7_fu_928_p2(0) = '1') else 
        ap_const_lv32_0;
    sub_ln65_13_fu_758_p2 <= std_logic_vector(unsigned(tmp_39_fu_740_p3) - unsigned(zext_ln65_99_fu_754_p1));
    sub_ln65_14_fu_842_p2 <= std_logic_vector(unsigned(tmp_41_fu_824_p3) - unsigned(zext_ln65_100_fu_838_p1));
    sub_ln65_fu_663_p2 <= std_logic_vector(unsigned(tmp_37_fu_643_p3) - unsigned(zext_ln65_fu_659_p1));
    tmp_37_fu_643_p3 <= (select_ln45_31_fu_635_p3 & ap_const_lv5_0);
    tmp_38_fu_651_p3 <= (select_ln45_31_fu_635_p3 & ap_const_lv1_0);
    tmp_39_fu_740_p3 <= (select_ln45_32_reg_1107 & ap_const_lv5_0);
    tmp_40_fu_747_p3 <= (select_ln45_32_reg_1107 & ap_const_lv1_0);
    tmp_41_fu_824_p3 <= (select_ln45_33_reg_1113 & ap_const_lv5_0);
    tmp_42_fu_831_p3 <= (select_ln45_33_reg_1113 & ap_const_lv1_0);
    tmp_fu_896_p4 <= bitcast_ln7_fu_893_p1(30 downto 23);
    trunc_ln7_fu_906_p1 <= bitcast_ln7_fu_893_p1(23 - 1 downto 0);
    xor_ln39_fu_386_p2 <= (icmp_ln42_fu_380_p2 xor ap_const_lv1_1);
    xor_ln42_fu_579_p2 <= (icmp_ln45_reg_1080 xor ap_const_lv1_1);
    zext_ln45_7_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln45_fu_602_p2),5));
    zext_ln45_fu_461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wr_8_reg_1041),5));
    zext_ln47_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln45_fu_617_p3),5));
    zext_ln65_100_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_fu_831_p3),10));
    zext_ln65_101_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_109_reg_1119),10));
    zext_ln65_102_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln65_100_fu_767_p2),64));
    zext_ln65_103_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln65_101_fu_796_p2),64));
    zext_ln65_104_fu_881_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln65_102_reg_1181),64));
    zext_ln65_105_fu_782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln65_fu_777_p2),10));
    zext_ln65_106_fu_791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln65_103_fu_786_p2),64));
    zext_ln65_107_fu_857_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln65_104_fu_853_p2),64));
    zext_ln65_108_fu_885_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln65_105_reg_1191),64));
    zext_ln65_109_fu_810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln65_7_fu_805_p2),10));
    zext_ln65_110_fu_819_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln65_106_fu_814_p2),64));
    zext_ln65_111_fu_871_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln65_107_fu_867_p2),64));
    zext_ln65_112_fu_889_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln65_108_reg_1201),64));
    zext_ln65_99_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_40_fu_747_p3),10));
    zext_ln65_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_651_p3),10));
end behav;
