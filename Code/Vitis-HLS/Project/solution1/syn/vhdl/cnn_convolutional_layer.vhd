-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_convolutional_layer is
port (
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    pad_img_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce0 : OUT STD_LOGIC;
    pad_img_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_we0 : OUT STD_LOGIC;
    pad_img_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce1 : OUT STD_LOGIC;
    pad_img_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_we1 : OUT STD_LOGIC;
    pad_img_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce2 : OUT STD_LOGIC;
    pad_img_d2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_we2 : OUT STD_LOGIC;
    pad_img_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce3 : OUT STD_LOGIC;
    pad_img_d3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_we3 : OUT STD_LOGIC;
    pad_img_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce4 : OUT STD_LOGIC;
    pad_img_d4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img_q4 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_we4 : OUT STD_LOGIC;
    pad_img_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce5 : OUT STD_LOGIC;
    pad_img_d5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img_q5 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_we5 : OUT STD_LOGIC;
    pad_img_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce6 : OUT STD_LOGIC;
    pad_img_d6 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img_q6 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_we6 : OUT STD_LOGIC;
    pad_img_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce7 : OUT STD_LOGIC;
    pad_img_d7 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img_q7 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_we7 : OUT STD_LOGIC;
    pad_img_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce8 : OUT STD_LOGIC;
    pad_img_d8 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img_q8 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_we8 : OUT STD_LOGIC;
    pad_img_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce9 : OUT STD_LOGIC;
    pad_img_d9 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img_q9 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_we9 : OUT STD_LOGIC;
    pad_img_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce10 : OUT STD_LOGIC;
    pad_img_d10 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img_q10 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_we10 : OUT STD_LOGIC;
    pad_img_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce11 : OUT STD_LOGIC;
    pad_img_d11 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img_q11 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_we11 : OUT STD_LOGIC;
    pad_img_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce12 : OUT STD_LOGIC;
    pad_img_d12 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img_q12 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_we12 : OUT STD_LOGIC;
    pad_img_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce13 : OUT STD_LOGIC;
    pad_img_d13 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img_q13 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_we13 : OUT STD_LOGIC;
    pad_img_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce14 : OUT STD_LOGIC;
    pad_img_d14 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img_q14 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_we14 : OUT STD_LOGIC;
    pad_img_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce15 : OUT STD_LOGIC;
    pad_img_d15 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img_q15 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_we15 : OUT STD_LOGIC;
    pad_img_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce16 : OUT STD_LOGIC;
    pad_img_d16 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img_q16 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_we16 : OUT STD_LOGIC;
    pad_img1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img1_ce0 : OUT STD_LOGIC;
    pad_img1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_we0 : OUT STD_LOGIC;
    pad_img1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img1_ce1 : OUT STD_LOGIC;
    pad_img1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_we1 : OUT STD_LOGIC;
    pad_img1_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img1_ce2 : OUT STD_LOGIC;
    pad_img1_d2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_we2 : OUT STD_LOGIC;
    pad_img1_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img1_ce3 : OUT STD_LOGIC;
    pad_img1_d3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_we3 : OUT STD_LOGIC;
    pad_img1_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img1_ce4 : OUT STD_LOGIC;
    pad_img1_d4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_q4 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_we4 : OUT STD_LOGIC;
    pad_img1_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img1_ce5 : OUT STD_LOGIC;
    pad_img1_d5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_q5 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_we5 : OUT STD_LOGIC;
    pad_img1_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img1_ce6 : OUT STD_LOGIC;
    pad_img1_d6 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_q6 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_we6 : OUT STD_LOGIC;
    pad_img1_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img1_ce7 : OUT STD_LOGIC;
    pad_img1_d7 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_q7 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_we7 : OUT STD_LOGIC;
    pad_img1_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img1_ce8 : OUT STD_LOGIC;
    pad_img1_d8 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_q8 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_we8 : OUT STD_LOGIC;
    pad_img1_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img1_ce9 : OUT STD_LOGIC;
    pad_img1_d9 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_q9 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_we9 : OUT STD_LOGIC;
    pad_img1_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img1_ce10 : OUT STD_LOGIC;
    pad_img1_d10 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_q10 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_we10 : OUT STD_LOGIC;
    pad_img1_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img1_ce11 : OUT STD_LOGIC;
    pad_img1_d11 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_q11 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_we11 : OUT STD_LOGIC;
    pad_img1_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img1_ce12 : OUT STD_LOGIC;
    pad_img1_d12 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_q12 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_we12 : OUT STD_LOGIC;
    pad_img1_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img1_ce13 : OUT STD_LOGIC;
    pad_img1_d13 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_q13 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_we13 : OUT STD_LOGIC;
    pad_img1_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img1_ce14 : OUT STD_LOGIC;
    pad_img1_d14 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_q14 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_we14 : OUT STD_LOGIC;
    pad_img1_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img1_ce15 : OUT STD_LOGIC;
    pad_img1_d15 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_q15 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_we15 : OUT STD_LOGIC;
    pad_img1_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img1_ce16 : OUT STD_LOGIC;
    pad_img1_d16 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_q16 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_we16 : OUT STD_LOGIC;
    pad_img2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce0 : OUT STD_LOGIC;
    pad_img2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_we0 : OUT STD_LOGIC;
    pad_img2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce1 : OUT STD_LOGIC;
    pad_img2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_we1 : OUT STD_LOGIC;
    pad_img2_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce2 : OUT STD_LOGIC;
    pad_img2_d2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_we2 : OUT STD_LOGIC;
    pad_img2_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce3 : OUT STD_LOGIC;
    pad_img2_d3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_we3 : OUT STD_LOGIC;
    pad_img2_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce4 : OUT STD_LOGIC;
    pad_img2_d4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_q4 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_we4 : OUT STD_LOGIC;
    pad_img2_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce5 : OUT STD_LOGIC;
    pad_img2_d5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_q5 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_we5 : OUT STD_LOGIC;
    pad_img2_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce6 : OUT STD_LOGIC;
    pad_img2_d6 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_q6 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_we6 : OUT STD_LOGIC;
    pad_img2_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce7 : OUT STD_LOGIC;
    pad_img2_d7 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_q7 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_we7 : OUT STD_LOGIC;
    pad_img2_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce8 : OUT STD_LOGIC;
    pad_img2_d8 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_q8 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_we8 : OUT STD_LOGIC;
    pad_img2_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce9 : OUT STD_LOGIC;
    pad_img2_d9 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_q9 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_we9 : OUT STD_LOGIC;
    pad_img2_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce10 : OUT STD_LOGIC;
    pad_img2_d10 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_q10 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_we10 : OUT STD_LOGIC;
    pad_img2_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce11 : OUT STD_LOGIC;
    pad_img2_d11 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_q11 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_we11 : OUT STD_LOGIC;
    pad_img2_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce12 : OUT STD_LOGIC;
    pad_img2_d12 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_q12 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_we12 : OUT STD_LOGIC;
    pad_img2_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce13 : OUT STD_LOGIC;
    pad_img2_d13 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_q13 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_we13 : OUT STD_LOGIC;
    pad_img2_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce14 : OUT STD_LOGIC;
    pad_img2_d14 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_q14 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_we14 : OUT STD_LOGIC;
    pad_img2_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce15 : OUT STD_LOGIC;
    pad_img2_d15 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_q15 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_we15 : OUT STD_LOGIC;
    pad_img2_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce16 : OUT STD_LOGIC;
    pad_img2_d16 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_q16 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_we16 : OUT STD_LOGIC;
    pad_img3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img3_ce0 : OUT STD_LOGIC;
    pad_img3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_we0 : OUT STD_LOGIC;
    pad_img3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img3_ce1 : OUT STD_LOGIC;
    pad_img3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_we1 : OUT STD_LOGIC;
    pad_img3_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img3_ce2 : OUT STD_LOGIC;
    pad_img3_d2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_we2 : OUT STD_LOGIC;
    pad_img3_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img3_ce3 : OUT STD_LOGIC;
    pad_img3_d3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_we3 : OUT STD_LOGIC;
    pad_img3_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img3_ce4 : OUT STD_LOGIC;
    pad_img3_d4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_q4 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_we4 : OUT STD_LOGIC;
    pad_img3_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img3_ce5 : OUT STD_LOGIC;
    pad_img3_d5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_q5 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_we5 : OUT STD_LOGIC;
    pad_img3_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img3_ce6 : OUT STD_LOGIC;
    pad_img3_d6 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_q6 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_we6 : OUT STD_LOGIC;
    pad_img3_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img3_ce7 : OUT STD_LOGIC;
    pad_img3_d7 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_q7 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_we7 : OUT STD_LOGIC;
    pad_img3_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img3_ce8 : OUT STD_LOGIC;
    pad_img3_d8 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_q8 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_we8 : OUT STD_LOGIC;
    pad_img3_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img3_ce9 : OUT STD_LOGIC;
    pad_img3_d9 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_q9 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_we9 : OUT STD_LOGIC;
    pad_img3_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img3_ce10 : OUT STD_LOGIC;
    pad_img3_d10 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_q10 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_we10 : OUT STD_LOGIC;
    pad_img3_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img3_ce11 : OUT STD_LOGIC;
    pad_img3_d11 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_q11 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_we11 : OUT STD_LOGIC;
    pad_img3_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img3_ce12 : OUT STD_LOGIC;
    pad_img3_d12 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_q12 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_we12 : OUT STD_LOGIC;
    pad_img3_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img3_ce13 : OUT STD_LOGIC;
    pad_img3_d13 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_q13 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_we13 : OUT STD_LOGIC;
    pad_img3_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img3_ce14 : OUT STD_LOGIC;
    pad_img3_d14 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_q14 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_we14 : OUT STD_LOGIC;
    pad_img3_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img3_ce15 : OUT STD_LOGIC;
    pad_img3_d15 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_q15 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_we15 : OUT STD_LOGIC;
    pad_img3_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img3_ce16 : OUT STD_LOGIC;
    pad_img3_d16 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_q16 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_we16 : OUT STD_LOGIC;
    pad_img4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img4_ce0 : OUT STD_LOGIC;
    pad_img4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_we0 : OUT STD_LOGIC;
    pad_img4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img4_ce1 : OUT STD_LOGIC;
    pad_img4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_we1 : OUT STD_LOGIC;
    pad_img4_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img4_ce2 : OUT STD_LOGIC;
    pad_img4_d2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_we2 : OUT STD_LOGIC;
    pad_img4_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img4_ce3 : OUT STD_LOGIC;
    pad_img4_d3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_we3 : OUT STD_LOGIC;
    pad_img4_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img4_ce4 : OUT STD_LOGIC;
    pad_img4_d4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_q4 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_we4 : OUT STD_LOGIC;
    pad_img4_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img4_ce5 : OUT STD_LOGIC;
    pad_img4_d5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_q5 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_we5 : OUT STD_LOGIC;
    pad_img4_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img4_ce6 : OUT STD_LOGIC;
    pad_img4_d6 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_q6 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_we6 : OUT STD_LOGIC;
    pad_img4_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img4_ce7 : OUT STD_LOGIC;
    pad_img4_d7 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_q7 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_we7 : OUT STD_LOGIC;
    pad_img4_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img4_ce8 : OUT STD_LOGIC;
    pad_img4_d8 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_q8 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_we8 : OUT STD_LOGIC;
    pad_img4_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img4_ce9 : OUT STD_LOGIC;
    pad_img4_d9 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_q9 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_we9 : OUT STD_LOGIC;
    pad_img4_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img4_ce10 : OUT STD_LOGIC;
    pad_img4_d10 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_q10 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_we10 : OUT STD_LOGIC;
    pad_img4_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img4_ce11 : OUT STD_LOGIC;
    pad_img4_d11 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_q11 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_we11 : OUT STD_LOGIC;
    pad_img4_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img4_ce12 : OUT STD_LOGIC;
    pad_img4_d12 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_q12 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_we12 : OUT STD_LOGIC;
    pad_img4_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img4_ce13 : OUT STD_LOGIC;
    pad_img4_d13 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_q13 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_we13 : OUT STD_LOGIC;
    pad_img4_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img4_ce14 : OUT STD_LOGIC;
    pad_img4_d14 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_q14 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_we14 : OUT STD_LOGIC;
    pad_img4_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img4_ce15 : OUT STD_LOGIC;
    pad_img4_d15 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_q15 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_we15 : OUT STD_LOGIC;
    pad_img4_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img4_ce16 : OUT STD_LOGIC;
    pad_img4_d16 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_q16 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_we16 : OUT STD_LOGIC;
    pad_img5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img5_ce0 : OUT STD_LOGIC;
    pad_img5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_we0 : OUT STD_LOGIC;
    pad_img5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img5_ce1 : OUT STD_LOGIC;
    pad_img5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_we1 : OUT STD_LOGIC;
    pad_img5_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img5_ce2 : OUT STD_LOGIC;
    pad_img5_d2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_we2 : OUT STD_LOGIC;
    pad_img5_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img5_ce3 : OUT STD_LOGIC;
    pad_img5_d3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_we3 : OUT STD_LOGIC;
    pad_img5_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img5_ce4 : OUT STD_LOGIC;
    pad_img5_d4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_q4 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_we4 : OUT STD_LOGIC;
    pad_img5_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img5_ce5 : OUT STD_LOGIC;
    pad_img5_d5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_q5 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_we5 : OUT STD_LOGIC;
    pad_img5_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img5_ce6 : OUT STD_LOGIC;
    pad_img5_d6 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_q6 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_we6 : OUT STD_LOGIC;
    pad_img5_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img5_ce7 : OUT STD_LOGIC;
    pad_img5_d7 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_q7 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_we7 : OUT STD_LOGIC;
    pad_img5_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img5_ce8 : OUT STD_LOGIC;
    pad_img5_d8 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_q8 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_we8 : OUT STD_LOGIC;
    pad_img5_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img5_ce9 : OUT STD_LOGIC;
    pad_img5_d9 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_q9 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_we9 : OUT STD_LOGIC;
    pad_img5_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img5_ce10 : OUT STD_LOGIC;
    pad_img5_d10 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_q10 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_we10 : OUT STD_LOGIC;
    pad_img5_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img5_ce11 : OUT STD_LOGIC;
    pad_img5_d11 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_q11 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_we11 : OUT STD_LOGIC;
    pad_img5_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img5_ce12 : OUT STD_LOGIC;
    pad_img5_d12 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_q12 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_we12 : OUT STD_LOGIC;
    pad_img5_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img5_ce13 : OUT STD_LOGIC;
    pad_img5_d13 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_q13 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_we13 : OUT STD_LOGIC;
    pad_img5_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img5_ce14 : OUT STD_LOGIC;
    pad_img5_d14 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_q14 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_we14 : OUT STD_LOGIC;
    pad_img5_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img5_ce15 : OUT STD_LOGIC;
    pad_img5_d15 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_q15 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_we15 : OUT STD_LOGIC;
    pad_img5_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img5_ce16 : OUT STD_LOGIC;
    pad_img5_d16 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_q16 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_we16 : OUT STD_LOGIC;
    pad_img6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img6_ce0 : OUT STD_LOGIC;
    pad_img6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_we0 : OUT STD_LOGIC;
    pad_img6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img6_ce1 : OUT STD_LOGIC;
    pad_img6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_we1 : OUT STD_LOGIC;
    pad_img6_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img6_ce2 : OUT STD_LOGIC;
    pad_img6_d2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_we2 : OUT STD_LOGIC;
    pad_img6_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img6_ce3 : OUT STD_LOGIC;
    pad_img6_d3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_we3 : OUT STD_LOGIC;
    pad_img6_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img6_ce4 : OUT STD_LOGIC;
    pad_img6_d4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_q4 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_we4 : OUT STD_LOGIC;
    pad_img6_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img6_ce5 : OUT STD_LOGIC;
    pad_img6_d5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_q5 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_we5 : OUT STD_LOGIC;
    pad_img6_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img6_ce6 : OUT STD_LOGIC;
    pad_img6_d6 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_q6 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_we6 : OUT STD_LOGIC;
    pad_img6_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img6_ce7 : OUT STD_LOGIC;
    pad_img6_d7 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_q7 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_we7 : OUT STD_LOGIC;
    pad_img6_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img6_ce8 : OUT STD_LOGIC;
    pad_img6_d8 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_q8 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_we8 : OUT STD_LOGIC;
    pad_img6_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img6_ce9 : OUT STD_LOGIC;
    pad_img6_d9 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_q9 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_we9 : OUT STD_LOGIC;
    pad_img6_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img6_ce10 : OUT STD_LOGIC;
    pad_img6_d10 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_q10 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_we10 : OUT STD_LOGIC;
    pad_img6_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img6_ce11 : OUT STD_LOGIC;
    pad_img6_d11 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_q11 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_we11 : OUT STD_LOGIC;
    pad_img6_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img6_ce12 : OUT STD_LOGIC;
    pad_img6_d12 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_q12 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_we12 : OUT STD_LOGIC;
    pad_img6_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img6_ce13 : OUT STD_LOGIC;
    pad_img6_d13 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_q13 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_we13 : OUT STD_LOGIC;
    pad_img6_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img6_ce14 : OUT STD_LOGIC;
    pad_img6_d14 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_q14 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_we14 : OUT STD_LOGIC;
    pad_img6_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img6_ce15 : OUT STD_LOGIC;
    pad_img6_d15 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_q15 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_we15 : OUT STD_LOGIC;
    pad_img6_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img6_ce16 : OUT STD_LOGIC;
    pad_img6_d16 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_q16 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_we16 : OUT STD_LOGIC;
    pad_img7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img7_ce0 : OUT STD_LOGIC;
    pad_img7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_we0 : OUT STD_LOGIC;
    pad_img7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img7_ce1 : OUT STD_LOGIC;
    pad_img7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_we1 : OUT STD_LOGIC;
    pad_img7_address2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img7_ce2 : OUT STD_LOGIC;
    pad_img7_d2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_we2 : OUT STD_LOGIC;
    pad_img7_address3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img7_ce3 : OUT STD_LOGIC;
    pad_img7_d3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_we3 : OUT STD_LOGIC;
    pad_img7_address4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img7_ce4 : OUT STD_LOGIC;
    pad_img7_d4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_q4 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_we4 : OUT STD_LOGIC;
    pad_img7_address5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img7_ce5 : OUT STD_LOGIC;
    pad_img7_d5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_q5 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_we5 : OUT STD_LOGIC;
    pad_img7_address6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img7_ce6 : OUT STD_LOGIC;
    pad_img7_d6 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_q6 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_we6 : OUT STD_LOGIC;
    pad_img7_address7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img7_ce7 : OUT STD_LOGIC;
    pad_img7_d7 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_q7 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_we7 : OUT STD_LOGIC;
    pad_img7_address8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img7_ce8 : OUT STD_LOGIC;
    pad_img7_d8 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_q8 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_we8 : OUT STD_LOGIC;
    pad_img7_address9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img7_ce9 : OUT STD_LOGIC;
    pad_img7_d9 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_q9 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_we9 : OUT STD_LOGIC;
    pad_img7_address10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img7_ce10 : OUT STD_LOGIC;
    pad_img7_d10 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_q10 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_we10 : OUT STD_LOGIC;
    pad_img7_address11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img7_ce11 : OUT STD_LOGIC;
    pad_img7_d11 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_q11 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_we11 : OUT STD_LOGIC;
    pad_img7_address12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img7_ce12 : OUT STD_LOGIC;
    pad_img7_d12 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_q12 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_we12 : OUT STD_LOGIC;
    pad_img7_address13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img7_ce13 : OUT STD_LOGIC;
    pad_img7_d13 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_q13 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_we13 : OUT STD_LOGIC;
    pad_img7_address14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img7_ce14 : OUT STD_LOGIC;
    pad_img7_d14 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_q14 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_we14 : OUT STD_LOGIC;
    pad_img7_address15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img7_ce15 : OUT STD_LOGIC;
    pad_img7_d15 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_q15 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_we15 : OUT STD_LOGIC;
    pad_img7_address16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img7_ce16 : OUT STD_LOGIC;
    pad_img7_d16 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_q16 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_we16 : OUT STD_LOGIC;
    weight_buf_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_0_ce0 : OUT STD_LOGIC;
    weight_buf_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_0_we0 : OUT STD_LOGIC;
    weight_buf_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_0_ce1 : OUT STD_LOGIC;
    weight_buf_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_0_we1 : OUT STD_LOGIC;
    weight_buf_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_1_ce0 : OUT STD_LOGIC;
    weight_buf_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_1_we0 : OUT STD_LOGIC;
    weight_buf_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_1_ce1 : OUT STD_LOGIC;
    weight_buf_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_1_we1 : OUT STD_LOGIC;
    weight_buf_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_2_ce0 : OUT STD_LOGIC;
    weight_buf_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_2_we0 : OUT STD_LOGIC;
    weight_buf_2_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_2_ce1 : OUT STD_LOGIC;
    weight_buf_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_2_we1 : OUT STD_LOGIC;
    weight_buf_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_3_ce0 : OUT STD_LOGIC;
    weight_buf_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_3_we0 : OUT STD_LOGIC;
    weight_buf_3_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_3_ce1 : OUT STD_LOGIC;
    weight_buf_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_3_we1 : OUT STD_LOGIC;
    weight_buf_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_4_ce0 : OUT STD_LOGIC;
    weight_buf_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_4_we0 : OUT STD_LOGIC;
    weight_buf_4_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_4_ce1 : OUT STD_LOGIC;
    weight_buf_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_4_we1 : OUT STD_LOGIC;
    weight_buf_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_5_ce0 : OUT STD_LOGIC;
    weight_buf_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_5_we0 : OUT STD_LOGIC;
    weight_buf_5_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_5_ce1 : OUT STD_LOGIC;
    weight_buf_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_5_we1 : OUT STD_LOGIC;
    weight_buf_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_6_ce0 : OUT STD_LOGIC;
    weight_buf_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_6_we0 : OUT STD_LOGIC;
    weight_buf_6_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_6_ce1 : OUT STD_LOGIC;
    weight_buf_6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_6_we1 : OUT STD_LOGIC;
    weight_buf_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_7_ce0 : OUT STD_LOGIC;
    weight_buf_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_7_we0 : OUT STD_LOGIC;
    weight_buf_7_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_7_ce1 : OUT STD_LOGIC;
    weight_buf_7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_7_we1 : OUT STD_LOGIC;
    biases_buf_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    biases_buf_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    biases_buf_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    biases_buf_3 : IN STD_LOGIC_VECTOR (31 downto 0);
    biases_buf_4 : IN STD_LOGIC_VECTOR (31 downto 0);
    biases_buf_5 : IN STD_LOGIC_VECTOR (31 downto 0);
    biases_buf_6 : IN STD_LOGIC_VECTOR (31 downto 0);
    biases_buf_7 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_0_full_n : IN STD_LOGIC;
    conv_to_pool_streams_0_write : OUT STD_LOGIC;
    conv_to_pool_streams_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_1_full_n : IN STD_LOGIC;
    conv_to_pool_streams_1_write : OUT STD_LOGIC;
    conv_to_pool_streams_2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_2_full_n : IN STD_LOGIC;
    conv_to_pool_streams_2_write : OUT STD_LOGIC;
    conv_to_pool_streams_3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_3_full_n : IN STD_LOGIC;
    conv_to_pool_streams_3_write : OUT STD_LOGIC;
    conv_to_pool_streams_4_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_4_full_n : IN STD_LOGIC;
    conv_to_pool_streams_4_write : OUT STD_LOGIC;
    conv_to_pool_streams_5_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_5_full_n : IN STD_LOGIC;
    conv_to_pool_streams_5_write : OUT STD_LOGIC;
    conv_to_pool_streams_6_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_6_full_n : IN STD_LOGIC;
    conv_to_pool_streams_6_write : OUT STD_LOGIC;
    conv_to_pool_streams_7_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_7_full_n : IN STD_LOGIC;
    conv_to_pool_streams_7_write : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    biases_buf_0_ap_vld : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    biases_buf_1_ap_vld : IN STD_LOGIC;
    biases_buf_2_ap_vld : IN STD_LOGIC;
    biases_buf_3_ap_vld : IN STD_LOGIC;
    biases_buf_4_ap_vld : IN STD_LOGIC;
    biases_buf_5_ap_vld : IN STD_LOGIC;
    biases_buf_6_ap_vld : IN STD_LOGIC;
    biases_buf_7_ap_vld : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of cnn_convolutional_layer is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal internal_ap_ready : STD_LOGIC;
    signal convolution_U0_ap_start : STD_LOGIC;
    signal convolution_U0_ap_done : STD_LOGIC;
    signal convolution_U0_ap_continue : STD_LOGIC;
    signal convolution_U0_ap_idle : STD_LOGIC;
    signal convolution_U0_ap_ready : STD_LOGIC;
    signal convolution_U0_pad_img_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_U0_pad_img_ce0 : STD_LOGIC;
    signal convolution_U0_pad_img_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_U0_pad_img_ce1 : STD_LOGIC;
    signal convolution_U0_weight_buf_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_U0_weight_buf_ce0 : STD_LOGIC;
    signal convolution_U0_weight_buf_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_U0_weight_buf_ce1 : STD_LOGIC;
    signal convolution_U0_conv_to_pool_streams_0_din : STD_LOGIC_VECTOR (31 downto 0);
    signal convolution_U0_conv_to_pool_streams_0_write : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal convolution_1_U0_ap_start : STD_LOGIC;
    signal convolution_1_U0_ap_done : STD_LOGIC;
    signal convolution_1_U0_ap_continue : STD_LOGIC;
    signal convolution_1_U0_ap_idle : STD_LOGIC;
    signal convolution_1_U0_ap_ready : STD_LOGIC;
    signal convolution_1_U0_pad_img_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_1_U0_pad_img_ce0 : STD_LOGIC;
    signal convolution_1_U0_pad_img_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_1_U0_pad_img_ce1 : STD_LOGIC;
    signal convolution_1_U0_weight_buf_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_1_U0_weight_buf_ce0 : STD_LOGIC;
    signal convolution_1_U0_weight_buf_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_1_U0_weight_buf_ce1 : STD_LOGIC;
    signal convolution_1_U0_conv_to_pool_streams_1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal convolution_1_U0_conv_to_pool_streams_1_write : STD_LOGIC;
    signal convolution_2_U0_ap_start : STD_LOGIC;
    signal convolution_2_U0_ap_done : STD_LOGIC;
    signal convolution_2_U0_ap_continue : STD_LOGIC;
    signal convolution_2_U0_ap_idle : STD_LOGIC;
    signal convolution_2_U0_ap_ready : STD_LOGIC;
    signal convolution_2_U0_pad_img_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_2_U0_pad_img_ce0 : STD_LOGIC;
    signal convolution_2_U0_pad_img_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_2_U0_pad_img_ce1 : STD_LOGIC;
    signal convolution_2_U0_weight_buf_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_2_U0_weight_buf_ce0 : STD_LOGIC;
    signal convolution_2_U0_weight_buf_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_2_U0_weight_buf_ce1 : STD_LOGIC;
    signal convolution_2_U0_conv_to_pool_streams_2_din : STD_LOGIC_VECTOR (31 downto 0);
    signal convolution_2_U0_conv_to_pool_streams_2_write : STD_LOGIC;
    signal convolution_3_U0_ap_start : STD_LOGIC;
    signal convolution_3_U0_ap_done : STD_LOGIC;
    signal convolution_3_U0_ap_continue : STD_LOGIC;
    signal convolution_3_U0_ap_idle : STD_LOGIC;
    signal convolution_3_U0_ap_ready : STD_LOGIC;
    signal convolution_3_U0_pad_img_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_3_U0_pad_img_ce0 : STD_LOGIC;
    signal convolution_3_U0_pad_img_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_3_U0_pad_img_ce1 : STD_LOGIC;
    signal convolution_3_U0_weight_buf_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_3_U0_weight_buf_ce0 : STD_LOGIC;
    signal convolution_3_U0_weight_buf_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_3_U0_weight_buf_ce1 : STD_LOGIC;
    signal convolution_3_U0_conv_to_pool_streams_3_din : STD_LOGIC_VECTOR (31 downto 0);
    signal convolution_3_U0_conv_to_pool_streams_3_write : STD_LOGIC;
    signal convolution_4_U0_ap_start : STD_LOGIC;
    signal convolution_4_U0_ap_done : STD_LOGIC;
    signal convolution_4_U0_ap_continue : STD_LOGIC;
    signal convolution_4_U0_ap_idle : STD_LOGIC;
    signal convolution_4_U0_ap_ready : STD_LOGIC;
    signal convolution_4_U0_pad_img_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_4_U0_pad_img_ce0 : STD_LOGIC;
    signal convolution_4_U0_pad_img_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_4_U0_pad_img_ce1 : STD_LOGIC;
    signal convolution_4_U0_weight_buf_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_4_U0_weight_buf_ce0 : STD_LOGIC;
    signal convolution_4_U0_weight_buf_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_4_U0_weight_buf_ce1 : STD_LOGIC;
    signal convolution_4_U0_conv_to_pool_streams_4_din : STD_LOGIC_VECTOR (31 downto 0);
    signal convolution_4_U0_conv_to_pool_streams_4_write : STD_LOGIC;
    signal convolution_5_U0_ap_start : STD_LOGIC;
    signal convolution_5_U0_ap_done : STD_LOGIC;
    signal convolution_5_U0_ap_continue : STD_LOGIC;
    signal convolution_5_U0_ap_idle : STD_LOGIC;
    signal convolution_5_U0_ap_ready : STD_LOGIC;
    signal convolution_5_U0_pad_img_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_5_U0_pad_img_ce0 : STD_LOGIC;
    signal convolution_5_U0_pad_img_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_5_U0_pad_img_ce1 : STD_LOGIC;
    signal convolution_5_U0_weight_buf_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_5_U0_weight_buf_ce0 : STD_LOGIC;
    signal convolution_5_U0_weight_buf_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_5_U0_weight_buf_ce1 : STD_LOGIC;
    signal convolution_5_U0_conv_to_pool_streams_5_din : STD_LOGIC_VECTOR (31 downto 0);
    signal convolution_5_U0_conv_to_pool_streams_5_write : STD_LOGIC;
    signal convolution_6_U0_ap_start : STD_LOGIC;
    signal convolution_6_U0_ap_done : STD_LOGIC;
    signal convolution_6_U0_ap_continue : STD_LOGIC;
    signal convolution_6_U0_ap_idle : STD_LOGIC;
    signal convolution_6_U0_ap_ready : STD_LOGIC;
    signal convolution_6_U0_pad_img_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_6_U0_pad_img_ce0 : STD_LOGIC;
    signal convolution_6_U0_pad_img_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_6_U0_pad_img_ce1 : STD_LOGIC;
    signal convolution_6_U0_weight_buf_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_6_U0_weight_buf_ce0 : STD_LOGIC;
    signal convolution_6_U0_weight_buf_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_6_U0_weight_buf_ce1 : STD_LOGIC;
    signal convolution_6_U0_conv_to_pool_streams_6_din : STD_LOGIC_VECTOR (31 downto 0);
    signal convolution_6_U0_conv_to_pool_streams_6_write : STD_LOGIC;
    signal convolution_7_U0_ap_start : STD_LOGIC;
    signal convolution_7_U0_ap_done : STD_LOGIC;
    signal convolution_7_U0_ap_continue : STD_LOGIC;
    signal convolution_7_U0_ap_idle : STD_LOGIC;
    signal convolution_7_U0_ap_ready : STD_LOGIC;
    signal convolution_7_U0_pad_img_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_7_U0_pad_img_ce0 : STD_LOGIC;
    signal convolution_7_U0_pad_img_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_7_U0_pad_img_ce1 : STD_LOGIC;
    signal convolution_7_U0_weight_buf_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_7_U0_weight_buf_ce0 : STD_LOGIC;
    signal convolution_7_U0_weight_buf_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_7_U0_weight_buf_ce1 : STD_LOGIC;
    signal convolution_7_U0_conv_to_pool_streams_7_din : STD_LOGIC_VECTOR (31 downto 0);
    signal convolution_7_U0_conv_to_pool_streams_7_write : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_convolution_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_convolution_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_convolution_1_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_convolution_1_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_convolution_2_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_convolution_2_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_convolution_3_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_convolution_3_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_convolution_4_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_convolution_4_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_convolution_5_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_convolution_5_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_convolution_6_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_convolution_6_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_convolution_7_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_convolution_7_U0_ap_ready : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_convolution IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pad_img_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img_ce0 : OUT STD_LOGIC;
        pad_img_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img_ce1 : OUT STD_LOGIC;
        pad_img_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_ce0 : OUT STD_LOGIC;
        weight_buf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_ce1 : OUT STD_LOGIC;
        weight_buf_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        biases_buf : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_0_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        conv_to_pool_streams_0_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        conv_to_pool_streams_0_full_n : IN STD_LOGIC;
        conv_to_pool_streams_0_write : OUT STD_LOGIC );
    end component;


    component cnn_convolution_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pad_img_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img_ce0 : OUT STD_LOGIC;
        pad_img_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img_ce1 : OUT STD_LOGIC;
        pad_img_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_ce0 : OUT STD_LOGIC;
        weight_buf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_ce1 : OUT STD_LOGIC;
        weight_buf_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        biases_buf : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_1_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        conv_to_pool_streams_1_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        conv_to_pool_streams_1_full_n : IN STD_LOGIC;
        conv_to_pool_streams_1_write : OUT STD_LOGIC );
    end component;


    component cnn_convolution_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pad_img_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img_ce0 : OUT STD_LOGIC;
        pad_img_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img_ce1 : OUT STD_LOGIC;
        pad_img_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_ce0 : OUT STD_LOGIC;
        weight_buf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_ce1 : OUT STD_LOGIC;
        weight_buf_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        biases_buf : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_2_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        conv_to_pool_streams_2_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        conv_to_pool_streams_2_full_n : IN STD_LOGIC;
        conv_to_pool_streams_2_write : OUT STD_LOGIC );
    end component;


    component cnn_convolution_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pad_img_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img_ce0 : OUT STD_LOGIC;
        pad_img_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img_ce1 : OUT STD_LOGIC;
        pad_img_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_ce0 : OUT STD_LOGIC;
        weight_buf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_ce1 : OUT STD_LOGIC;
        weight_buf_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        biases_buf : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_3_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        conv_to_pool_streams_3_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        conv_to_pool_streams_3_full_n : IN STD_LOGIC;
        conv_to_pool_streams_3_write : OUT STD_LOGIC );
    end component;


    component cnn_convolution_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pad_img_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img_ce0 : OUT STD_LOGIC;
        pad_img_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img_ce1 : OUT STD_LOGIC;
        pad_img_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_ce0 : OUT STD_LOGIC;
        weight_buf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_ce1 : OUT STD_LOGIC;
        weight_buf_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        biases_buf : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_4_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_4_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        conv_to_pool_streams_4_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        conv_to_pool_streams_4_full_n : IN STD_LOGIC;
        conv_to_pool_streams_4_write : OUT STD_LOGIC );
    end component;


    component cnn_convolution_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pad_img_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img_ce0 : OUT STD_LOGIC;
        pad_img_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img_ce1 : OUT STD_LOGIC;
        pad_img_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_ce0 : OUT STD_LOGIC;
        weight_buf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_ce1 : OUT STD_LOGIC;
        weight_buf_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        biases_buf : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_5_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_5_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        conv_to_pool_streams_5_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        conv_to_pool_streams_5_full_n : IN STD_LOGIC;
        conv_to_pool_streams_5_write : OUT STD_LOGIC );
    end component;


    component cnn_convolution_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pad_img_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img_ce0 : OUT STD_LOGIC;
        pad_img_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img_ce1 : OUT STD_LOGIC;
        pad_img_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_ce0 : OUT STD_LOGIC;
        weight_buf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_ce1 : OUT STD_LOGIC;
        weight_buf_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        biases_buf : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_6_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_6_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        conv_to_pool_streams_6_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        conv_to_pool_streams_6_full_n : IN STD_LOGIC;
        conv_to_pool_streams_6_write : OUT STD_LOGIC );
    end component;


    component cnn_convolution_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pad_img_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img_ce0 : OUT STD_LOGIC;
        pad_img_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img_ce1 : OUT STD_LOGIC;
        pad_img_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_ce0 : OUT STD_LOGIC;
        weight_buf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_ce1 : OUT STD_LOGIC;
        weight_buf_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        biases_buf : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_7_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_7_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        conv_to_pool_streams_7_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        conv_to_pool_streams_7_full_n : IN STD_LOGIC;
        conv_to_pool_streams_7_write : OUT STD_LOGIC );
    end component;



begin
    convolution_U0 : component cnn_convolution
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => convolution_U0_ap_start,
        ap_done => convolution_U0_ap_done,
        ap_continue => convolution_U0_ap_continue,
        ap_idle => convolution_U0_ap_idle,
        ap_ready => convolution_U0_ap_ready,
        pad_img_address0 => convolution_U0_pad_img_address0,
        pad_img_ce0 => convolution_U0_pad_img_ce0,
        pad_img_q0 => pad_img_q0,
        pad_img_address1 => convolution_U0_pad_img_address1,
        pad_img_ce1 => convolution_U0_pad_img_ce1,
        pad_img_q1 => pad_img_q1,
        weight_buf_address0 => convolution_U0_weight_buf_address0,
        weight_buf_ce0 => convolution_U0_weight_buf_ce0,
        weight_buf_q0 => weight_buf_0_q0,
        weight_buf_address1 => convolution_U0_weight_buf_address1,
        weight_buf_ce1 => convolution_U0_weight_buf_ce1,
        weight_buf_q1 => weight_buf_0_q1,
        biases_buf => biases_buf_0,
        conv_to_pool_streams_0_din => convolution_U0_conv_to_pool_streams_0_din,
        conv_to_pool_streams_0_num_data_valid => ap_const_lv11_0,
        conv_to_pool_streams_0_fifo_cap => ap_const_lv11_0,
        conv_to_pool_streams_0_full_n => conv_to_pool_streams_0_full_n,
        conv_to_pool_streams_0_write => convolution_U0_conv_to_pool_streams_0_write);

    convolution_1_U0 : component cnn_convolution_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => convolution_1_U0_ap_start,
        ap_done => convolution_1_U0_ap_done,
        ap_continue => convolution_1_U0_ap_continue,
        ap_idle => convolution_1_U0_ap_idle,
        ap_ready => convolution_1_U0_ap_ready,
        pad_img_address0 => convolution_1_U0_pad_img_address0,
        pad_img_ce0 => convolution_1_U0_pad_img_ce0,
        pad_img_q0 => pad_img1_q0,
        pad_img_address1 => convolution_1_U0_pad_img_address1,
        pad_img_ce1 => convolution_1_U0_pad_img_ce1,
        pad_img_q1 => pad_img1_q1,
        weight_buf_address0 => convolution_1_U0_weight_buf_address0,
        weight_buf_ce0 => convolution_1_U0_weight_buf_ce0,
        weight_buf_q0 => weight_buf_1_q0,
        weight_buf_address1 => convolution_1_U0_weight_buf_address1,
        weight_buf_ce1 => convolution_1_U0_weight_buf_ce1,
        weight_buf_q1 => weight_buf_1_q1,
        biases_buf => biases_buf_1,
        conv_to_pool_streams_1_din => convolution_1_U0_conv_to_pool_streams_1_din,
        conv_to_pool_streams_1_num_data_valid => ap_const_lv11_0,
        conv_to_pool_streams_1_fifo_cap => ap_const_lv11_0,
        conv_to_pool_streams_1_full_n => conv_to_pool_streams_1_full_n,
        conv_to_pool_streams_1_write => convolution_1_U0_conv_to_pool_streams_1_write);

    convolution_2_U0 : component cnn_convolution_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => convolution_2_U0_ap_start,
        ap_done => convolution_2_U0_ap_done,
        ap_continue => convolution_2_U0_ap_continue,
        ap_idle => convolution_2_U0_ap_idle,
        ap_ready => convolution_2_U0_ap_ready,
        pad_img_address0 => convolution_2_U0_pad_img_address0,
        pad_img_ce0 => convolution_2_U0_pad_img_ce0,
        pad_img_q0 => pad_img2_q0,
        pad_img_address1 => convolution_2_U0_pad_img_address1,
        pad_img_ce1 => convolution_2_U0_pad_img_ce1,
        pad_img_q1 => pad_img2_q1,
        weight_buf_address0 => convolution_2_U0_weight_buf_address0,
        weight_buf_ce0 => convolution_2_U0_weight_buf_ce0,
        weight_buf_q0 => weight_buf_2_q0,
        weight_buf_address1 => convolution_2_U0_weight_buf_address1,
        weight_buf_ce1 => convolution_2_U0_weight_buf_ce1,
        weight_buf_q1 => weight_buf_2_q1,
        biases_buf => biases_buf_2,
        conv_to_pool_streams_2_din => convolution_2_U0_conv_to_pool_streams_2_din,
        conv_to_pool_streams_2_num_data_valid => ap_const_lv11_0,
        conv_to_pool_streams_2_fifo_cap => ap_const_lv11_0,
        conv_to_pool_streams_2_full_n => conv_to_pool_streams_2_full_n,
        conv_to_pool_streams_2_write => convolution_2_U0_conv_to_pool_streams_2_write);

    convolution_3_U0 : component cnn_convolution_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => convolution_3_U0_ap_start,
        ap_done => convolution_3_U0_ap_done,
        ap_continue => convolution_3_U0_ap_continue,
        ap_idle => convolution_3_U0_ap_idle,
        ap_ready => convolution_3_U0_ap_ready,
        pad_img_address0 => convolution_3_U0_pad_img_address0,
        pad_img_ce0 => convolution_3_U0_pad_img_ce0,
        pad_img_q0 => pad_img3_q0,
        pad_img_address1 => convolution_3_U0_pad_img_address1,
        pad_img_ce1 => convolution_3_U0_pad_img_ce1,
        pad_img_q1 => pad_img3_q1,
        weight_buf_address0 => convolution_3_U0_weight_buf_address0,
        weight_buf_ce0 => convolution_3_U0_weight_buf_ce0,
        weight_buf_q0 => weight_buf_3_q0,
        weight_buf_address1 => convolution_3_U0_weight_buf_address1,
        weight_buf_ce1 => convolution_3_U0_weight_buf_ce1,
        weight_buf_q1 => weight_buf_3_q1,
        biases_buf => biases_buf_3,
        conv_to_pool_streams_3_din => convolution_3_U0_conv_to_pool_streams_3_din,
        conv_to_pool_streams_3_num_data_valid => ap_const_lv11_0,
        conv_to_pool_streams_3_fifo_cap => ap_const_lv11_0,
        conv_to_pool_streams_3_full_n => conv_to_pool_streams_3_full_n,
        conv_to_pool_streams_3_write => convolution_3_U0_conv_to_pool_streams_3_write);

    convolution_4_U0 : component cnn_convolution_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => convolution_4_U0_ap_start,
        ap_done => convolution_4_U0_ap_done,
        ap_continue => convolution_4_U0_ap_continue,
        ap_idle => convolution_4_U0_ap_idle,
        ap_ready => convolution_4_U0_ap_ready,
        pad_img_address0 => convolution_4_U0_pad_img_address0,
        pad_img_ce0 => convolution_4_U0_pad_img_ce0,
        pad_img_q0 => pad_img4_q0,
        pad_img_address1 => convolution_4_U0_pad_img_address1,
        pad_img_ce1 => convolution_4_U0_pad_img_ce1,
        pad_img_q1 => pad_img4_q1,
        weight_buf_address0 => convolution_4_U0_weight_buf_address0,
        weight_buf_ce0 => convolution_4_U0_weight_buf_ce0,
        weight_buf_q0 => weight_buf_4_q0,
        weight_buf_address1 => convolution_4_U0_weight_buf_address1,
        weight_buf_ce1 => convolution_4_U0_weight_buf_ce1,
        weight_buf_q1 => weight_buf_4_q1,
        biases_buf => biases_buf_4,
        conv_to_pool_streams_4_din => convolution_4_U0_conv_to_pool_streams_4_din,
        conv_to_pool_streams_4_num_data_valid => ap_const_lv11_0,
        conv_to_pool_streams_4_fifo_cap => ap_const_lv11_0,
        conv_to_pool_streams_4_full_n => conv_to_pool_streams_4_full_n,
        conv_to_pool_streams_4_write => convolution_4_U0_conv_to_pool_streams_4_write);

    convolution_5_U0 : component cnn_convolution_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => convolution_5_U0_ap_start,
        ap_done => convolution_5_U0_ap_done,
        ap_continue => convolution_5_U0_ap_continue,
        ap_idle => convolution_5_U0_ap_idle,
        ap_ready => convolution_5_U0_ap_ready,
        pad_img_address0 => convolution_5_U0_pad_img_address0,
        pad_img_ce0 => convolution_5_U0_pad_img_ce0,
        pad_img_q0 => pad_img5_q0,
        pad_img_address1 => convolution_5_U0_pad_img_address1,
        pad_img_ce1 => convolution_5_U0_pad_img_ce1,
        pad_img_q1 => pad_img5_q1,
        weight_buf_address0 => convolution_5_U0_weight_buf_address0,
        weight_buf_ce0 => convolution_5_U0_weight_buf_ce0,
        weight_buf_q0 => weight_buf_5_q0,
        weight_buf_address1 => convolution_5_U0_weight_buf_address1,
        weight_buf_ce1 => convolution_5_U0_weight_buf_ce1,
        weight_buf_q1 => weight_buf_5_q1,
        biases_buf => biases_buf_5,
        conv_to_pool_streams_5_din => convolution_5_U0_conv_to_pool_streams_5_din,
        conv_to_pool_streams_5_num_data_valid => ap_const_lv11_0,
        conv_to_pool_streams_5_fifo_cap => ap_const_lv11_0,
        conv_to_pool_streams_5_full_n => conv_to_pool_streams_5_full_n,
        conv_to_pool_streams_5_write => convolution_5_U0_conv_to_pool_streams_5_write);

    convolution_6_U0 : component cnn_convolution_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => convolution_6_U0_ap_start,
        ap_done => convolution_6_U0_ap_done,
        ap_continue => convolution_6_U0_ap_continue,
        ap_idle => convolution_6_U0_ap_idle,
        ap_ready => convolution_6_U0_ap_ready,
        pad_img_address0 => convolution_6_U0_pad_img_address0,
        pad_img_ce0 => convolution_6_U0_pad_img_ce0,
        pad_img_q0 => pad_img6_q0,
        pad_img_address1 => convolution_6_U0_pad_img_address1,
        pad_img_ce1 => convolution_6_U0_pad_img_ce1,
        pad_img_q1 => pad_img6_q1,
        weight_buf_address0 => convolution_6_U0_weight_buf_address0,
        weight_buf_ce0 => convolution_6_U0_weight_buf_ce0,
        weight_buf_q0 => weight_buf_6_q0,
        weight_buf_address1 => convolution_6_U0_weight_buf_address1,
        weight_buf_ce1 => convolution_6_U0_weight_buf_ce1,
        weight_buf_q1 => weight_buf_6_q1,
        biases_buf => biases_buf_6,
        conv_to_pool_streams_6_din => convolution_6_U0_conv_to_pool_streams_6_din,
        conv_to_pool_streams_6_num_data_valid => ap_const_lv11_0,
        conv_to_pool_streams_6_fifo_cap => ap_const_lv11_0,
        conv_to_pool_streams_6_full_n => conv_to_pool_streams_6_full_n,
        conv_to_pool_streams_6_write => convolution_6_U0_conv_to_pool_streams_6_write);

    convolution_7_U0 : component cnn_convolution_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => convolution_7_U0_ap_start,
        ap_done => convolution_7_U0_ap_done,
        ap_continue => convolution_7_U0_ap_continue,
        ap_idle => convolution_7_U0_ap_idle,
        ap_ready => convolution_7_U0_ap_ready,
        pad_img_address0 => convolution_7_U0_pad_img_address0,
        pad_img_ce0 => convolution_7_U0_pad_img_ce0,
        pad_img_q0 => pad_img7_q0,
        pad_img_address1 => convolution_7_U0_pad_img_address1,
        pad_img_ce1 => convolution_7_U0_pad_img_ce1,
        pad_img_q1 => pad_img7_q1,
        weight_buf_address0 => convolution_7_U0_weight_buf_address0,
        weight_buf_ce0 => convolution_7_U0_weight_buf_ce0,
        weight_buf_q0 => weight_buf_7_q0,
        weight_buf_address1 => convolution_7_U0_weight_buf_address1,
        weight_buf_ce1 => convolution_7_U0_weight_buf_ce1,
        weight_buf_q1 => weight_buf_7_q1,
        biases_buf => biases_buf_7,
        conv_to_pool_streams_7_din => convolution_7_U0_conv_to_pool_streams_7_din,
        conv_to_pool_streams_7_num_data_valid => ap_const_lv11_0,
        conv_to_pool_streams_7_fifo_cap => ap_const_lv11_0,
        conv_to_pool_streams_7_full_n => conv_to_pool_streams_7_full_n,
        conv_to_pool_streams_7_write => convolution_7_U0_conv_to_pool_streams_7_write);





    ap_sync_reg_convolution_1_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_convolution_1_U0_ap_ready <= ap_const_logic_0;
            else
                if (((real_start and ap_sync_ready) = ap_const_logic_1)) then 
                    ap_sync_reg_convolution_1_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_convolution_1_U0_ap_ready <= ap_sync_convolution_1_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_convolution_2_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_convolution_2_U0_ap_ready <= ap_const_logic_0;
            else
                if (((real_start and ap_sync_ready) = ap_const_logic_1)) then 
                    ap_sync_reg_convolution_2_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_convolution_2_U0_ap_ready <= ap_sync_convolution_2_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_convolution_3_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_convolution_3_U0_ap_ready <= ap_const_logic_0;
            else
                if (((real_start and ap_sync_ready) = ap_const_logic_1)) then 
                    ap_sync_reg_convolution_3_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_convolution_3_U0_ap_ready <= ap_sync_convolution_3_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_convolution_4_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_convolution_4_U0_ap_ready <= ap_const_logic_0;
            else
                if (((real_start and ap_sync_ready) = ap_const_logic_1)) then 
                    ap_sync_reg_convolution_4_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_convolution_4_U0_ap_ready <= ap_sync_convolution_4_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_convolution_5_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_convolution_5_U0_ap_ready <= ap_const_logic_0;
            else
                if (((real_start and ap_sync_ready) = ap_const_logic_1)) then 
                    ap_sync_reg_convolution_5_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_convolution_5_U0_ap_ready <= ap_sync_convolution_5_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_convolution_6_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_convolution_6_U0_ap_ready <= ap_const_logic_0;
            else
                if (((real_start and ap_sync_ready) = ap_const_logic_1)) then 
                    ap_sync_reg_convolution_6_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_convolution_6_U0_ap_ready <= ap_sync_convolution_6_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_convolution_7_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_convolution_7_U0_ap_ready <= ap_const_logic_0;
            else
                if (((real_start and ap_sync_ready) = ap_const_logic_1)) then 
                    ap_sync_reg_convolution_7_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_convolution_7_U0_ap_ready <= ap_sync_convolution_7_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_convolution_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_convolution_U0_ap_ready <= ap_const_logic_0;
            else
                if (((real_start and ap_sync_ready) = ap_const_logic_1)) then 
                    ap_sync_reg_convolution_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_convolution_U0_ap_ready <= ap_sync_convolution_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    ap_done <= ap_sync_done;
    ap_idle <= (convolution_U0_ap_idle and convolution_7_U0_ap_idle and convolution_6_U0_ap_idle and convolution_5_U0_ap_idle and convolution_4_U0_ap_idle and convolution_3_U0_ap_idle and convolution_2_U0_ap_idle and convolution_1_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_continue <= (ap_sync_done and ap_continue);
    ap_sync_convolution_1_U0_ap_ready <= (convolution_1_U0_ap_ready or ap_sync_reg_convolution_1_U0_ap_ready);
    ap_sync_convolution_2_U0_ap_ready <= (convolution_2_U0_ap_ready or ap_sync_reg_convolution_2_U0_ap_ready);
    ap_sync_convolution_3_U0_ap_ready <= (convolution_3_U0_ap_ready or ap_sync_reg_convolution_3_U0_ap_ready);
    ap_sync_convolution_4_U0_ap_ready <= (convolution_4_U0_ap_ready or ap_sync_reg_convolution_4_U0_ap_ready);
    ap_sync_convolution_5_U0_ap_ready <= (convolution_5_U0_ap_ready or ap_sync_reg_convolution_5_U0_ap_ready);
    ap_sync_convolution_6_U0_ap_ready <= (convolution_6_U0_ap_ready or ap_sync_reg_convolution_6_U0_ap_ready);
    ap_sync_convolution_7_U0_ap_ready <= (convolution_7_U0_ap_ready or ap_sync_reg_convolution_7_U0_ap_ready);
    ap_sync_convolution_U0_ap_ready <= (convolution_U0_ap_ready or ap_sync_reg_convolution_U0_ap_ready);
    ap_sync_done <= (convolution_U0_ap_done and convolution_7_U0_ap_done and convolution_6_U0_ap_done and convolution_5_U0_ap_done and convolution_4_U0_ap_done and convolution_3_U0_ap_done and convolution_2_U0_ap_done and convolution_1_U0_ap_done);
    ap_sync_ready <= (ap_sync_convolution_U0_ap_ready and ap_sync_convolution_7_U0_ap_ready and ap_sync_convolution_6_U0_ap_ready and ap_sync_convolution_5_U0_ap_ready and ap_sync_convolution_4_U0_ap_ready and ap_sync_convolution_3_U0_ap_ready and ap_sync_convolution_2_U0_ap_ready and ap_sync_convolution_1_U0_ap_ready);
    conv_to_pool_streams_0_din <= convolution_U0_conv_to_pool_streams_0_din;
    conv_to_pool_streams_0_write <= convolution_U0_conv_to_pool_streams_0_write;
    conv_to_pool_streams_1_din <= convolution_1_U0_conv_to_pool_streams_1_din;
    conv_to_pool_streams_1_write <= convolution_1_U0_conv_to_pool_streams_1_write;
    conv_to_pool_streams_2_din <= convolution_2_U0_conv_to_pool_streams_2_din;
    conv_to_pool_streams_2_write <= convolution_2_U0_conv_to_pool_streams_2_write;
    conv_to_pool_streams_3_din <= convolution_3_U0_conv_to_pool_streams_3_din;
    conv_to_pool_streams_3_write <= convolution_3_U0_conv_to_pool_streams_3_write;
    conv_to_pool_streams_4_din <= convolution_4_U0_conv_to_pool_streams_4_din;
    conv_to_pool_streams_4_write <= convolution_4_U0_conv_to_pool_streams_4_write;
    conv_to_pool_streams_5_din <= convolution_5_U0_conv_to_pool_streams_5_din;
    conv_to_pool_streams_5_write <= convolution_5_U0_conv_to_pool_streams_5_write;
    conv_to_pool_streams_6_din <= convolution_6_U0_conv_to_pool_streams_6_din;
    conv_to_pool_streams_6_write <= convolution_6_U0_conv_to_pool_streams_6_write;
    conv_to_pool_streams_7_din <= convolution_7_U0_conv_to_pool_streams_7_din;
    conv_to_pool_streams_7_write <= convolution_7_U0_conv_to_pool_streams_7_write;
    convolution_1_U0_ap_continue <= ap_sync_continue;
    convolution_1_U0_ap_start <= (real_start and (ap_sync_reg_convolution_1_U0_ap_ready xor ap_const_logic_1));
    convolution_2_U0_ap_continue <= ap_sync_continue;
    convolution_2_U0_ap_start <= (real_start and (ap_sync_reg_convolution_2_U0_ap_ready xor ap_const_logic_1));
    convolution_3_U0_ap_continue <= ap_sync_continue;
    convolution_3_U0_ap_start <= (real_start and (ap_sync_reg_convolution_3_U0_ap_ready xor ap_const_logic_1));
    convolution_4_U0_ap_continue <= ap_sync_continue;
    convolution_4_U0_ap_start <= (real_start and (ap_sync_reg_convolution_4_U0_ap_ready xor ap_const_logic_1));
    convolution_5_U0_ap_continue <= ap_sync_continue;
    convolution_5_U0_ap_start <= (real_start and (ap_sync_reg_convolution_5_U0_ap_ready xor ap_const_logic_1));
    convolution_6_U0_ap_continue <= ap_sync_continue;
    convolution_6_U0_ap_start <= (real_start and (ap_sync_reg_convolution_6_U0_ap_ready xor ap_const_logic_1));
    convolution_7_U0_ap_continue <= ap_sync_continue;
    convolution_7_U0_ap_start <= (real_start and (ap_sync_reg_convolution_7_U0_ap_ready xor ap_const_logic_1));
    convolution_U0_ap_continue <= ap_sync_continue;
    convolution_U0_ap_start <= (real_start and (ap_sync_reg_convolution_U0_ap_ready xor ap_const_logic_1));
    internal_ap_ready <= ap_sync_ready;
    pad_img1_address0 <= convolution_1_U0_pad_img_address0;
    pad_img1_address1 <= convolution_1_U0_pad_img_address1;
    pad_img1_address10 <= ap_const_lv10_0;
    pad_img1_address11 <= ap_const_lv10_0;
    pad_img1_address12 <= ap_const_lv10_0;
    pad_img1_address13 <= ap_const_lv10_0;
    pad_img1_address14 <= ap_const_lv10_0;
    pad_img1_address15 <= ap_const_lv10_0;
    pad_img1_address16 <= ap_const_lv10_0;
    pad_img1_address2 <= ap_const_lv10_0;
    pad_img1_address3 <= ap_const_lv10_0;
    pad_img1_address4 <= ap_const_lv10_0;
    pad_img1_address5 <= ap_const_lv10_0;
    pad_img1_address6 <= ap_const_lv10_0;
    pad_img1_address7 <= ap_const_lv10_0;
    pad_img1_address8 <= ap_const_lv10_0;
    pad_img1_address9 <= ap_const_lv10_0;
    pad_img1_ce0 <= convolution_1_U0_pad_img_ce0;
    pad_img1_ce1 <= convolution_1_U0_pad_img_ce1;
    pad_img1_ce10 <= ap_const_logic_0;
    pad_img1_ce11 <= ap_const_logic_0;
    pad_img1_ce12 <= ap_const_logic_0;
    pad_img1_ce13 <= ap_const_logic_0;
    pad_img1_ce14 <= ap_const_logic_0;
    pad_img1_ce15 <= ap_const_logic_0;
    pad_img1_ce16 <= ap_const_logic_0;
    pad_img1_ce2 <= ap_const_logic_0;
    pad_img1_ce3 <= ap_const_logic_0;
    pad_img1_ce4 <= ap_const_logic_0;
    pad_img1_ce5 <= ap_const_logic_0;
    pad_img1_ce6 <= ap_const_logic_0;
    pad_img1_ce7 <= ap_const_logic_0;
    pad_img1_ce8 <= ap_const_logic_0;
    pad_img1_ce9 <= ap_const_logic_0;
    pad_img1_d0 <= ap_const_lv32_0;
    pad_img1_d1 <= ap_const_lv32_0;
    pad_img1_d10 <= ap_const_lv32_0;
    pad_img1_d11 <= ap_const_lv32_0;
    pad_img1_d12 <= ap_const_lv32_0;
    pad_img1_d13 <= ap_const_lv32_0;
    pad_img1_d14 <= ap_const_lv32_0;
    pad_img1_d15 <= ap_const_lv32_0;
    pad_img1_d16 <= ap_const_lv32_0;
    pad_img1_d2 <= ap_const_lv32_0;
    pad_img1_d3 <= ap_const_lv32_0;
    pad_img1_d4 <= ap_const_lv32_0;
    pad_img1_d5 <= ap_const_lv32_0;
    pad_img1_d6 <= ap_const_lv32_0;
    pad_img1_d7 <= ap_const_lv32_0;
    pad_img1_d8 <= ap_const_lv32_0;
    pad_img1_d9 <= ap_const_lv32_0;
    pad_img1_we0 <= ap_const_logic_0;
    pad_img1_we1 <= ap_const_logic_0;
    pad_img1_we10 <= ap_const_logic_0;
    pad_img1_we11 <= ap_const_logic_0;
    pad_img1_we12 <= ap_const_logic_0;
    pad_img1_we13 <= ap_const_logic_0;
    pad_img1_we14 <= ap_const_logic_0;
    pad_img1_we15 <= ap_const_logic_0;
    pad_img1_we16 <= ap_const_logic_0;
    pad_img1_we2 <= ap_const_logic_0;
    pad_img1_we3 <= ap_const_logic_0;
    pad_img1_we4 <= ap_const_logic_0;
    pad_img1_we5 <= ap_const_logic_0;
    pad_img1_we6 <= ap_const_logic_0;
    pad_img1_we7 <= ap_const_logic_0;
    pad_img1_we8 <= ap_const_logic_0;
    pad_img1_we9 <= ap_const_logic_0;
    pad_img2_address0 <= convolution_2_U0_pad_img_address0;
    pad_img2_address1 <= convolution_2_U0_pad_img_address1;
    pad_img2_address10 <= ap_const_lv10_0;
    pad_img2_address11 <= ap_const_lv10_0;
    pad_img2_address12 <= ap_const_lv10_0;
    pad_img2_address13 <= ap_const_lv10_0;
    pad_img2_address14 <= ap_const_lv10_0;
    pad_img2_address15 <= ap_const_lv10_0;
    pad_img2_address16 <= ap_const_lv10_0;
    pad_img2_address2 <= ap_const_lv10_0;
    pad_img2_address3 <= ap_const_lv10_0;
    pad_img2_address4 <= ap_const_lv10_0;
    pad_img2_address5 <= ap_const_lv10_0;
    pad_img2_address6 <= ap_const_lv10_0;
    pad_img2_address7 <= ap_const_lv10_0;
    pad_img2_address8 <= ap_const_lv10_0;
    pad_img2_address9 <= ap_const_lv10_0;
    pad_img2_ce0 <= convolution_2_U0_pad_img_ce0;
    pad_img2_ce1 <= convolution_2_U0_pad_img_ce1;
    pad_img2_ce10 <= ap_const_logic_0;
    pad_img2_ce11 <= ap_const_logic_0;
    pad_img2_ce12 <= ap_const_logic_0;
    pad_img2_ce13 <= ap_const_logic_0;
    pad_img2_ce14 <= ap_const_logic_0;
    pad_img2_ce15 <= ap_const_logic_0;
    pad_img2_ce16 <= ap_const_logic_0;
    pad_img2_ce2 <= ap_const_logic_0;
    pad_img2_ce3 <= ap_const_logic_0;
    pad_img2_ce4 <= ap_const_logic_0;
    pad_img2_ce5 <= ap_const_logic_0;
    pad_img2_ce6 <= ap_const_logic_0;
    pad_img2_ce7 <= ap_const_logic_0;
    pad_img2_ce8 <= ap_const_logic_0;
    pad_img2_ce9 <= ap_const_logic_0;
    pad_img2_d0 <= ap_const_lv32_0;
    pad_img2_d1 <= ap_const_lv32_0;
    pad_img2_d10 <= ap_const_lv32_0;
    pad_img2_d11 <= ap_const_lv32_0;
    pad_img2_d12 <= ap_const_lv32_0;
    pad_img2_d13 <= ap_const_lv32_0;
    pad_img2_d14 <= ap_const_lv32_0;
    pad_img2_d15 <= ap_const_lv32_0;
    pad_img2_d16 <= ap_const_lv32_0;
    pad_img2_d2 <= ap_const_lv32_0;
    pad_img2_d3 <= ap_const_lv32_0;
    pad_img2_d4 <= ap_const_lv32_0;
    pad_img2_d5 <= ap_const_lv32_0;
    pad_img2_d6 <= ap_const_lv32_0;
    pad_img2_d7 <= ap_const_lv32_0;
    pad_img2_d8 <= ap_const_lv32_0;
    pad_img2_d9 <= ap_const_lv32_0;
    pad_img2_we0 <= ap_const_logic_0;
    pad_img2_we1 <= ap_const_logic_0;
    pad_img2_we10 <= ap_const_logic_0;
    pad_img2_we11 <= ap_const_logic_0;
    pad_img2_we12 <= ap_const_logic_0;
    pad_img2_we13 <= ap_const_logic_0;
    pad_img2_we14 <= ap_const_logic_0;
    pad_img2_we15 <= ap_const_logic_0;
    pad_img2_we16 <= ap_const_logic_0;
    pad_img2_we2 <= ap_const_logic_0;
    pad_img2_we3 <= ap_const_logic_0;
    pad_img2_we4 <= ap_const_logic_0;
    pad_img2_we5 <= ap_const_logic_0;
    pad_img2_we6 <= ap_const_logic_0;
    pad_img2_we7 <= ap_const_logic_0;
    pad_img2_we8 <= ap_const_logic_0;
    pad_img2_we9 <= ap_const_logic_0;
    pad_img3_address0 <= convolution_3_U0_pad_img_address0;
    pad_img3_address1 <= convolution_3_U0_pad_img_address1;
    pad_img3_address10 <= ap_const_lv10_0;
    pad_img3_address11 <= ap_const_lv10_0;
    pad_img3_address12 <= ap_const_lv10_0;
    pad_img3_address13 <= ap_const_lv10_0;
    pad_img3_address14 <= ap_const_lv10_0;
    pad_img3_address15 <= ap_const_lv10_0;
    pad_img3_address16 <= ap_const_lv10_0;
    pad_img3_address2 <= ap_const_lv10_0;
    pad_img3_address3 <= ap_const_lv10_0;
    pad_img3_address4 <= ap_const_lv10_0;
    pad_img3_address5 <= ap_const_lv10_0;
    pad_img3_address6 <= ap_const_lv10_0;
    pad_img3_address7 <= ap_const_lv10_0;
    pad_img3_address8 <= ap_const_lv10_0;
    pad_img3_address9 <= ap_const_lv10_0;
    pad_img3_ce0 <= convolution_3_U0_pad_img_ce0;
    pad_img3_ce1 <= convolution_3_U0_pad_img_ce1;
    pad_img3_ce10 <= ap_const_logic_0;
    pad_img3_ce11 <= ap_const_logic_0;
    pad_img3_ce12 <= ap_const_logic_0;
    pad_img3_ce13 <= ap_const_logic_0;
    pad_img3_ce14 <= ap_const_logic_0;
    pad_img3_ce15 <= ap_const_logic_0;
    pad_img3_ce16 <= ap_const_logic_0;
    pad_img3_ce2 <= ap_const_logic_0;
    pad_img3_ce3 <= ap_const_logic_0;
    pad_img3_ce4 <= ap_const_logic_0;
    pad_img3_ce5 <= ap_const_logic_0;
    pad_img3_ce6 <= ap_const_logic_0;
    pad_img3_ce7 <= ap_const_logic_0;
    pad_img3_ce8 <= ap_const_logic_0;
    pad_img3_ce9 <= ap_const_logic_0;
    pad_img3_d0 <= ap_const_lv32_0;
    pad_img3_d1 <= ap_const_lv32_0;
    pad_img3_d10 <= ap_const_lv32_0;
    pad_img3_d11 <= ap_const_lv32_0;
    pad_img3_d12 <= ap_const_lv32_0;
    pad_img3_d13 <= ap_const_lv32_0;
    pad_img3_d14 <= ap_const_lv32_0;
    pad_img3_d15 <= ap_const_lv32_0;
    pad_img3_d16 <= ap_const_lv32_0;
    pad_img3_d2 <= ap_const_lv32_0;
    pad_img3_d3 <= ap_const_lv32_0;
    pad_img3_d4 <= ap_const_lv32_0;
    pad_img3_d5 <= ap_const_lv32_0;
    pad_img3_d6 <= ap_const_lv32_0;
    pad_img3_d7 <= ap_const_lv32_0;
    pad_img3_d8 <= ap_const_lv32_0;
    pad_img3_d9 <= ap_const_lv32_0;
    pad_img3_we0 <= ap_const_logic_0;
    pad_img3_we1 <= ap_const_logic_0;
    pad_img3_we10 <= ap_const_logic_0;
    pad_img3_we11 <= ap_const_logic_0;
    pad_img3_we12 <= ap_const_logic_0;
    pad_img3_we13 <= ap_const_logic_0;
    pad_img3_we14 <= ap_const_logic_0;
    pad_img3_we15 <= ap_const_logic_0;
    pad_img3_we16 <= ap_const_logic_0;
    pad_img3_we2 <= ap_const_logic_0;
    pad_img3_we3 <= ap_const_logic_0;
    pad_img3_we4 <= ap_const_logic_0;
    pad_img3_we5 <= ap_const_logic_0;
    pad_img3_we6 <= ap_const_logic_0;
    pad_img3_we7 <= ap_const_logic_0;
    pad_img3_we8 <= ap_const_logic_0;
    pad_img3_we9 <= ap_const_logic_0;
    pad_img4_address0 <= convolution_4_U0_pad_img_address0;
    pad_img4_address1 <= convolution_4_U0_pad_img_address1;
    pad_img4_address10 <= ap_const_lv10_0;
    pad_img4_address11 <= ap_const_lv10_0;
    pad_img4_address12 <= ap_const_lv10_0;
    pad_img4_address13 <= ap_const_lv10_0;
    pad_img4_address14 <= ap_const_lv10_0;
    pad_img4_address15 <= ap_const_lv10_0;
    pad_img4_address16 <= ap_const_lv10_0;
    pad_img4_address2 <= ap_const_lv10_0;
    pad_img4_address3 <= ap_const_lv10_0;
    pad_img4_address4 <= ap_const_lv10_0;
    pad_img4_address5 <= ap_const_lv10_0;
    pad_img4_address6 <= ap_const_lv10_0;
    pad_img4_address7 <= ap_const_lv10_0;
    pad_img4_address8 <= ap_const_lv10_0;
    pad_img4_address9 <= ap_const_lv10_0;
    pad_img4_ce0 <= convolution_4_U0_pad_img_ce0;
    pad_img4_ce1 <= convolution_4_U0_pad_img_ce1;
    pad_img4_ce10 <= ap_const_logic_0;
    pad_img4_ce11 <= ap_const_logic_0;
    pad_img4_ce12 <= ap_const_logic_0;
    pad_img4_ce13 <= ap_const_logic_0;
    pad_img4_ce14 <= ap_const_logic_0;
    pad_img4_ce15 <= ap_const_logic_0;
    pad_img4_ce16 <= ap_const_logic_0;
    pad_img4_ce2 <= ap_const_logic_0;
    pad_img4_ce3 <= ap_const_logic_0;
    pad_img4_ce4 <= ap_const_logic_0;
    pad_img4_ce5 <= ap_const_logic_0;
    pad_img4_ce6 <= ap_const_logic_0;
    pad_img4_ce7 <= ap_const_logic_0;
    pad_img4_ce8 <= ap_const_logic_0;
    pad_img4_ce9 <= ap_const_logic_0;
    pad_img4_d0 <= ap_const_lv32_0;
    pad_img4_d1 <= ap_const_lv32_0;
    pad_img4_d10 <= ap_const_lv32_0;
    pad_img4_d11 <= ap_const_lv32_0;
    pad_img4_d12 <= ap_const_lv32_0;
    pad_img4_d13 <= ap_const_lv32_0;
    pad_img4_d14 <= ap_const_lv32_0;
    pad_img4_d15 <= ap_const_lv32_0;
    pad_img4_d16 <= ap_const_lv32_0;
    pad_img4_d2 <= ap_const_lv32_0;
    pad_img4_d3 <= ap_const_lv32_0;
    pad_img4_d4 <= ap_const_lv32_0;
    pad_img4_d5 <= ap_const_lv32_0;
    pad_img4_d6 <= ap_const_lv32_0;
    pad_img4_d7 <= ap_const_lv32_0;
    pad_img4_d8 <= ap_const_lv32_0;
    pad_img4_d9 <= ap_const_lv32_0;
    pad_img4_we0 <= ap_const_logic_0;
    pad_img4_we1 <= ap_const_logic_0;
    pad_img4_we10 <= ap_const_logic_0;
    pad_img4_we11 <= ap_const_logic_0;
    pad_img4_we12 <= ap_const_logic_0;
    pad_img4_we13 <= ap_const_logic_0;
    pad_img4_we14 <= ap_const_logic_0;
    pad_img4_we15 <= ap_const_logic_0;
    pad_img4_we16 <= ap_const_logic_0;
    pad_img4_we2 <= ap_const_logic_0;
    pad_img4_we3 <= ap_const_logic_0;
    pad_img4_we4 <= ap_const_logic_0;
    pad_img4_we5 <= ap_const_logic_0;
    pad_img4_we6 <= ap_const_logic_0;
    pad_img4_we7 <= ap_const_logic_0;
    pad_img4_we8 <= ap_const_logic_0;
    pad_img4_we9 <= ap_const_logic_0;
    pad_img5_address0 <= convolution_5_U0_pad_img_address0;
    pad_img5_address1 <= convolution_5_U0_pad_img_address1;
    pad_img5_address10 <= ap_const_lv10_0;
    pad_img5_address11 <= ap_const_lv10_0;
    pad_img5_address12 <= ap_const_lv10_0;
    pad_img5_address13 <= ap_const_lv10_0;
    pad_img5_address14 <= ap_const_lv10_0;
    pad_img5_address15 <= ap_const_lv10_0;
    pad_img5_address16 <= ap_const_lv10_0;
    pad_img5_address2 <= ap_const_lv10_0;
    pad_img5_address3 <= ap_const_lv10_0;
    pad_img5_address4 <= ap_const_lv10_0;
    pad_img5_address5 <= ap_const_lv10_0;
    pad_img5_address6 <= ap_const_lv10_0;
    pad_img5_address7 <= ap_const_lv10_0;
    pad_img5_address8 <= ap_const_lv10_0;
    pad_img5_address9 <= ap_const_lv10_0;
    pad_img5_ce0 <= convolution_5_U0_pad_img_ce0;
    pad_img5_ce1 <= convolution_5_U0_pad_img_ce1;
    pad_img5_ce10 <= ap_const_logic_0;
    pad_img5_ce11 <= ap_const_logic_0;
    pad_img5_ce12 <= ap_const_logic_0;
    pad_img5_ce13 <= ap_const_logic_0;
    pad_img5_ce14 <= ap_const_logic_0;
    pad_img5_ce15 <= ap_const_logic_0;
    pad_img5_ce16 <= ap_const_logic_0;
    pad_img5_ce2 <= ap_const_logic_0;
    pad_img5_ce3 <= ap_const_logic_0;
    pad_img5_ce4 <= ap_const_logic_0;
    pad_img5_ce5 <= ap_const_logic_0;
    pad_img5_ce6 <= ap_const_logic_0;
    pad_img5_ce7 <= ap_const_logic_0;
    pad_img5_ce8 <= ap_const_logic_0;
    pad_img5_ce9 <= ap_const_logic_0;
    pad_img5_d0 <= ap_const_lv32_0;
    pad_img5_d1 <= ap_const_lv32_0;
    pad_img5_d10 <= ap_const_lv32_0;
    pad_img5_d11 <= ap_const_lv32_0;
    pad_img5_d12 <= ap_const_lv32_0;
    pad_img5_d13 <= ap_const_lv32_0;
    pad_img5_d14 <= ap_const_lv32_0;
    pad_img5_d15 <= ap_const_lv32_0;
    pad_img5_d16 <= ap_const_lv32_0;
    pad_img5_d2 <= ap_const_lv32_0;
    pad_img5_d3 <= ap_const_lv32_0;
    pad_img5_d4 <= ap_const_lv32_0;
    pad_img5_d5 <= ap_const_lv32_0;
    pad_img5_d6 <= ap_const_lv32_0;
    pad_img5_d7 <= ap_const_lv32_0;
    pad_img5_d8 <= ap_const_lv32_0;
    pad_img5_d9 <= ap_const_lv32_0;
    pad_img5_we0 <= ap_const_logic_0;
    pad_img5_we1 <= ap_const_logic_0;
    pad_img5_we10 <= ap_const_logic_0;
    pad_img5_we11 <= ap_const_logic_0;
    pad_img5_we12 <= ap_const_logic_0;
    pad_img5_we13 <= ap_const_logic_0;
    pad_img5_we14 <= ap_const_logic_0;
    pad_img5_we15 <= ap_const_logic_0;
    pad_img5_we16 <= ap_const_logic_0;
    pad_img5_we2 <= ap_const_logic_0;
    pad_img5_we3 <= ap_const_logic_0;
    pad_img5_we4 <= ap_const_logic_0;
    pad_img5_we5 <= ap_const_logic_0;
    pad_img5_we6 <= ap_const_logic_0;
    pad_img5_we7 <= ap_const_logic_0;
    pad_img5_we8 <= ap_const_logic_0;
    pad_img5_we9 <= ap_const_logic_0;
    pad_img6_address0 <= convolution_6_U0_pad_img_address0;
    pad_img6_address1 <= convolution_6_U0_pad_img_address1;
    pad_img6_address10 <= ap_const_lv10_0;
    pad_img6_address11 <= ap_const_lv10_0;
    pad_img6_address12 <= ap_const_lv10_0;
    pad_img6_address13 <= ap_const_lv10_0;
    pad_img6_address14 <= ap_const_lv10_0;
    pad_img6_address15 <= ap_const_lv10_0;
    pad_img6_address16 <= ap_const_lv10_0;
    pad_img6_address2 <= ap_const_lv10_0;
    pad_img6_address3 <= ap_const_lv10_0;
    pad_img6_address4 <= ap_const_lv10_0;
    pad_img6_address5 <= ap_const_lv10_0;
    pad_img6_address6 <= ap_const_lv10_0;
    pad_img6_address7 <= ap_const_lv10_0;
    pad_img6_address8 <= ap_const_lv10_0;
    pad_img6_address9 <= ap_const_lv10_0;
    pad_img6_ce0 <= convolution_6_U0_pad_img_ce0;
    pad_img6_ce1 <= convolution_6_U0_pad_img_ce1;
    pad_img6_ce10 <= ap_const_logic_0;
    pad_img6_ce11 <= ap_const_logic_0;
    pad_img6_ce12 <= ap_const_logic_0;
    pad_img6_ce13 <= ap_const_logic_0;
    pad_img6_ce14 <= ap_const_logic_0;
    pad_img6_ce15 <= ap_const_logic_0;
    pad_img6_ce16 <= ap_const_logic_0;
    pad_img6_ce2 <= ap_const_logic_0;
    pad_img6_ce3 <= ap_const_logic_0;
    pad_img6_ce4 <= ap_const_logic_0;
    pad_img6_ce5 <= ap_const_logic_0;
    pad_img6_ce6 <= ap_const_logic_0;
    pad_img6_ce7 <= ap_const_logic_0;
    pad_img6_ce8 <= ap_const_logic_0;
    pad_img6_ce9 <= ap_const_logic_0;
    pad_img6_d0 <= ap_const_lv32_0;
    pad_img6_d1 <= ap_const_lv32_0;
    pad_img6_d10 <= ap_const_lv32_0;
    pad_img6_d11 <= ap_const_lv32_0;
    pad_img6_d12 <= ap_const_lv32_0;
    pad_img6_d13 <= ap_const_lv32_0;
    pad_img6_d14 <= ap_const_lv32_0;
    pad_img6_d15 <= ap_const_lv32_0;
    pad_img6_d16 <= ap_const_lv32_0;
    pad_img6_d2 <= ap_const_lv32_0;
    pad_img6_d3 <= ap_const_lv32_0;
    pad_img6_d4 <= ap_const_lv32_0;
    pad_img6_d5 <= ap_const_lv32_0;
    pad_img6_d6 <= ap_const_lv32_0;
    pad_img6_d7 <= ap_const_lv32_0;
    pad_img6_d8 <= ap_const_lv32_0;
    pad_img6_d9 <= ap_const_lv32_0;
    pad_img6_we0 <= ap_const_logic_0;
    pad_img6_we1 <= ap_const_logic_0;
    pad_img6_we10 <= ap_const_logic_0;
    pad_img6_we11 <= ap_const_logic_0;
    pad_img6_we12 <= ap_const_logic_0;
    pad_img6_we13 <= ap_const_logic_0;
    pad_img6_we14 <= ap_const_logic_0;
    pad_img6_we15 <= ap_const_logic_0;
    pad_img6_we16 <= ap_const_logic_0;
    pad_img6_we2 <= ap_const_logic_0;
    pad_img6_we3 <= ap_const_logic_0;
    pad_img6_we4 <= ap_const_logic_0;
    pad_img6_we5 <= ap_const_logic_0;
    pad_img6_we6 <= ap_const_logic_0;
    pad_img6_we7 <= ap_const_logic_0;
    pad_img6_we8 <= ap_const_logic_0;
    pad_img6_we9 <= ap_const_logic_0;
    pad_img7_address0 <= convolution_7_U0_pad_img_address0;
    pad_img7_address1 <= convolution_7_U0_pad_img_address1;
    pad_img7_address10 <= ap_const_lv10_0;
    pad_img7_address11 <= ap_const_lv10_0;
    pad_img7_address12 <= ap_const_lv10_0;
    pad_img7_address13 <= ap_const_lv10_0;
    pad_img7_address14 <= ap_const_lv10_0;
    pad_img7_address15 <= ap_const_lv10_0;
    pad_img7_address16 <= ap_const_lv10_0;
    pad_img7_address2 <= ap_const_lv10_0;
    pad_img7_address3 <= ap_const_lv10_0;
    pad_img7_address4 <= ap_const_lv10_0;
    pad_img7_address5 <= ap_const_lv10_0;
    pad_img7_address6 <= ap_const_lv10_0;
    pad_img7_address7 <= ap_const_lv10_0;
    pad_img7_address8 <= ap_const_lv10_0;
    pad_img7_address9 <= ap_const_lv10_0;
    pad_img7_ce0 <= convolution_7_U0_pad_img_ce0;
    pad_img7_ce1 <= convolution_7_U0_pad_img_ce1;
    pad_img7_ce10 <= ap_const_logic_0;
    pad_img7_ce11 <= ap_const_logic_0;
    pad_img7_ce12 <= ap_const_logic_0;
    pad_img7_ce13 <= ap_const_logic_0;
    pad_img7_ce14 <= ap_const_logic_0;
    pad_img7_ce15 <= ap_const_logic_0;
    pad_img7_ce16 <= ap_const_logic_0;
    pad_img7_ce2 <= ap_const_logic_0;
    pad_img7_ce3 <= ap_const_logic_0;
    pad_img7_ce4 <= ap_const_logic_0;
    pad_img7_ce5 <= ap_const_logic_0;
    pad_img7_ce6 <= ap_const_logic_0;
    pad_img7_ce7 <= ap_const_logic_0;
    pad_img7_ce8 <= ap_const_logic_0;
    pad_img7_ce9 <= ap_const_logic_0;
    pad_img7_d0 <= ap_const_lv32_0;
    pad_img7_d1 <= ap_const_lv32_0;
    pad_img7_d10 <= ap_const_lv32_0;
    pad_img7_d11 <= ap_const_lv32_0;
    pad_img7_d12 <= ap_const_lv32_0;
    pad_img7_d13 <= ap_const_lv32_0;
    pad_img7_d14 <= ap_const_lv32_0;
    pad_img7_d15 <= ap_const_lv32_0;
    pad_img7_d16 <= ap_const_lv32_0;
    pad_img7_d2 <= ap_const_lv32_0;
    pad_img7_d3 <= ap_const_lv32_0;
    pad_img7_d4 <= ap_const_lv32_0;
    pad_img7_d5 <= ap_const_lv32_0;
    pad_img7_d6 <= ap_const_lv32_0;
    pad_img7_d7 <= ap_const_lv32_0;
    pad_img7_d8 <= ap_const_lv32_0;
    pad_img7_d9 <= ap_const_lv32_0;
    pad_img7_we0 <= ap_const_logic_0;
    pad_img7_we1 <= ap_const_logic_0;
    pad_img7_we10 <= ap_const_logic_0;
    pad_img7_we11 <= ap_const_logic_0;
    pad_img7_we12 <= ap_const_logic_0;
    pad_img7_we13 <= ap_const_logic_0;
    pad_img7_we14 <= ap_const_logic_0;
    pad_img7_we15 <= ap_const_logic_0;
    pad_img7_we16 <= ap_const_logic_0;
    pad_img7_we2 <= ap_const_logic_0;
    pad_img7_we3 <= ap_const_logic_0;
    pad_img7_we4 <= ap_const_logic_0;
    pad_img7_we5 <= ap_const_logic_0;
    pad_img7_we6 <= ap_const_logic_0;
    pad_img7_we7 <= ap_const_logic_0;
    pad_img7_we8 <= ap_const_logic_0;
    pad_img7_we9 <= ap_const_logic_0;
    pad_img_address0 <= convolution_U0_pad_img_address0;
    pad_img_address1 <= convolution_U0_pad_img_address1;
    pad_img_address10 <= ap_const_lv10_0;
    pad_img_address11 <= ap_const_lv10_0;
    pad_img_address12 <= ap_const_lv10_0;
    pad_img_address13 <= ap_const_lv10_0;
    pad_img_address14 <= ap_const_lv10_0;
    pad_img_address15 <= ap_const_lv10_0;
    pad_img_address16 <= ap_const_lv10_0;
    pad_img_address2 <= ap_const_lv10_0;
    pad_img_address3 <= ap_const_lv10_0;
    pad_img_address4 <= ap_const_lv10_0;
    pad_img_address5 <= ap_const_lv10_0;
    pad_img_address6 <= ap_const_lv10_0;
    pad_img_address7 <= ap_const_lv10_0;
    pad_img_address8 <= ap_const_lv10_0;
    pad_img_address9 <= ap_const_lv10_0;
    pad_img_ce0 <= convolution_U0_pad_img_ce0;
    pad_img_ce1 <= convolution_U0_pad_img_ce1;
    pad_img_ce10 <= ap_const_logic_0;
    pad_img_ce11 <= ap_const_logic_0;
    pad_img_ce12 <= ap_const_logic_0;
    pad_img_ce13 <= ap_const_logic_0;
    pad_img_ce14 <= ap_const_logic_0;
    pad_img_ce15 <= ap_const_logic_0;
    pad_img_ce16 <= ap_const_logic_0;
    pad_img_ce2 <= ap_const_logic_0;
    pad_img_ce3 <= ap_const_logic_0;
    pad_img_ce4 <= ap_const_logic_0;
    pad_img_ce5 <= ap_const_logic_0;
    pad_img_ce6 <= ap_const_logic_0;
    pad_img_ce7 <= ap_const_logic_0;
    pad_img_ce8 <= ap_const_logic_0;
    pad_img_ce9 <= ap_const_logic_0;
    pad_img_d0 <= ap_const_lv32_0;
    pad_img_d1 <= ap_const_lv32_0;
    pad_img_d10 <= ap_const_lv32_0;
    pad_img_d11 <= ap_const_lv32_0;
    pad_img_d12 <= ap_const_lv32_0;
    pad_img_d13 <= ap_const_lv32_0;
    pad_img_d14 <= ap_const_lv32_0;
    pad_img_d15 <= ap_const_lv32_0;
    pad_img_d16 <= ap_const_lv32_0;
    pad_img_d2 <= ap_const_lv32_0;
    pad_img_d3 <= ap_const_lv32_0;
    pad_img_d4 <= ap_const_lv32_0;
    pad_img_d5 <= ap_const_lv32_0;
    pad_img_d6 <= ap_const_lv32_0;
    pad_img_d7 <= ap_const_lv32_0;
    pad_img_d8 <= ap_const_lv32_0;
    pad_img_d9 <= ap_const_lv32_0;
    pad_img_we0 <= ap_const_logic_0;
    pad_img_we1 <= ap_const_logic_0;
    pad_img_we10 <= ap_const_logic_0;
    pad_img_we11 <= ap_const_logic_0;
    pad_img_we12 <= ap_const_logic_0;
    pad_img_we13 <= ap_const_logic_0;
    pad_img_we14 <= ap_const_logic_0;
    pad_img_we15 <= ap_const_logic_0;
    pad_img_we16 <= ap_const_logic_0;
    pad_img_we2 <= ap_const_logic_0;
    pad_img_we3 <= ap_const_logic_0;
    pad_img_we4 <= ap_const_logic_0;
    pad_img_we5 <= ap_const_logic_0;
    pad_img_we6 <= ap_const_logic_0;
    pad_img_we7 <= ap_const_logic_0;
    pad_img_we8 <= ap_const_logic_0;
    pad_img_we9 <= ap_const_logic_0;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf_0_address0 <= convolution_U0_weight_buf_address0;
    weight_buf_0_address1 <= convolution_U0_weight_buf_address1;
    weight_buf_0_ce0 <= convolution_U0_weight_buf_ce0;
    weight_buf_0_ce1 <= convolution_U0_weight_buf_ce1;
    weight_buf_0_d0 <= ap_const_lv32_0;
    weight_buf_0_d1 <= ap_const_lv32_0;
    weight_buf_0_we0 <= ap_const_logic_0;
    weight_buf_0_we1 <= ap_const_logic_0;
    weight_buf_1_address0 <= convolution_1_U0_weight_buf_address0;
    weight_buf_1_address1 <= convolution_1_U0_weight_buf_address1;
    weight_buf_1_ce0 <= convolution_1_U0_weight_buf_ce0;
    weight_buf_1_ce1 <= convolution_1_U0_weight_buf_ce1;
    weight_buf_1_d0 <= ap_const_lv32_0;
    weight_buf_1_d1 <= ap_const_lv32_0;
    weight_buf_1_we0 <= ap_const_logic_0;
    weight_buf_1_we1 <= ap_const_logic_0;
    weight_buf_2_address0 <= convolution_2_U0_weight_buf_address0;
    weight_buf_2_address1 <= convolution_2_U0_weight_buf_address1;
    weight_buf_2_ce0 <= convolution_2_U0_weight_buf_ce0;
    weight_buf_2_ce1 <= convolution_2_U0_weight_buf_ce1;
    weight_buf_2_d0 <= ap_const_lv32_0;
    weight_buf_2_d1 <= ap_const_lv32_0;
    weight_buf_2_we0 <= ap_const_logic_0;
    weight_buf_2_we1 <= ap_const_logic_0;
    weight_buf_3_address0 <= convolution_3_U0_weight_buf_address0;
    weight_buf_3_address1 <= convolution_3_U0_weight_buf_address1;
    weight_buf_3_ce0 <= convolution_3_U0_weight_buf_ce0;
    weight_buf_3_ce1 <= convolution_3_U0_weight_buf_ce1;
    weight_buf_3_d0 <= ap_const_lv32_0;
    weight_buf_3_d1 <= ap_const_lv32_0;
    weight_buf_3_we0 <= ap_const_logic_0;
    weight_buf_3_we1 <= ap_const_logic_0;
    weight_buf_4_address0 <= convolution_4_U0_weight_buf_address0;
    weight_buf_4_address1 <= convolution_4_U0_weight_buf_address1;
    weight_buf_4_ce0 <= convolution_4_U0_weight_buf_ce0;
    weight_buf_4_ce1 <= convolution_4_U0_weight_buf_ce1;
    weight_buf_4_d0 <= ap_const_lv32_0;
    weight_buf_4_d1 <= ap_const_lv32_0;
    weight_buf_4_we0 <= ap_const_logic_0;
    weight_buf_4_we1 <= ap_const_logic_0;
    weight_buf_5_address0 <= convolution_5_U0_weight_buf_address0;
    weight_buf_5_address1 <= convolution_5_U0_weight_buf_address1;
    weight_buf_5_ce0 <= convolution_5_U0_weight_buf_ce0;
    weight_buf_5_ce1 <= convolution_5_U0_weight_buf_ce1;
    weight_buf_5_d0 <= ap_const_lv32_0;
    weight_buf_5_d1 <= ap_const_lv32_0;
    weight_buf_5_we0 <= ap_const_logic_0;
    weight_buf_5_we1 <= ap_const_logic_0;
    weight_buf_6_address0 <= convolution_6_U0_weight_buf_address0;
    weight_buf_6_address1 <= convolution_6_U0_weight_buf_address1;
    weight_buf_6_ce0 <= convolution_6_U0_weight_buf_ce0;
    weight_buf_6_ce1 <= convolution_6_U0_weight_buf_ce1;
    weight_buf_6_d0 <= ap_const_lv32_0;
    weight_buf_6_d1 <= ap_const_lv32_0;
    weight_buf_6_we0 <= ap_const_logic_0;
    weight_buf_6_we1 <= ap_const_logic_0;
    weight_buf_7_address0 <= convolution_7_U0_weight_buf_address0;
    weight_buf_7_address1 <= convolution_7_U0_weight_buf_address1;
    weight_buf_7_ce0 <= convolution_7_U0_weight_buf_ce0;
    weight_buf_7_ce1 <= convolution_7_U0_weight_buf_ce1;
    weight_buf_7_d0 <= ap_const_lv32_0;
    weight_buf_7_d1 <= ap_const_lv32_0;
    weight_buf_7_we0 <= ap_const_logic_0;
    weight_buf_7_we1 <= ap_const_logic_0;
end behav;
