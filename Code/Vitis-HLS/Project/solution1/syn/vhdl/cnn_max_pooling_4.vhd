-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_max_pooling_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    conv_to_pool_streams_4_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_4_empty_n : IN STD_LOGIC;
    conv_to_pool_streams_4_read : OUT STD_LOGIC;
    pool_to_flat_streams_4_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    pool_to_flat_streams_4_full_n : IN STD_LOGIC;
    pool_to_flat_streams_4_write : OUT STD_LOGIC );
end;


architecture behav of cnn_max_pooling_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_800000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000100000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_C4 : STD_LOGIC_VECTOR (7 downto 0) := "11000100";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal icmp_ln15_reg_373 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage3 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal conv_to_pool_streams_4_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln15_fu_100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal pool_to_flat_streams_4_blk_n : STD_LOGIC;
    signal reg_88 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln15_reg_373_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln28_fu_112_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln28_reg_377 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_82_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_reg_382 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_121_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_reg_387 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln28_40_fu_126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_40_reg_393 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_41_reg_398 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_42_fu_135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_42_reg_403 : STD_LOGIC_VECTOR (0 downto 0);
    signal pool_22_fu_151_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_22_reg_408 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal conv_to_pool_streams_4_read_2_reg_415 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln28_45_reg_420 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_45_reg_420_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_46_fu_162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_46_reg_425 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_46_reg_425_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_168_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_reg_430 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal conv_to_pool_streams_4_read_3_reg_436 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_to_pool_streams_4_read_3_reg_436_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln28_49_reg_441 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_49_reg_441_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_50_fu_177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_50_reg_446 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_50_reg_446_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal pool_24_fu_234_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_24_reg_451 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_fu_240_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_reg_458 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_26_fu_295_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_26_reg_464 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_fu_301_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_reg_471 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_28_fu_356_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_28_reg_477 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal indvar_flatten_fu_50 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln15_fu_106_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal grp_fu_67_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_67_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_72_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_19_fu_131_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln28_fu_141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_67_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_fu_145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln28_21_fu_158_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln28_23_fu_173_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln28_fu_183_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_186_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_20_fu_196_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_44_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_43_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_19_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_20_fu_216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_19_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_20_fu_228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_7_fu_244_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_247_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_22_fu_257_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_48_fu_271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_47_fu_265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_21_fu_261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_22_fu_277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_21_fu_283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_22_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln28_8_fu_305_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_308_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln28_24_fu_318_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln28_52_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_51_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_23_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_24_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_23_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_24_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_67_ce : STD_LOGIC;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter1_stage2 : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to2 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_130 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component cnn_flow_control_loop_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    fcmp_32ns_32ns_1_2_no_dsp_1_U244 : component cnn_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_67_p0,
        din1 => grp_fu_67_p1,
        ce => grp_fu_67_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_67_p2);

    flow_control_loop_pipe_U : component cnn_flow_control_loop_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage3,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_continue);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage3)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage2))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_50_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_130)) then
                if ((icmp_ln15_fu_100_p2 = ap_const_lv1_0)) then 
                    indvar_flatten_fu_50 <= add_ln15_fu_106_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_50 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln15_reg_373 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                conv_to_pool_streams_4_read_2_reg_415 <= conv_to_pool_streams_4_dout;
                icmp_ln28_45_reg_420 <= grp_fu_82_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln15_reg_373 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                conv_to_pool_streams_4_read_3_reg_436 <= conv_to_pool_streams_4_dout;
                icmp_ln28_49_reg_441 <= grp_fu_82_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                conv_to_pool_streams_4_read_3_reg_436_pp0_iter1_reg <= conv_to_pool_streams_4_read_3_reg_436;
                icmp_ln28_49_reg_441_pp0_iter1_reg <= icmp_ln28_49_reg_441;
                icmp_ln28_50_reg_446_pp0_iter1_reg <= icmp_ln28_50_reg_446;
                pool_26_reg_464 <= pool_26_fu_295_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln15_reg_373 <= icmp_ln15_fu_100_p2;
                icmp_ln15_reg_373_pp0_iter1_reg <= icmp_ln15_reg_373;
                pool_24_reg_451 <= pool_24_fu_234_p3;
                tmp_44_reg_471 <= tmp_44_fu_301_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln15_reg_373 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                icmp_ln28_40_reg_393 <= icmp_ln28_40_fu_126_p2;
                icmp_ln28_42_reg_403 <= icmp_ln28_42_fu_135_p2;
                tmp_41_reg_387 <= tmp_41_fu_121_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln15_reg_373 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                icmp_ln28_41_reg_398 <= grp_fu_82_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                icmp_ln28_45_reg_420_pp0_iter1_reg <= icmp_ln28_45_reg_420;
                icmp_ln28_46_reg_425_pp0_iter1_reg <= icmp_ln28_46_reg_425;
                tmp_43_reg_458 <= tmp_43_fu_240_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln15_reg_373 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                icmp_ln28_46_reg_425 <= icmp_ln28_46_fu_162_p2;
                pool_22_reg_408 <= pool_22_fu_151_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln15_reg_373 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                icmp_ln28_50_reg_446 <= icmp_ln28_50_fu_177_p2;
                tmp_42_reg_430 <= tmp_42_fu_168_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln15_fu_100_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln28_reg_382 <= grp_fu_82_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                pool_28_reg_477 <= pool_28_fu_356_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln15_fu_100_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln15_reg_373 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_88 <= conv_to_pool_streams_4_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln15_fu_100_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                trunc_ln28_reg_377 <= trunc_ln28_fu_112_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage2_subdone, ap_condition_exit_pp0_iter1_stage2, ap_idle_pp0_0to0, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to2, ap_block_pp0_stage1_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln15_fu_106_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv8_1));
    and_ln28_19_fu_222_p2 <= (or_ln28_20_fu_216_p2 and or_ln28_19_fu_200_p2);
    and_ln28_20_fu_228_p2 <= (grp_fu_67_p2 and and_ln28_19_fu_222_p2);
    and_ln28_21_fu_283_p2 <= (or_ln28_22_fu_277_p2 and or_ln28_21_fu_261_p2);
    and_ln28_22_fu_289_p2 <= (grp_fu_67_p2 and and_ln28_21_fu_283_p2);
    and_ln28_23_fu_344_p2 <= (or_ln28_24_fu_338_p2 and or_ln28_23_fu_322_p2);
    and_ln28_24_fu_350_p2 <= (grp_fu_67_p2 and and_ln28_23_fu_344_p2);
    and_ln28_fu_145_p2 <= (or_ln28_fu_141_p2 and grp_fu_67_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_00001_assign_proc : process(ap_enable_reg_pp0_iter0, conv_to_pool_streams_4_empty_n, ap_done_reg, icmp_ln15_fu_100_p2)
    begin
                ap_block_pp0_stage0_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((icmp_ln15_fu_100_p2 = ap_const_lv1_0) and (conv_to_pool_streams_4_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter0, conv_to_pool_streams_4_empty_n, ap_done_reg, icmp_ln15_fu_100_p2)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((icmp_ln15_fu_100_p2 = ap_const_lv1_0) and (conv_to_pool_streams_4_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, conv_to_pool_streams_4_empty_n, ap_done_reg, icmp_ln15_fu_100_p2)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((icmp_ln15_fu_100_p2 = ap_const_lv1_0) and (conv_to_pool_streams_4_empty_n = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_00001_assign_proc : process(ap_enable_reg_pp0_iter0, conv_to_pool_streams_4_empty_n, icmp_ln15_reg_373)
    begin
                ap_block_pp0_stage1_00001 <= ((icmp_ln15_reg_373 = ap_const_lv1_0) and (conv_to_pool_streams_4_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, conv_to_pool_streams_4_empty_n, icmp_ln15_reg_373)
    begin
                ap_block_pp0_stage1_11001 <= ((icmp_ln15_reg_373 = ap_const_lv1_0) and (conv_to_pool_streams_4_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, conv_to_pool_streams_4_empty_n, icmp_ln15_reg_373)
    begin
                ap_block_pp0_stage1_subdone <= ((icmp_ln15_reg_373 = ap_const_lv1_0) and (conv_to_pool_streams_4_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, conv_to_pool_streams_4_empty_n, icmp_ln15_reg_373, pool_to_flat_streams_4_full_n)
    begin
                ap_block_pp0_stage2_00001 <= (((icmp_ln15_reg_373 = ap_const_lv1_0) and (conv_to_pool_streams_4_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((pool_to_flat_streams_4_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, conv_to_pool_streams_4_empty_n, icmp_ln15_reg_373, pool_to_flat_streams_4_full_n)
    begin
                ap_block_pp0_stage2_01001 <= (((icmp_ln15_reg_373 = ap_const_lv1_0) and (conv_to_pool_streams_4_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((pool_to_flat_streams_4_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, conv_to_pool_streams_4_empty_n, icmp_ln15_reg_373, pool_to_flat_streams_4_full_n)
    begin
                ap_block_pp0_stage2_11001 <= (((icmp_ln15_reg_373 = ap_const_lv1_0) and (conv_to_pool_streams_4_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((pool_to_flat_streams_4_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, conv_to_pool_streams_4_empty_n, icmp_ln15_reg_373, pool_to_flat_streams_4_full_n)
    begin
                ap_block_pp0_stage2_subdone <= (((icmp_ln15_reg_373 = ap_const_lv1_0) and (conv_to_pool_streams_4_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((pool_to_flat_streams_4_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_00001_assign_proc : process(ap_enable_reg_pp0_iter0, conv_to_pool_streams_4_empty_n, icmp_ln15_reg_373)
    begin
                ap_block_pp0_stage3_00001 <= ((icmp_ln15_reg_373 = ap_const_lv1_0) and (conv_to_pool_streams_4_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, conv_to_pool_streams_4_empty_n, icmp_ln15_reg_373, ap_done_reg)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_done_reg = ap_const_logic_1) or ((icmp_ln15_reg_373 = ap_const_lv1_0) and (conv_to_pool_streams_4_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, conv_to_pool_streams_4_empty_n, icmp_ln15_reg_373, ap_done_reg)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_done_reg = ap_const_logic_1) or ((icmp_ln15_reg_373 = ap_const_lv1_0) and (conv_to_pool_streams_4_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage2_iter2_assign_proc : process(pool_to_flat_streams_4_full_n)
    begin
                ap_block_state11_pp0_stage2_iter2 <= (pool_to_flat_streams_4_full_n = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(conv_to_pool_streams_4_empty_n, ap_done_reg, icmp_ln15_fu_100_p2)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_done_reg = ap_const_logic_1) or ((icmp_ln15_fu_100_p2 = ap_const_lv1_0) and (conv_to_pool_streams_4_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state2_pp0_stage1_iter0_assign_proc : process(conv_to_pool_streams_4_empty_n, icmp_ln15_reg_373)
    begin
                ap_block_state2_pp0_stage1_iter0 <= ((icmp_ln15_reg_373 = ap_const_lv1_0) and (conv_to_pool_streams_4_empty_n = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage2_iter0_assign_proc : process(conv_to_pool_streams_4_empty_n, icmp_ln15_reg_373)
    begin
                ap_block_state3_pp0_stage2_iter0 <= ((icmp_ln15_reg_373 = ap_const_lv1_0) and (conv_to_pool_streams_4_empty_n = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage3_iter0_assign_proc : process(conv_to_pool_streams_4_empty_n, icmp_ln15_reg_373)
    begin
                ap_block_state4_pp0_stage3_iter0 <= ((icmp_ln15_reg_373 = ap_const_lv1_0) and (conv_to_pool_streams_4_empty_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_130_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_130 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, icmp_ln15_reg_373, ap_block_pp0_stage3_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (icmp_ln15_reg_373 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, icmp_ln15_reg_373_pp0_iter1_reg, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln15_reg_373_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter1_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_done_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage3;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, indvar_flatten_fu_50, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_50;
        end if; 
    end process;

    bitcast_ln28_7_fu_244_p1 <= pool_24_reg_451;
    bitcast_ln28_8_fu_305_p1 <= pool_26_reg_464;
    bitcast_ln28_fu_183_p1 <= pool_22_reg_408;

    conv_to_pool_streams_4_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, conv_to_pool_streams_4_empty_n, icmp_ln15_reg_373, ap_done_reg, ap_block_pp0_stage0, icmp_ln15_fu_100_p2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln15_reg_373 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln15_fu_100_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_done_reg = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln15_reg_373 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln15_reg_373 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            conv_to_pool_streams_4_blk_n <= conv_to_pool_streams_4_empty_n;
        else 
            conv_to_pool_streams_4_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    conv_to_pool_streams_4_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, icmp_ln15_reg_373, icmp_ln15_fu_100_p2, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((icmp_ln15_fu_100_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln15_reg_373 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln15_reg_373 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln15_reg_373 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            conv_to_pool_streams_4_read <= ap_const_logic_1;
        else 
            conv_to_pool_streams_4_read <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_67_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_67_ce <= ap_const_logic_1;
        else 
            grp_fu_67_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_67_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_41_fu_121_p1, tmp_42_fu_168_p1, tmp_43_fu_240_p1, tmp_44_fu_301_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_67_p0 <= tmp_44_fu_301_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_67_p0 <= tmp_43_fu_240_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_67_p0 <= tmp_42_fu_168_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_67_p0 <= tmp_41_fu_121_p1;
        else 
            grp_fu_67_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_67_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage3, pool_22_reg_408, pool_24_reg_451, pool_26_reg_464)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_67_p1 <= pool_26_reg_464;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_67_p1 <= pool_24_reg_451;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_67_p1 <= pool_22_reg_408;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_67_p1 <= ap_const_lv32_800000;
        else 
            grp_fu_67_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_72_p4 <= conv_to_pool_streams_4_dout(30 downto 23);
    grp_fu_82_p2 <= "0" when (grp_fu_72_p4 = ap_const_lv8_FF) else "1";
    icmp_ln15_fu_100_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv8_C4) else "0";
    icmp_ln28_40_fu_126_p2 <= "1" when (trunc_ln28_reg_377 = ap_const_lv23_0) else "0";
    icmp_ln28_42_fu_135_p2 <= "1" when (trunc_ln28_19_fu_131_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_43_fu_204_p2 <= "0" when (tmp_20_fu_186_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_44_fu_210_p2 <= "1" when (trunc_ln28_20_fu_196_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_46_fu_162_p2 <= "1" when (trunc_ln28_21_fu_158_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_47_fu_265_p2 <= "0" when (tmp_23_fu_247_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_48_fu_271_p2 <= "1" when (trunc_ln28_22_fu_257_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_50_fu_177_p2 <= "1" when (trunc_ln28_23_fu_173_p1 = ap_const_lv23_0) else "0";
    icmp_ln28_51_fu_326_p2 <= "0" when (tmp_26_fu_308_p4 = ap_const_lv8_FF) else "1";
    icmp_ln28_52_fu_332_p2 <= "1" when (trunc_ln28_24_fu_318_p1 = ap_const_lv23_0) else "0";
    or_ln28_19_fu_200_p2 <= (icmp_ln28_42_reg_403 or icmp_ln28_41_reg_398);
    or_ln28_20_fu_216_p2 <= (icmp_ln28_44_fu_210_p2 or icmp_ln28_43_fu_204_p2);
    or_ln28_21_fu_261_p2 <= (icmp_ln28_46_reg_425_pp0_iter1_reg or icmp_ln28_45_reg_420_pp0_iter1_reg);
    or_ln28_22_fu_277_p2 <= (icmp_ln28_48_fu_271_p2 or icmp_ln28_47_fu_265_p2);
    or_ln28_23_fu_322_p2 <= (icmp_ln28_50_reg_446_pp0_iter1_reg or icmp_ln28_49_reg_441_pp0_iter1_reg);
    or_ln28_24_fu_338_p2 <= (icmp_ln28_52_fu_332_p2 or icmp_ln28_51_fu_326_p2);
    or_ln28_fu_141_p2 <= (icmp_ln28_reg_382 or icmp_ln28_40_reg_393);
    pool_22_fu_151_p3 <= 
        tmp_41_reg_387 when (and_ln28_fu_145_p2(0) = '1') else 
        ap_const_lv32_800000;
    pool_24_fu_234_p3 <= 
        tmp_42_reg_430 when (and_ln28_20_fu_228_p2(0) = '1') else 
        pool_22_reg_408;
    pool_26_fu_295_p3 <= 
        tmp_43_reg_458 when (and_ln28_22_fu_289_p2(0) = '1') else 
        pool_24_reg_451;
    pool_28_fu_356_p3 <= 
        tmp_44_reg_471 when (and_ln28_24_fu_350_p2(0) = '1') else 
        pool_26_reg_464;

    pool_to_flat_streams_4_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, pool_to_flat_streams_4_full_n, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            pool_to_flat_streams_4_blk_n <= pool_to_flat_streams_4_full_n;
        else 
            pool_to_flat_streams_4_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pool_to_flat_streams_4_din <= pool_28_reg_477;

    pool_to_flat_streams_4_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            pool_to_flat_streams_4_write <= ap_const_logic_1;
        else 
            pool_to_flat_streams_4_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_20_fu_186_p4 <= bitcast_ln28_fu_183_p1(30 downto 23);
    tmp_23_fu_247_p4 <= bitcast_ln28_7_fu_244_p1(30 downto 23);
    tmp_26_fu_308_p4 <= bitcast_ln28_8_fu_305_p1(30 downto 23);
    tmp_41_fu_121_p1 <= reg_88;
    tmp_42_fu_168_p1 <= reg_88;
    tmp_43_fu_240_p1 <= conv_to_pool_streams_4_read_2_reg_415;
    tmp_44_fu_301_p1 <= conv_to_pool_streams_4_read_3_reg_436_pp0_iter1_reg;
    trunc_ln28_19_fu_131_p1 <= conv_to_pool_streams_4_dout(23 - 1 downto 0);
    trunc_ln28_20_fu_196_p1 <= bitcast_ln28_fu_183_p1(23 - 1 downto 0);
    trunc_ln28_21_fu_158_p1 <= conv_to_pool_streams_4_dout(23 - 1 downto 0);
    trunc_ln28_22_fu_257_p1 <= bitcast_ln28_7_fu_244_p1(23 - 1 downto 0);
    trunc_ln28_23_fu_173_p1 <= conv_to_pool_streams_4_dout(23 - 1 downto 0);
    trunc_ln28_24_fu_318_p1 <= bitcast_ln28_8_fu_305_p1(23 - 1 downto 0);
    trunc_ln28_fu_112_p1 <= conv_to_pool_streams_4_dout(23 - 1 downto 0);
end behav;
