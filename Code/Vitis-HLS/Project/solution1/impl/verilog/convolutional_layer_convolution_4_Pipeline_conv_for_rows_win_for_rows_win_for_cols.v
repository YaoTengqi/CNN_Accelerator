// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module convolutional_layer_convolution_4_Pipeline_conv_for_rows_win_for_rows_win_for_cols (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        pad_img4_address0,
        pad_img4_ce0,
        pad_img4_q0,
        pad_img4_address1,
        pad_img4_ce1,
        pad_img4_q1,
        w,
        w_25,
        w_26,
        w_27,
        w_28,
        w_29,
        w_30,
        w_31,
        w_32,
        biases_buf,
        conv_to_pool_streams_4_din,
        conv_to_pool_streams_4_full_n,
        conv_to_pool_streams_4_write
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] pad_img4_address0;
output   pad_img4_ce0;
input  [31:0] pad_img4_q0;
output  [9:0] pad_img4_address1;
output   pad_img4_ce1;
input  [31:0] pad_img4_q1;
input  [31:0] w;
input  [31:0] w_25;
input  [31:0] w_26;
input  [31:0] w_27;
input  [31:0] w_28;
input  [31:0] w_29;
input  [31:0] w_30;
input  [31:0] w_31;
input  [31:0] w_32;
input  [31:0] biases_buf;
output  [31:0] conv_to_pool_streams_4_din;
input   conv_to_pool_streams_4_full_n;
output   conv_to_pool_streams_4_write;

reg ap_idle;
reg[9:0] pad_img4_address0;
reg pad_img4_ce0;
reg[9:0] pad_img4_address1;
reg pad_img4_ce1;
reg conv_to_pool_streams_4_write;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state10_pp0_stage4_iter1;
wire    ap_block_state15_pp0_stage4_iter2;
wire    ap_block_state20_pp0_stage4_iter3;
wire    ap_block_state25_pp0_stage4_iter4;
wire    ap_block_state30_pp0_stage4_iter5;
wire    ap_block_state35_pp0_stage4_iter6;
wire    ap_block_state40_pp0_stage4_iter7;
wire    ap_block_state45_pp0_stage4_iter8;
wire    ap_block_state50_pp0_stage4_iter9;
wire    ap_block_state55_pp0_stage4_iter10;
wire    ap_block_state60_pp0_stage4_iter11;
wire    ap_block_state65_pp0_stage4_iter12;
wire    ap_block_state70_pp0_stage4_iter13;
wire    ap_block_state75_pp0_stage4_iter14;
wire    ap_block_state80_pp0_stage4_iter15;
wire    ap_block_pp0_stage4_subdone;
reg   [0:0] icmp_ln37_reg_1111;
reg    ap_condition_exit_pp0_iter0_stage4;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    conv_to_pool_streams_4_blk_n;
wire    ap_block_pp0_stage0;
reg   [31:0] reg_314;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_state14_pp0_stage3_iter2;
wire    ap_block_state19_pp0_stage3_iter3;
wire    ap_block_state24_pp0_stage3_iter4;
wire    ap_block_state29_pp0_stage3_iter5;
wire    ap_block_state34_pp0_stage3_iter6;
wire    ap_block_state39_pp0_stage3_iter7;
wire    ap_block_state44_pp0_stage3_iter8;
wire    ap_block_state49_pp0_stage3_iter9;
wire    ap_block_state54_pp0_stage3_iter10;
wire    ap_block_state59_pp0_stage3_iter11;
wire    ap_block_state64_pp0_stage3_iter12;
wire    ap_block_state69_pp0_stage3_iter13;
wire    ap_block_state74_pp0_stage3_iter14;
wire    ap_block_state79_pp0_stage3_iter15;
wire    ap_block_pp0_stage3_11001;
wire    ap_block_pp0_stage4_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
wire    ap_block_state16_pp0_stage0_iter3;
wire    ap_block_state21_pp0_stage0_iter4;
wire    ap_block_state26_pp0_stage0_iter5;
wire    ap_block_state31_pp0_stage0_iter6;
wire    ap_block_state36_pp0_stage0_iter7;
wire    ap_block_state41_pp0_stage0_iter8;
wire    ap_block_state46_pp0_stage0_iter9;
wire    ap_block_state51_pp0_stage0_iter10;
wire    ap_block_state56_pp0_stage0_iter11;
wire    ap_block_state61_pp0_stage0_iter12;
wire    ap_block_state66_pp0_stage0_iter13;
wire    ap_block_state71_pp0_stage0_iter14;
wire    ap_block_state76_pp0_stage0_iter15;
reg    ap_block_state81_pp0_stage0_iter16;
reg    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state12_pp0_stage1_iter2;
wire    ap_block_state17_pp0_stage1_iter3;
wire    ap_block_state22_pp0_stage1_iter4;
wire    ap_block_state27_pp0_stage1_iter5;
wire    ap_block_state32_pp0_stage1_iter6;
wire    ap_block_state37_pp0_stage1_iter7;
wire    ap_block_state42_pp0_stage1_iter8;
wire    ap_block_state47_pp0_stage1_iter9;
wire    ap_block_state52_pp0_stage1_iter10;
wire    ap_block_state57_pp0_stage1_iter11;
wire    ap_block_state62_pp0_stage1_iter12;
wire    ap_block_state67_pp0_stage1_iter13;
wire    ap_block_state72_pp0_stage1_iter14;
wire    ap_block_state77_pp0_stage1_iter15;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state13_pp0_stage2_iter2;
wire    ap_block_state18_pp0_stage2_iter3;
wire    ap_block_state23_pp0_stage2_iter4;
wire    ap_block_state28_pp0_stage2_iter5;
wire    ap_block_state33_pp0_stage2_iter6;
wire    ap_block_state38_pp0_stage2_iter7;
wire    ap_block_state43_pp0_stage2_iter8;
wire    ap_block_state48_pp0_stage2_iter9;
wire    ap_block_state53_pp0_stage2_iter10;
wire    ap_block_state58_pp0_stage2_iter11;
wire    ap_block_state63_pp0_stage2_iter12;
wire    ap_block_state68_pp0_stage2_iter13;
wire    ap_block_state73_pp0_stage2_iter14;
wire    ap_block_state78_pp0_stage2_iter15;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] reg_319;
reg   [1:0] wr_5_reg_1098;
reg   [4:0] r_5_reg_1103;
wire   [0:0] icmp_ln37_fu_368_p2;
reg   [0:0] icmp_ln37_reg_1111_pp0_iter1_reg;
reg   [0:0] icmp_ln37_reg_1111_pp0_iter2_reg;
reg   [0:0] icmp_ln37_reg_1111_pp0_iter3_reg;
reg   [0:0] icmp_ln37_reg_1111_pp0_iter4_reg;
reg   [0:0] icmp_ln37_reg_1111_pp0_iter5_reg;
reg   [0:0] icmp_ln37_reg_1111_pp0_iter6_reg;
reg   [0:0] icmp_ln37_reg_1111_pp0_iter7_reg;
reg   [0:0] icmp_ln37_reg_1111_pp0_iter8_reg;
reg   [0:0] icmp_ln37_reg_1111_pp0_iter9_reg;
reg   [0:0] icmp_ln37_reg_1111_pp0_iter10_reg;
reg   [0:0] icmp_ln37_reg_1111_pp0_iter11_reg;
reg   [0:0] icmp_ln37_reg_1111_pp0_iter12_reg;
reg   [0:0] icmp_ln37_reg_1111_pp0_iter13_reg;
reg   [0:0] icmp_ln37_reg_1111_pp0_iter14_reg;
wire   [4:0] add_ln37_fu_386_p2;
reg   [4:0] add_ln37_reg_1115;
wire   [0:0] icmp_ln40_fu_392_p2;
reg   [0:0] icmp_ln40_reg_1121;
wire   [0:0] xor_ln37_fu_398_p2;
reg   [0:0] xor_ln37_reg_1132;
wire   [0:0] icmp_ln43_fu_404_p2;
reg   [0:0] icmp_ln43_reg_1137;
wire   [0:0] and_ln37_4_fu_410_p2;
reg   [0:0] and_ln37_4_reg_1142;
wire   [1:0] select_ln40_fu_422_p3;
reg   [1:0] select_ln40_reg_1151;
wire   [9:0] sub_ln60_fu_675_p2;
reg   [9:0] sub_ln60_reg_1157;
wire   [4:0] select_ln43_17_fu_687_p3;
reg   [4:0] select_ln43_17_reg_1164;
wire   [4:0] select_ln43_18_fu_701_p3;
reg   [4:0] select_ln43_18_reg_1170;
wire   [4:0] empty_30_fu_720_p2;
reg   [4:0] empty_30_reg_1176;
wire   [9:0] sub_ln60_7_fu_770_p2;
reg   [9:0] sub_ln60_7_reg_1183;
wire   [9:0] zext_ln60_59_fu_776_p1;
reg   [9:0] zext_ln60_59_reg_1190;
wire   [9:0] zext_ln60_63_fu_794_p1;
reg   [9:0] zext_ln60_63_reg_1201;
wire   [9:0] zext_ln60_67_fu_822_p1;
reg   [9:0] zext_ln60_67_reg_1217;
wire   [9:0] add_ln60_31_fu_860_p2;
reg   [9:0] add_ln60_31_reg_1228;
wire   [31:0] pixel_fu_865_p1;
wire   [9:0] add_ln60_34_fu_879_p2;
reg   [9:0] add_ln60_34_reg_1243;
wire   [31:0] pixel_33_fu_884_p1;
wire   [9:0] add_ln60_37_fu_898_p2;
reg   [9:0] add_ln60_37_reg_1258;
wire   [31:0] pixel_34_fu_911_p1;
wire   [31:0] pixel_35_fu_916_p1;
wire   [31:0] pixel_36_fu_925_p1;
wire   [31:0] pixel_37_fu_930_p1;
wire   [31:0] grp_fu_301_p2;
reg   [31:0] mul_reg_1298;
wire   [31:0] grp_fu_305_p2;
reg   [31:0] mul_s_reg_1303;
reg   [31:0] mul_s_reg_1303_pp0_iter2_reg;
wire   [31:0] pixel_38_fu_935_p1;
wire   [31:0] pixel_39_fu_940_p1;
reg   [31:0] mul_6_reg_1318;
reg   [31:0] mul_6_reg_1318_pp0_iter2_reg;
reg   [31:0] mul_6_reg_1318_pp0_iter3_reg;
reg   [31:0] mul_1_reg_1323;
reg   [31:0] mul_1_reg_1323_pp0_iter2_reg;
reg   [31:0] mul_1_reg_1323_pp0_iter3_reg;
reg   [31:0] mul_1_reg_1323_pp0_iter4_reg;
reg   [31:0] mul_1_reg_1323_pp0_iter5_reg;
wire   [31:0] pixel_40_fu_945_p1;
reg   [31:0] mul_1_1_reg_1333;
reg   [31:0] mul_1_1_reg_1333_pp0_iter2_reg;
reg   [31:0] mul_1_1_reg_1333_pp0_iter3_reg;
reg   [31:0] mul_1_1_reg_1333_pp0_iter4_reg;
reg   [31:0] mul_1_1_reg_1333_pp0_iter5_reg;
reg   [31:0] mul_1_1_reg_1333_pp0_iter6_reg;
reg   [31:0] mul_1_2_reg_1338;
reg   [31:0] mul_1_2_reg_1338_pp0_iter2_reg;
reg   [31:0] mul_1_2_reg_1338_pp0_iter3_reg;
reg   [31:0] mul_1_2_reg_1338_pp0_iter4_reg;
reg   [31:0] mul_1_2_reg_1338_pp0_iter5_reg;
reg   [31:0] mul_1_2_reg_1338_pp0_iter6_reg;
reg   [31:0] mul_1_2_reg_1338_pp0_iter7_reg;
reg   [31:0] mul_2_reg_1343;
reg   [31:0] mul_2_reg_1343_pp0_iter3_reg;
reg   [31:0] mul_2_reg_1343_pp0_iter4_reg;
reg   [31:0] mul_2_reg_1343_pp0_iter5_reg;
reg   [31:0] mul_2_reg_1343_pp0_iter6_reg;
reg   [31:0] mul_2_reg_1343_pp0_iter7_reg;
reg   [31:0] mul_2_reg_1343_pp0_iter8_reg;
reg   [31:0] mul_2_reg_1343_pp0_iter9_reg;
reg   [31:0] mul_2_1_reg_1348;
reg   [31:0] mul_2_1_reg_1348_pp0_iter3_reg;
reg   [31:0] mul_2_1_reg_1348_pp0_iter4_reg;
reg   [31:0] mul_2_1_reg_1348_pp0_iter5_reg;
reg   [31:0] mul_2_1_reg_1348_pp0_iter6_reg;
reg   [31:0] mul_2_1_reg_1348_pp0_iter7_reg;
reg   [31:0] mul_2_1_reg_1348_pp0_iter8_reg;
reg   [31:0] mul_2_1_reg_1348_pp0_iter9_reg;
reg   [31:0] mul_2_1_reg_1348_pp0_iter10_reg;
reg   [31:0] mul_2_1_reg_1348_pp0_iter11_reg;
reg   [31:0] mul_2_2_reg_1353;
reg   [31:0] mul_2_2_reg_1353_pp0_iter3_reg;
reg   [31:0] mul_2_2_reg_1353_pp0_iter4_reg;
reg   [31:0] mul_2_2_reg_1353_pp0_iter5_reg;
reg   [31:0] mul_2_2_reg_1353_pp0_iter6_reg;
reg   [31:0] mul_2_2_reg_1353_pp0_iter7_reg;
reg   [31:0] mul_2_2_reg_1353_pp0_iter8_reg;
reg   [31:0] mul_2_2_reg_1353_pp0_iter9_reg;
reg   [31:0] mul_2_2_reg_1353_pp0_iter10_reg;
reg   [31:0] mul_2_2_reg_1353_pp0_iter11_reg;
reg   [31:0] mul_2_2_reg_1353_pp0_iter12_reg;
wire   [31:0] grp_fu_292_p2;
reg   [31:0] w_sum_reg_1358;
reg   [31:0] w_sum_25_reg_1363;
reg   [31:0] w_sum_26_reg_1368;
reg   [31:0] w_sum_27_reg_1373;
reg   [31:0] w_sum_28_reg_1378;
wire   [31:0] grp_fu_297_p2;
reg   [31:0] w_sum_29_reg_1383;
reg   [31:0] w_sum_30_reg_1388;
reg   [31:0] w_sum_31_reg_1393;
reg   [31:0] w_sum_32_reg_1398;
reg   [31:0] x_assign_reg_1403;
wire   [31:0] select_ln173_fu_991_p3;
reg   [31:0] select_ln173_reg_1409;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln60_60_fu_784_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln60_64_fu_803_p1;
wire   [63:0] zext_ln60_61_fu_812_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln60_68_fu_831_p1;
wire   [63:0] zext_ln60_65_fu_874_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln60_69_fu_893_p1;
wire   [63:0] zext_ln60_62_fu_903_p1;
wire   [63:0] zext_ln60_66_fu_907_p1;
wire   [63:0] zext_ln60_70_fu_921_p1;
wire    ap_block_pp0_stage1;
reg   [1:0] wc_fu_116;
wire   [1:0] add_ln45_fu_726_p2;
wire    ap_loop_init;
reg   [1:0] wr_fu_120;
wire   [1:0] select_ln43_19_fu_709_p3;
reg   [1:0] ap_sig_allocacmp_wr_5;
reg   [3:0] indvar_flatten_fu_124;
wire   [3:0] select_ln43_20_fu_436_p3;
reg   [3:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [4:0] c_fu_128;
wire   [4:0] select_ln40_19_fu_607_p3;
reg   [6:0] indvar_flatten31_fu_132;
wire   [6:0] select_ln40_20_fu_450_p3;
reg   [6:0] ap_sig_allocacmp_indvar_flatten31_load;
reg   [4:0] r_fu_136;
wire   [4:0] select_ln37_17_fu_547_p3;
reg   [4:0] ap_sig_allocacmp_r_5;
reg   [9:0] indvar_flatten65_fu_140;
wire   [9:0] add_ln37_4_fu_374_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten65_load;
reg    ap_block_pp0_stage0_01001;
reg   [31:0] grp_fu_292_p0;
reg   [31:0] grp_fu_292_p1;
reg   [31:0] grp_fu_297_p0;
reg   [31:0] grp_fu_297_p1;
reg   [31:0] grp_fu_301_p0;
reg   [31:0] grp_fu_301_p1;
reg   [31:0] grp_fu_305_p0;
reg   [31:0] grp_fu_305_p1;
wire   [0:0] or_ln40_fu_416_p2;
wire   [3:0] add_ln43_4_fu_430_p2;
wire   [6:0] add_ln40_4_fu_444_p2;
wire   [4:0] zext_ln43_fu_473_p1;
wire   [4:0] empty_fu_476_p2;
wire   [4:0] p_mid151_fu_512_p2;
wire   [4:0] empty_27_fu_481_p2;
wire   [4:0] p_mid155_fu_524_p2;
wire   [4:0] empty_28_fu_487_p2;
wire   [0:0] icmp_ln45_fu_536_p2;
wire   [4:0] select_ln37_fu_499_p3;
wire   [4:0] select_ln37_14_fu_506_p3;
wire   [4:0] p_mid121_fu_565_p2;
wire   [4:0] select_ln37_15_fu_517_p3;
wire   [4:0] p_mid125_fu_578_p2;
wire   [4:0] select_ln37_16_fu_529_p3;
wire   [0:0] xor_ln40_fu_591_p2;
wire   [0:0] and_ln37_fu_542_p2;
wire   [0:0] or_ln40_4_fu_596_p2;
wire   [4:0] add_ln40_fu_552_p2;
wire   [0:0] and_ln40_fu_601_p2;
wire   [0:0] or_ln43_fu_619_p2;
wire   [0:0] or_ln43_5_fu_624_p2;
wire   [1:0] add_ln43_fu_614_p2;
wire   [4:0] zext_ln43_4_fu_637_p1;
wire   [4:0] p_mid1_fu_641_p2;
wire   [4:0] select_ln40_16_fu_558_p3;
wire   [4:0] select_ln43_16_fu_647_p3;
wire   [5:0] tmp_16_fu_663_p3;
wire   [9:0] tmp_s_fu_655_p3;
wire   [9:0] zext_ln60_fu_671_p1;
wire   [4:0] p_mid14_fu_681_p2;
wire   [4:0] select_ln40_17_fu_571_p3;
wire   [4:0] p_mid16_fu_695_p2;
wire   [4:0] select_ln40_18_fu_584_p3;
wire   [1:0] select_ln43_fu_629_p3;
wire   [4:0] zext_ln45_fu_716_p1;
wire   [5:0] tmp_18_fu_759_p3;
wire   [9:0] tmp_17_fu_752_p3;
wire   [9:0] zext_ln60_57_fu_766_p1;
wire   [9:0] add_ln60_29_fu_779_p2;
wire   [4:0] add_ln60_fu_789_p2;
wire   [9:0] add_ln60_32_fu_798_p2;
wire   [9:0] add_ln60_30_fu_808_p2;
wire   [4:0] add_ln60_4_fu_817_p2;
wire   [9:0] add_ln60_35_fu_826_p2;
wire   [5:0] tmp_20_fu_843_p3;
wire   [9:0] tmp_19_fu_836_p3;
wire   [9:0] zext_ln60_58_fu_850_p1;
wire   [9:0] sub_ln60_8_fu_854_p2;
wire   [9:0] add_ln60_33_fu_870_p2;
wire   [9:0] add_ln60_36_fu_889_p2;
wire   [31:0] bitcast_ln7_fu_950_p1;
wire   [7:0] tmp_fu_953_p4;
wire   [22:0] trunc_ln7_fu_963_p1;
wire   [0:0] icmp_ln7_4_fu_973_p2;
wire   [0:0] icmp_ln7_fu_967_p2;
wire   [0:0] or_ln7_fu_979_p2;
wire   [0:0] grp_fu_309_p2;
wire   [0:0] and_ln7_fu_985_p2;
reg    grp_fu_292_ce;
reg    grp_fu_297_ce;
reg    grp_fu_301_ce;
reg    grp_fu_305_ce;
reg    grp_fu_309_ce;
wire    ap_block_pp0_stage3_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter15_stage0;
reg    ap_idle_pp0_0to14;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0_1to16;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

convolutional_layer_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_292_p0),
    .din1(grp_fu_292_p1),
    .ce(grp_fu_292_ce),
    .dout(grp_fu_292_p2)
);

convolutional_layer_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U89(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_297_p0),
    .din1(grp_fu_297_p1),
    .ce(grp_fu_297_ce),
    .dout(grp_fu_297_p2)
);

convolutional_layer_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U90(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_301_p0),
    .din1(grp_fu_301_p1),
    .ce(grp_fu_301_ce),
    .dout(grp_fu_301_p2)
);

convolutional_layer_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U91(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_305_p0),
    .din1(grp_fu_305_p1),
    .ce(grp_fu_305_ce),
    .dout(grp_fu_305_p2)
);

convolutional_layer_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U92(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x_assign_reg_1403),
    .din1(32'd0),
    .ce(grp_fu_309_ce),
    .opcode(5'd2),
    .dout(grp_fu_309_p2)
);

convolutional_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage4),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage4)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter16 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_fu_128 <= 5'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln37_reg_1111 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        c_fu_128 <= select_ln40_19_fu_607_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln37_fu_368_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten31_fu_132 <= select_ln40_20_fu_450_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten31_fu_132 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln37_fu_368_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten65_fu_140 <= add_ln37_4_fu_374_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten65_fu_140 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln37_fu_368_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_124 <= select_ln43_20_fu_436_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_124 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_fu_136 <= 5'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln37_reg_1111 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        r_fu_136 <= select_ln37_17_fu_547_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        reg_314 <= pad_img4_q1;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln37_reg_1111 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln37_reg_1111 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        reg_314 <= pad_img4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        reg_319 <= pad_img4_q0;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln37_reg_1111 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln37_reg_1111 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        reg_319 <= pad_img4_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        wc_fu_116 <= 2'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln37_reg_1111 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        wc_fu_116 <= add_ln45_fu_726_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        wr_fu_120 <= 2'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln37_reg_1111 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        wr_fu_120 <= select_ln43_19_fu_709_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln37_reg_1115 <= add_ln37_fu_386_p2;
        and_ln37_4_reg_1142 <= and_ln37_4_fu_410_p2;
        icmp_ln40_reg_1121 <= icmp_ln40_fu_392_p2;
        icmp_ln43_reg_1137 <= icmp_ln43_fu_404_p2;
        select_ln40_reg_1151 <= select_ln40_fu_422_p3;
        xor_ln37_reg_1132 <= xor_ln37_fu_398_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln37_reg_1111 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add_ln60_31_reg_1228 <= add_ln60_31_fu_860_p2;
        add_ln60_34_reg_1243 <= add_ln60_34_fu_879_p2;
        add_ln60_37_reg_1258 <= add_ln60_37_fu_898_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln37_reg_1111 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        empty_30_reg_1176 <= empty_30_fu_720_p2;
        select_ln43_17_reg_1164 <= select_ln43_17_fu_687_p3;
        select_ln43_18_reg_1170 <= select_ln43_18_fu_701_p3;
        sub_ln60_reg_1157[9 : 1] <= sub_ln60_fu_675_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln37_reg_1111 <= icmp_ln37_fu_368_p2;
        icmp_ln37_reg_1111_pp0_iter10_reg <= icmp_ln37_reg_1111_pp0_iter9_reg;
        icmp_ln37_reg_1111_pp0_iter11_reg <= icmp_ln37_reg_1111_pp0_iter10_reg;
        icmp_ln37_reg_1111_pp0_iter12_reg <= icmp_ln37_reg_1111_pp0_iter11_reg;
        icmp_ln37_reg_1111_pp0_iter13_reg <= icmp_ln37_reg_1111_pp0_iter12_reg;
        icmp_ln37_reg_1111_pp0_iter14_reg <= icmp_ln37_reg_1111_pp0_iter13_reg;
        icmp_ln37_reg_1111_pp0_iter1_reg <= icmp_ln37_reg_1111;
        icmp_ln37_reg_1111_pp0_iter2_reg <= icmp_ln37_reg_1111_pp0_iter1_reg;
        icmp_ln37_reg_1111_pp0_iter3_reg <= icmp_ln37_reg_1111_pp0_iter2_reg;
        icmp_ln37_reg_1111_pp0_iter4_reg <= icmp_ln37_reg_1111_pp0_iter3_reg;
        icmp_ln37_reg_1111_pp0_iter5_reg <= icmp_ln37_reg_1111_pp0_iter4_reg;
        icmp_ln37_reg_1111_pp0_iter6_reg <= icmp_ln37_reg_1111_pp0_iter5_reg;
        icmp_ln37_reg_1111_pp0_iter7_reg <= icmp_ln37_reg_1111_pp0_iter6_reg;
        icmp_ln37_reg_1111_pp0_iter8_reg <= icmp_ln37_reg_1111_pp0_iter7_reg;
        icmp_ln37_reg_1111_pp0_iter9_reg <= icmp_ln37_reg_1111_pp0_iter8_reg;
        mul_2_1_reg_1348_pp0_iter10_reg <= mul_2_1_reg_1348_pp0_iter9_reg;
        mul_2_1_reg_1348_pp0_iter11_reg <= mul_2_1_reg_1348_pp0_iter10_reg;
        mul_2_1_reg_1348_pp0_iter3_reg <= mul_2_1_reg_1348;
        mul_2_1_reg_1348_pp0_iter4_reg <= mul_2_1_reg_1348_pp0_iter3_reg;
        mul_2_1_reg_1348_pp0_iter5_reg <= mul_2_1_reg_1348_pp0_iter4_reg;
        mul_2_1_reg_1348_pp0_iter6_reg <= mul_2_1_reg_1348_pp0_iter5_reg;
        mul_2_1_reg_1348_pp0_iter7_reg <= mul_2_1_reg_1348_pp0_iter6_reg;
        mul_2_1_reg_1348_pp0_iter8_reg <= mul_2_1_reg_1348_pp0_iter7_reg;
        mul_2_1_reg_1348_pp0_iter9_reg <= mul_2_1_reg_1348_pp0_iter8_reg;
        mul_2_reg_1343_pp0_iter3_reg <= mul_2_reg_1343;
        mul_2_reg_1343_pp0_iter4_reg <= mul_2_reg_1343_pp0_iter3_reg;
        mul_2_reg_1343_pp0_iter5_reg <= mul_2_reg_1343_pp0_iter4_reg;
        mul_2_reg_1343_pp0_iter6_reg <= mul_2_reg_1343_pp0_iter5_reg;
        mul_2_reg_1343_pp0_iter7_reg <= mul_2_reg_1343_pp0_iter6_reg;
        mul_2_reg_1343_pp0_iter8_reg <= mul_2_reg_1343_pp0_iter7_reg;
        mul_2_reg_1343_pp0_iter9_reg <= mul_2_reg_1343_pp0_iter8_reg;
        r_5_reg_1103 <= ap_sig_allocacmp_r_5;
        wr_5_reg_1098 <= ap_sig_allocacmp_wr_5;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        mul_1_1_reg_1333 <= grp_fu_301_p2;
        mul_1_2_reg_1338 <= grp_fu_305_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        mul_1_1_reg_1333_pp0_iter2_reg <= mul_1_1_reg_1333;
        mul_1_1_reg_1333_pp0_iter3_reg <= mul_1_1_reg_1333_pp0_iter2_reg;
        mul_1_1_reg_1333_pp0_iter4_reg <= mul_1_1_reg_1333_pp0_iter3_reg;
        mul_1_1_reg_1333_pp0_iter5_reg <= mul_1_1_reg_1333_pp0_iter4_reg;
        mul_1_1_reg_1333_pp0_iter6_reg <= mul_1_1_reg_1333_pp0_iter5_reg;
        mul_1_2_reg_1338_pp0_iter2_reg <= mul_1_2_reg_1338;
        mul_1_2_reg_1338_pp0_iter3_reg <= mul_1_2_reg_1338_pp0_iter2_reg;
        mul_1_2_reg_1338_pp0_iter4_reg <= mul_1_2_reg_1338_pp0_iter3_reg;
        mul_1_2_reg_1338_pp0_iter5_reg <= mul_1_2_reg_1338_pp0_iter4_reg;
        mul_1_2_reg_1338_pp0_iter6_reg <= mul_1_2_reg_1338_pp0_iter5_reg;
        mul_1_2_reg_1338_pp0_iter7_reg <= mul_1_2_reg_1338_pp0_iter6_reg;
        select_ln173_reg_1409 <= select_ln173_fu_991_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        mul_1_reg_1323 <= grp_fu_305_p2;
        mul_6_reg_1318 <= grp_fu_301_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        mul_1_reg_1323_pp0_iter2_reg <= mul_1_reg_1323;
        mul_1_reg_1323_pp0_iter3_reg <= mul_1_reg_1323_pp0_iter2_reg;
        mul_1_reg_1323_pp0_iter4_reg <= mul_1_reg_1323_pp0_iter3_reg;
        mul_1_reg_1323_pp0_iter5_reg <= mul_1_reg_1323_pp0_iter4_reg;
        mul_6_reg_1318_pp0_iter2_reg <= mul_6_reg_1318;
        mul_6_reg_1318_pp0_iter3_reg <= mul_6_reg_1318_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_2_1_reg_1348 <= grp_fu_305_p2;
        mul_2_reg_1343 <= grp_fu_301_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul_2_2_reg_1353 <= grp_fu_301_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul_2_2_reg_1353_pp0_iter10_reg <= mul_2_2_reg_1353_pp0_iter9_reg;
        mul_2_2_reg_1353_pp0_iter11_reg <= mul_2_2_reg_1353_pp0_iter10_reg;
        mul_2_2_reg_1353_pp0_iter12_reg <= mul_2_2_reg_1353_pp0_iter11_reg;
        mul_2_2_reg_1353_pp0_iter3_reg <= mul_2_2_reg_1353;
        mul_2_2_reg_1353_pp0_iter4_reg <= mul_2_2_reg_1353_pp0_iter3_reg;
        mul_2_2_reg_1353_pp0_iter5_reg <= mul_2_2_reg_1353_pp0_iter4_reg;
        mul_2_2_reg_1353_pp0_iter6_reg <= mul_2_2_reg_1353_pp0_iter5_reg;
        mul_2_2_reg_1353_pp0_iter7_reg <= mul_2_2_reg_1353_pp0_iter6_reg;
        mul_2_2_reg_1353_pp0_iter8_reg <= mul_2_2_reg_1353_pp0_iter7_reg;
        mul_2_2_reg_1353_pp0_iter9_reg <= mul_2_2_reg_1353_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul_reg_1298 <= grp_fu_301_p2;
        mul_s_reg_1303 <= grp_fu_305_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul_s_reg_1303_pp0_iter2_reg <= mul_s_reg_1303;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln37_reg_1111 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        sub_ln60_7_reg_1183[9 : 1] <= sub_ln60_7_fu_770_p2[9 : 1];
        zext_ln60_59_reg_1190[4 : 0] <= zext_ln60_59_fu_776_p1[4 : 0];
        zext_ln60_63_reg_1201[4 : 0] <= zext_ln60_63_fu_794_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        w_sum_25_reg_1363 <= grp_fu_292_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        w_sum_26_reg_1368 <= grp_fu_292_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        w_sum_27_reg_1373 <= grp_fu_292_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        w_sum_28_reg_1378 <= grp_fu_292_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        w_sum_29_reg_1383 <= grp_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        w_sum_30_reg_1388 <= grp_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        w_sum_31_reg_1393 <= grp_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        w_sum_32_reg_1398 <= grp_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        w_sum_reg_1358 <= grp_fu_292_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        x_assign_reg_1403 <= grp_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln37_reg_1111 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        zext_ln60_67_reg_1217[4 : 0] <= zext_ln60_67_fu_822_p1[4 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln37_reg_1111 == 1'd1) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (icmp_ln37_reg_1111_pp0_iter14_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter15_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter15_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to14 = 1'b1;
    end else begin
        ap_idle_pp0_0to14 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to16 = 1'b1;
    end else begin
        ap_idle_pp0_1to16 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten31_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten31_load = indvar_flatten31_fu_132;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten65_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten65_load = indvar_flatten65_fu_140;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 4'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_124;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_r_5 = 5'd0;
    end else begin
        ap_sig_allocacmp_r_5 = r_fu_136;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_wr_5 = 2'd0;
    end else begin
        ap_sig_allocacmp_wr_5 = wr_fu_120;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        conv_to_pool_streams_4_blk_n = conv_to_pool_streams_4_full_n;
    end else begin
        conv_to_pool_streams_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_to_pool_streams_4_write = 1'b1;
    end else begin
        conv_to_pool_streams_4_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        grp_fu_292_ce = 1'b1;
    end else begin
        grp_fu_292_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_292_p0 = w_sum_27_reg_1373;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_292_p0 = w_sum_26_reg_1368;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_292_p0 = w_sum_25_reg_1363;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_292_p0 = w_sum_reg_1358;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_292_p0 = mul_reg_1298;
    end else begin
        grp_fu_292_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_292_p1 = mul_1_1_reg_1333_pp0_iter6_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_292_p1 = mul_1_reg_1323_pp0_iter5_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_292_p1 = mul_6_reg_1318_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_292_p1 = mul_s_reg_1303_pp0_iter2_reg;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_292_p1 = 32'd0;
    end else begin
        grp_fu_292_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        grp_fu_297_ce = 1'b1;
    end else begin
        grp_fu_297_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_297_p0 = w_sum_32_reg_1398;
    end else if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_297_p0 = w_sum_31_reg_1393;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_297_p0 = w_sum_30_reg_1388;
    end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_297_p0 = w_sum_29_reg_1383;
    end else if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_297_p0 = w_sum_28_reg_1378;
    end else begin
        grp_fu_297_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_297_p1 = biases_buf;
    end else if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_297_p1 = mul_2_2_reg_1353_pp0_iter12_reg;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_297_p1 = mul_2_1_reg_1348_pp0_iter11_reg;
    end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_297_p1 = mul_2_reg_1343_pp0_iter9_reg;
    end else if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_297_p1 = mul_1_2_reg_1338_pp0_iter7_reg;
    end else begin
        grp_fu_297_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        grp_fu_301_ce = 1'b1;
    end else begin
        grp_fu_301_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_301_p0 = w_32;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_301_p0 = w_30;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_301_p0 = w_28;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_301_p0 = w_26;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_301_p0 = w;
    end else begin
        grp_fu_301_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_301_p1 = pixel_40_fu_945_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_301_p1 = pixel_38_fu_935_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_301_p1 = pixel_36_fu_925_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_301_p1 = pixel_34_fu_911_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_301_p1 = pixel_fu_865_p1;
    end else begin
        grp_fu_301_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        grp_fu_305_ce = 1'b1;
    end else begin
        grp_fu_305_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_305_p0 = w_31;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_305_p0 = w_29;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_305_p0 = w_27;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_305_p0 = w_25;
    end else begin
        grp_fu_305_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_305_p1 = pixel_39_fu_940_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_305_p1 = pixel_37_fu_930_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_305_p1 = pixel_35_fu_916_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_305_p1 = pixel_33_fu_884_p1;
    end else begin
        grp_fu_305_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        grp_fu_309_ce = 1'b1;
    end else begin
        grp_fu_309_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        pad_img4_address0 = zext_ln60_70_fu_921_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        pad_img4_address0 = zext_ln60_66_fu_907_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        pad_img4_address0 = zext_ln60_65_fu_874_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        pad_img4_address0 = zext_ln60_68_fu_831_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        pad_img4_address0 = zext_ln60_60_fu_784_p1;
    end else begin
        pad_img4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        pad_img4_address1 = zext_ln60_62_fu_903_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        pad_img4_address1 = zext_ln60_69_fu_893_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        pad_img4_address1 = zext_ln60_61_fu_812_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        pad_img4_address1 = zext_ln60_64_fu_803_p1;
    end else begin
        pad_img4_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        pad_img4_ce0 = 1'b1;
    end else begin
        pad_img4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        pad_img4_ce1 = 1'b1;
    end else begin
        pad_img4_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to16 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln37_4_fu_374_p2 = (ap_sig_allocacmp_indvar_flatten65_load + 10'd1);

assign add_ln37_fu_386_p2 = (ap_sig_allocacmp_r_5 + 5'd2);

assign add_ln40_4_fu_444_p2 = (ap_sig_allocacmp_indvar_flatten31_load + 7'd1);

assign add_ln40_fu_552_p2 = (select_ln37_fu_499_p3 + 5'd2);

assign add_ln43_4_fu_430_p2 = (ap_sig_allocacmp_indvar_flatten_load + 4'd1);

assign add_ln43_fu_614_p2 = (select_ln40_reg_1151 + 2'd1);

assign add_ln45_fu_726_p2 = (select_ln43_fu_629_p3 + 2'd1);

assign add_ln60_29_fu_779_p2 = (sub_ln60_reg_1157 + zext_ln60_59_fu_776_p1);

assign add_ln60_30_fu_808_p2 = (sub_ln60_7_reg_1183 + zext_ln60_59_reg_1190);

assign add_ln60_31_fu_860_p2 = (sub_ln60_8_fu_854_p2 + zext_ln60_59_reg_1190);

assign add_ln60_32_fu_798_p2 = (sub_ln60_reg_1157 + zext_ln60_63_fu_794_p1);

assign add_ln60_33_fu_870_p2 = (sub_ln60_7_reg_1183 + zext_ln60_63_reg_1201);

assign add_ln60_34_fu_879_p2 = (sub_ln60_8_fu_854_p2 + zext_ln60_63_reg_1201);

assign add_ln60_35_fu_826_p2 = (sub_ln60_reg_1157 + zext_ln60_67_fu_822_p1);

assign add_ln60_36_fu_889_p2 = (sub_ln60_7_reg_1183 + zext_ln60_67_reg_1217);

assign add_ln60_37_fu_898_p2 = (sub_ln60_8_fu_854_p2 + zext_ln60_67_reg_1217);

assign add_ln60_4_fu_817_p2 = (empty_30_reg_1176 + 5'd2);

assign add_ln60_fu_789_p2 = (empty_30_reg_1176 + 5'd1);

assign and_ln37_4_fu_410_p2 = (xor_ln37_fu_398_p2 & icmp_ln43_fu_404_p2);

assign and_ln37_fu_542_p2 = (xor_ln37_reg_1132 & icmp_ln45_fu_536_p2);

assign and_ln40_fu_601_p2 = (or_ln40_4_fu_596_p2 & and_ln37_fu_542_p2);

assign and_ln7_fu_985_p2 = (or_ln7_fu_979_p2 & grp_fu_309_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter16 == 1'b1) & (conv_to_pool_streams_4_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter16 == 1'b1) & (conv_to_pool_streams_4_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter16 == 1'b1) & (conv_to_pool_streams_4_full_n == 1'b0));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage4_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage3_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage4_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage3_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage4_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage3_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage4_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage2_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage3_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage4_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage2_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage3_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage4_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage2_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage3_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage4_iter15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state81_pp0_stage0_iter16 = (conv_to_pool_streams_4_full_n == 1'b0);
end

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage4;

assign bitcast_ln7_fu_950_p1 = x_assign_reg_1403;

assign conv_to_pool_streams_4_din = select_ln173_reg_1409;

assign empty_27_fu_481_p2 = (empty_fu_476_p2 + 5'd1);

assign empty_28_fu_487_p2 = (empty_fu_476_p2 + 5'd2);

assign empty_30_fu_720_p2 = (select_ln40_19_fu_607_p3 + zext_ln45_fu_716_p1);

assign empty_fu_476_p2 = (r_5_reg_1103 + zext_ln43_fu_473_p1);

assign icmp_ln37_fu_368_p2 = ((ap_sig_allocacmp_indvar_flatten65_load == 10'd784) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_392_p2 = ((ap_sig_allocacmp_indvar_flatten31_load == 7'd56) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_404_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_536_p2 = ((wc_fu_116 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln7_4_fu_973_p2 = ((trunc_ln7_fu_963_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln7_fu_967_p2 = ((tmp_fu_953_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln40_4_fu_596_p2 = (xor_ln40_fu_591_p2 | icmp_ln40_reg_1121);

assign or_ln40_fu_416_p2 = (icmp_ln40_fu_392_p2 | and_ln37_4_fu_410_p2);

assign or_ln43_5_fu_624_p2 = (or_ln43_fu_619_p2 | icmp_ln40_reg_1121);

assign or_ln43_fu_619_p2 = (and_ln40_fu_601_p2 | and_ln37_4_reg_1142);

assign or_ln7_fu_979_p2 = (icmp_ln7_fu_967_p2 | icmp_ln7_4_fu_973_p2);

assign p_mid121_fu_565_p2 = (select_ln37_17_fu_547_p3 + 5'd1);

assign p_mid125_fu_578_p2 = (select_ln37_17_fu_547_p3 + 5'd2);

assign p_mid14_fu_681_p2 = (p_mid1_fu_641_p2 + 5'd1);

assign p_mid151_fu_512_p2 = (r_5_reg_1103 + 5'd3);

assign p_mid155_fu_524_p2 = (r_5_reg_1103 + 5'd4);

assign p_mid16_fu_695_p2 = (p_mid1_fu_641_p2 + 5'd2);

assign p_mid1_fu_641_p2 = (select_ln37_17_fu_547_p3 + zext_ln43_4_fu_637_p1);

assign pixel_33_fu_884_p1 = reg_319;

assign pixel_34_fu_911_p1 = reg_314;

assign pixel_35_fu_916_p1 = reg_319;

assign pixel_36_fu_925_p1 = reg_314;

assign pixel_37_fu_930_p1 = reg_319;

assign pixel_38_fu_935_p1 = reg_314;

assign pixel_39_fu_940_p1 = reg_319;

assign pixel_40_fu_945_p1 = reg_314;

assign pixel_fu_865_p1 = reg_314;

assign select_ln173_fu_991_p3 = ((and_ln7_fu_985_p2[0:0] == 1'b1) ? bitcast_ln7_fu_950_p1 : 32'd0);

assign select_ln37_14_fu_506_p3 = ((icmp_ln40_reg_1121[0:0] == 1'b1) ? add_ln37_reg_1115 : empty_fu_476_p2);

assign select_ln37_15_fu_517_p3 = ((icmp_ln40_reg_1121[0:0] == 1'b1) ? p_mid151_fu_512_p2 : empty_27_fu_481_p2);

assign select_ln37_16_fu_529_p3 = ((icmp_ln40_reg_1121[0:0] == 1'b1) ? p_mid155_fu_524_p2 : empty_28_fu_487_p2);

assign select_ln37_17_fu_547_p3 = ((icmp_ln40_reg_1121[0:0] == 1'b1) ? add_ln37_reg_1115 : r_5_reg_1103);

assign select_ln37_fu_499_p3 = ((icmp_ln40_reg_1121[0:0] == 1'b1) ? 5'd0 : c_fu_128);

assign select_ln40_16_fu_558_p3 = ((and_ln37_4_reg_1142[0:0] == 1'b1) ? select_ln37_17_fu_547_p3 : select_ln37_14_fu_506_p3);

assign select_ln40_17_fu_571_p3 = ((and_ln37_4_reg_1142[0:0] == 1'b1) ? p_mid121_fu_565_p2 : select_ln37_15_fu_517_p3);

assign select_ln40_18_fu_584_p3 = ((and_ln37_4_reg_1142[0:0] == 1'b1) ? p_mid125_fu_578_p2 : select_ln37_16_fu_529_p3);

assign select_ln40_19_fu_607_p3 = ((and_ln37_4_reg_1142[0:0] == 1'b1) ? add_ln40_fu_552_p2 : select_ln37_fu_499_p3);

assign select_ln40_20_fu_450_p3 = ((icmp_ln40_fu_392_p2[0:0] == 1'b1) ? 7'd1 : add_ln40_4_fu_444_p2);

assign select_ln40_fu_422_p3 = ((or_ln40_fu_416_p2[0:0] == 1'b1) ? 2'd0 : ap_sig_allocacmp_wr_5);

assign select_ln43_16_fu_647_p3 = ((and_ln40_fu_601_p2[0:0] == 1'b1) ? p_mid1_fu_641_p2 : select_ln40_16_fu_558_p3);

assign select_ln43_17_fu_687_p3 = ((and_ln40_fu_601_p2[0:0] == 1'b1) ? p_mid14_fu_681_p2 : select_ln40_17_fu_571_p3);

assign select_ln43_18_fu_701_p3 = ((and_ln40_fu_601_p2[0:0] == 1'b1) ? p_mid16_fu_695_p2 : select_ln40_18_fu_584_p3);

assign select_ln43_19_fu_709_p3 = ((and_ln40_fu_601_p2[0:0] == 1'b1) ? add_ln43_fu_614_p2 : select_ln40_reg_1151);

assign select_ln43_20_fu_436_p3 = ((or_ln40_fu_416_p2[0:0] == 1'b1) ? 4'd1 : add_ln43_4_fu_430_p2);

assign select_ln43_fu_629_p3 = ((or_ln43_5_fu_624_p2[0:0] == 1'b1) ? 2'd0 : wc_fu_116);

assign sub_ln60_7_fu_770_p2 = (tmp_17_fu_752_p3 - zext_ln60_57_fu_766_p1);

assign sub_ln60_8_fu_854_p2 = (tmp_19_fu_836_p3 - zext_ln60_58_fu_850_p1);

assign sub_ln60_fu_675_p2 = (tmp_s_fu_655_p3 - zext_ln60_fu_671_p1);

assign tmp_16_fu_663_p3 = {{select_ln43_16_fu_647_p3}, {1'd0}};

assign tmp_17_fu_752_p3 = {{select_ln43_17_reg_1164}, {5'd0}};

assign tmp_18_fu_759_p3 = {{select_ln43_17_reg_1164}, {1'd0}};

assign tmp_19_fu_836_p3 = {{select_ln43_18_reg_1170}, {5'd0}};

assign tmp_20_fu_843_p3 = {{select_ln43_18_reg_1170}, {1'd0}};

assign tmp_fu_953_p4 = {{bitcast_ln7_fu_950_p1[30:23]}};

assign tmp_s_fu_655_p3 = {{select_ln43_16_fu_647_p3}, {5'd0}};

assign trunc_ln7_fu_963_p1 = bitcast_ln7_fu_950_p1[22:0];

assign xor_ln37_fu_398_p2 = (icmp_ln40_fu_392_p2 ^ 1'd1);

assign xor_ln40_fu_591_p2 = (icmp_ln43_reg_1137 ^ 1'd1);

assign zext_ln43_4_fu_637_p1 = add_ln43_fu_614_p2;

assign zext_ln43_fu_473_p1 = wr_5_reg_1098;

assign zext_ln45_fu_716_p1 = select_ln43_fu_629_p3;

assign zext_ln60_57_fu_766_p1 = tmp_18_fu_759_p3;

assign zext_ln60_58_fu_850_p1 = tmp_20_fu_843_p3;

assign zext_ln60_59_fu_776_p1 = empty_30_reg_1176;

assign zext_ln60_60_fu_784_p1 = add_ln60_29_fu_779_p2;

assign zext_ln60_61_fu_812_p1 = add_ln60_30_fu_808_p2;

assign zext_ln60_62_fu_903_p1 = add_ln60_31_reg_1228;

assign zext_ln60_63_fu_794_p1 = add_ln60_fu_789_p2;

assign zext_ln60_64_fu_803_p1 = add_ln60_32_fu_798_p2;

assign zext_ln60_65_fu_874_p1 = add_ln60_33_fu_870_p2;

assign zext_ln60_66_fu_907_p1 = add_ln60_34_reg_1243;

assign zext_ln60_67_fu_822_p1 = add_ln60_4_fu_817_p2;

assign zext_ln60_68_fu_831_p1 = add_ln60_35_fu_826_p2;

assign zext_ln60_69_fu_893_p1 = add_ln60_36_fu_889_p2;

assign zext_ln60_70_fu_921_p1 = add_ln60_37_reg_1258;

assign zext_ln60_fu_671_p1 = tmp_16_fu_663_p3;

always @ (posedge ap_clk) begin
    sub_ln60_reg_1157[0] <= 1'b0;
    sub_ln60_7_reg_1183[0] <= 1'b0;
    zext_ln60_59_reg_1190[9:5] <= 5'b00000;
    zext_ln60_63_reg_1201[9:5] <= 5'b00000;
    zext_ln60_67_reg_1217[9:5] <= 5'b00000;
end

endmodule //convolutional_layer_convolution_4_Pipeline_conv_for_rows_win_for_rows_win_for_cols
