// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnn_convolution_3_Pipeline_conv_for_rows_win_for_rows_win_for_cols (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        pad_img_address0,
        pad_img_ce0,
        pad_img_q0,
        pad_img_address1,
        pad_img_ce1,
        pad_img_q1,
        w,
        w_13,
        w_3,
        w_4,
        w_5,
        w_6,
        w_7,
        w_8,
        w_9,
        conv5,
        conv_to_pool_streams_3_din,
        conv_to_pool_streams_3_num_data_valid,
        conv_to_pool_streams_3_fifo_cap,
        conv_to_pool_streams_3_full_n,
        conv_to_pool_streams_3_write
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] pad_img_address0;
output   pad_img_ce0;
input  [31:0] pad_img_q0;
output  [9:0] pad_img_address1;
output   pad_img_ce1;
input  [31:0] pad_img_q1;
input  [31:0] w;
input  [31:0] w_13;
input  [31:0] w_3;
input  [31:0] w_4;
input  [31:0] w_5;
input  [31:0] w_6;
input  [31:0] w_7;
input  [31:0] w_8;
input  [31:0] w_9;
input  [31:0] conv5;
output  [31:0] conv_to_pool_streams_3_din;
input  [10:0] conv_to_pool_streams_3_num_data_valid;
input  [10:0] conv_to_pool_streams_3_fifo_cap;
input   conv_to_pool_streams_3_full_n;
output   conv_to_pool_streams_3_write;

reg ap_idle;
reg[9:0] pad_img_address0;
reg pad_img_ce0;
reg[9:0] pad_img_address1;
reg pad_img_ce1;
reg conv_to_pool_streams_3_write;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state10_pp0_stage4_iter1;
wire    ap_block_state15_pp0_stage4_iter2;
wire    ap_block_state20_pp0_stage4_iter3;
wire    ap_block_state25_pp0_stage4_iter4;
wire    ap_block_state30_pp0_stage4_iter5;
wire    ap_block_state35_pp0_stage4_iter6;
wire    ap_block_state40_pp0_stage4_iter7;
wire    ap_block_state45_pp0_stage4_iter8;
wire    ap_block_state50_pp0_stage4_iter9;
wire    ap_block_state55_pp0_stage4_iter10;
wire    ap_block_state60_pp0_stage4_iter11;
wire    ap_block_state65_pp0_stage4_iter12;
wire    ap_block_state70_pp0_stage4_iter13;
wire    ap_block_state75_pp0_stage4_iter14;
wire    ap_block_state80_pp0_stage4_iter15;
wire    ap_block_pp0_stage4_subdone;
reg   [0:0] icmp_ln39_reg_1054;
reg    ap_condition_exit_pp0_iter0_stage4;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    conv_to_pool_streams_3_blk_n;
wire    ap_block_pp0_stage0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
wire    ap_block_state16_pp0_stage0_iter3;
wire    ap_block_state21_pp0_stage0_iter4;
wire    ap_block_state26_pp0_stage0_iter5;
wire    ap_block_state31_pp0_stage0_iter6;
wire    ap_block_state36_pp0_stage0_iter7;
wire    ap_block_state41_pp0_stage0_iter8;
wire    ap_block_state46_pp0_stage0_iter9;
wire    ap_block_state51_pp0_stage0_iter10;
wire    ap_block_state56_pp0_stage0_iter11;
wire    ap_block_state61_pp0_stage0_iter12;
wire    ap_block_state66_pp0_stage0_iter13;
wire    ap_block_state71_pp0_stage0_iter14;
wire    ap_block_state76_pp0_stage0_iter15;
reg    ap_block_state81_pp0_stage0_iter16;
reg    ap_block_pp0_stage0_11001;
reg   [1:0] wr_6_reg_1041;
reg   [4:0] r_6_reg_1046;
wire   [0:0] icmp_ln39_fu_356_p2;
reg   [0:0] icmp_ln39_reg_1054_pp0_iter1_reg;
reg   [0:0] icmp_ln39_reg_1054_pp0_iter2_reg;
reg   [0:0] icmp_ln39_reg_1054_pp0_iter3_reg;
reg   [0:0] icmp_ln39_reg_1054_pp0_iter4_reg;
reg   [0:0] icmp_ln39_reg_1054_pp0_iter5_reg;
reg   [0:0] icmp_ln39_reg_1054_pp0_iter6_reg;
reg   [0:0] icmp_ln39_reg_1054_pp0_iter7_reg;
reg   [0:0] icmp_ln39_reg_1054_pp0_iter8_reg;
reg   [0:0] icmp_ln39_reg_1054_pp0_iter9_reg;
reg   [0:0] icmp_ln39_reg_1054_pp0_iter10_reg;
reg   [0:0] icmp_ln39_reg_1054_pp0_iter11_reg;
reg   [0:0] icmp_ln39_reg_1054_pp0_iter12_reg;
reg   [0:0] icmp_ln39_reg_1054_pp0_iter13_reg;
reg   [0:0] icmp_ln39_reg_1054_pp0_iter14_reg;
wire   [4:0] add_ln39_fu_374_p2;
reg   [4:0] add_ln39_reg_1058;
wire   [0:0] icmp_ln42_fu_380_p2;
reg   [0:0] icmp_ln42_reg_1064;
wire   [0:0] xor_ln39_fu_386_p2;
reg   [0:0] xor_ln39_reg_1075;
wire   [0:0] icmp_ln45_fu_392_p2;
reg   [0:0] icmp_ln45_reg_1080;
wire   [0:0] and_ln39_5_fu_398_p2;
reg   [0:0] and_ln39_5_reg_1085;
wire   [1:0] select_ln42_fu_410_p3;
reg   [1:0] select_ln42_reg_1094;
wire   [9:0] sub_ln65_fu_663_p2;
reg   [9:0] sub_ln65_reg_1100;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state12_pp0_stage1_iter2;
wire    ap_block_state17_pp0_stage1_iter3;
wire    ap_block_state22_pp0_stage1_iter4;
wire    ap_block_state27_pp0_stage1_iter5;
wire    ap_block_state32_pp0_stage1_iter6;
wire    ap_block_state37_pp0_stage1_iter7;
wire    ap_block_state42_pp0_stage1_iter8;
wire    ap_block_state47_pp0_stage1_iter9;
wire    ap_block_state52_pp0_stage1_iter10;
wire    ap_block_state57_pp0_stage1_iter11;
wire    ap_block_state62_pp0_stage1_iter12;
wire    ap_block_state67_pp0_stage1_iter13;
wire    ap_block_state72_pp0_stage1_iter14;
wire    ap_block_state77_pp0_stage1_iter15;
wire    ap_block_pp0_stage1_11001;
wire   [4:0] select_ln45_22_fu_675_p3;
reg   [4:0] select_ln45_22_reg_1107;
wire   [4:0] select_ln45_23_fu_689_p3;
reg   [4:0] select_ln45_23_reg_1113;
wire   [4:0] empty_105_fu_708_p2;
reg   [4:0] empty_105_reg_1119;
wire   [9:0] sub_ln65_9_fu_758_p2;
reg   [9:0] sub_ln65_9_reg_1126;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state13_pp0_stage2_iter2;
wire    ap_block_state18_pp0_stage2_iter3;
wire    ap_block_state23_pp0_stage2_iter4;
wire    ap_block_state28_pp0_stage2_iter5;
wire    ap_block_state33_pp0_stage2_iter6;
wire    ap_block_state38_pp0_stage2_iter7;
wire    ap_block_state43_pp0_stage2_iter8;
wire    ap_block_state48_pp0_stage2_iter9;
wire    ap_block_state53_pp0_stage2_iter10;
wire    ap_block_state58_pp0_stage2_iter11;
wire    ap_block_state63_pp0_stage2_iter12;
wire    ap_block_state68_pp0_stage2_iter13;
wire    ap_block_state73_pp0_stage2_iter14;
wire    ap_block_state78_pp0_stage2_iter15;
wire    ap_block_pp0_stage2_11001;
wire   [9:0] zext_ln65_73_fu_764_p1;
reg   [9:0] zext_ln65_73_reg_1133;
wire   [9:0] zext_ln65_77_fu_782_p1;
reg   [9:0] zext_ln65_77_reg_1144;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_state14_pp0_stage3_iter2;
wire    ap_block_state19_pp0_stage3_iter3;
wire    ap_block_state24_pp0_stage3_iter4;
wire    ap_block_state29_pp0_stage3_iter5;
wire    ap_block_state34_pp0_stage3_iter6;
wire    ap_block_state39_pp0_stage3_iter7;
wire    ap_block_state44_pp0_stage3_iter8;
wire    ap_block_state49_pp0_stage3_iter9;
wire    ap_block_state54_pp0_stage3_iter10;
wire    ap_block_state59_pp0_stage3_iter11;
wire    ap_block_state64_pp0_stage3_iter12;
wire    ap_block_state69_pp0_stage3_iter13;
wire    ap_block_state74_pp0_stage3_iter14;
wire    ap_block_state79_pp0_stage3_iter15;
wire    ap_block_pp0_stage3_11001;
reg   [31:0] pixel_reg_1160;
reg   [31:0] pixel_41_reg_1165;
wire   [9:0] zext_ln65_81_fu_810_p1;
reg   [9:0] zext_ln65_81_reg_1170;
wire   [9:0] add_ln65_72_fu_848_p2;
reg   [9:0] add_ln65_72_reg_1181;
wire    ap_block_pp0_stage4_11001;
wire   [9:0] add_ln65_75_fu_862_p2;
reg   [9:0] add_ln65_75_reg_1191;
wire   [9:0] add_ln65_78_fu_876_p2;
reg   [9:0] add_ln65_78_reg_1201;
reg   [31:0] pixel_42_reg_1206;
reg   [31:0] pixel_43_reg_1211;
reg   [31:0] pixel_44_reg_1226;
reg   [31:0] pixel_45_reg_1231;
reg   [31:0] pixel_46_reg_1241;
reg   [31:0] pixel_47_reg_1246;
wire   [31:0] grp_fu_299_p2;
reg   [31:0] mul_reg_1251;
wire   [31:0] grp_fu_303_p2;
reg   [31:0] mul_s_reg_1256;
reg   [31:0] mul_s_reg_1256_pp0_iter2_reg;
reg   [31:0] pixel_48_reg_1261;
reg   [31:0] mul_7_reg_1266;
reg   [31:0] mul_7_reg_1266_pp0_iter2_reg;
reg   [31:0] mul_7_reg_1266_pp0_iter3_reg;
reg   [31:0] mul_1_reg_1271;
reg   [31:0] mul_1_reg_1271_pp0_iter2_reg;
reg   [31:0] mul_1_reg_1271_pp0_iter3_reg;
reg   [31:0] mul_1_reg_1271_pp0_iter4_reg;
reg   [31:0] mul_1_reg_1271_pp0_iter5_reg;
reg   [31:0] mul_1_1_reg_1276;
reg   [31:0] mul_1_1_reg_1276_pp0_iter2_reg;
reg   [31:0] mul_1_1_reg_1276_pp0_iter3_reg;
reg   [31:0] mul_1_1_reg_1276_pp0_iter4_reg;
reg   [31:0] mul_1_1_reg_1276_pp0_iter5_reg;
reg   [31:0] mul_1_1_reg_1276_pp0_iter6_reg;
reg   [31:0] mul_1_2_reg_1281;
reg   [31:0] mul_1_2_reg_1281_pp0_iter2_reg;
reg   [31:0] mul_1_2_reg_1281_pp0_iter3_reg;
reg   [31:0] mul_1_2_reg_1281_pp0_iter4_reg;
reg   [31:0] mul_1_2_reg_1281_pp0_iter5_reg;
reg   [31:0] mul_1_2_reg_1281_pp0_iter6_reg;
reg   [31:0] mul_1_2_reg_1281_pp0_iter7_reg;
reg   [31:0] mul_2_reg_1286;
reg   [31:0] mul_2_reg_1286_pp0_iter3_reg;
reg   [31:0] mul_2_reg_1286_pp0_iter4_reg;
reg   [31:0] mul_2_reg_1286_pp0_iter5_reg;
reg   [31:0] mul_2_reg_1286_pp0_iter6_reg;
reg   [31:0] mul_2_reg_1286_pp0_iter7_reg;
reg   [31:0] mul_2_reg_1286_pp0_iter8_reg;
reg   [31:0] mul_2_reg_1286_pp0_iter9_reg;
reg   [31:0] mul_2_1_reg_1291;
reg   [31:0] mul_2_1_reg_1291_pp0_iter3_reg;
reg   [31:0] mul_2_1_reg_1291_pp0_iter4_reg;
reg   [31:0] mul_2_1_reg_1291_pp0_iter5_reg;
reg   [31:0] mul_2_1_reg_1291_pp0_iter6_reg;
reg   [31:0] mul_2_1_reg_1291_pp0_iter7_reg;
reg   [31:0] mul_2_1_reg_1291_pp0_iter8_reg;
reg   [31:0] mul_2_1_reg_1291_pp0_iter9_reg;
reg   [31:0] mul_2_1_reg_1291_pp0_iter10_reg;
reg   [31:0] mul_2_1_reg_1291_pp0_iter11_reg;
reg   [31:0] mul_2_2_reg_1296;
reg   [31:0] mul_2_2_reg_1296_pp0_iter3_reg;
reg   [31:0] mul_2_2_reg_1296_pp0_iter4_reg;
reg   [31:0] mul_2_2_reg_1296_pp0_iter5_reg;
reg   [31:0] mul_2_2_reg_1296_pp0_iter6_reg;
reg   [31:0] mul_2_2_reg_1296_pp0_iter7_reg;
reg   [31:0] mul_2_2_reg_1296_pp0_iter8_reg;
reg   [31:0] mul_2_2_reg_1296_pp0_iter9_reg;
reg   [31:0] mul_2_2_reg_1296_pp0_iter10_reg;
reg   [31:0] mul_2_2_reg_1296_pp0_iter11_reg;
reg   [31:0] mul_2_2_reg_1296_pp0_iter12_reg;
wire   [31:0] grp_fu_290_p2;
reg   [31:0] w_sum_reg_1301;
reg   [31:0] w_sum_33_reg_1306;
reg   [31:0] w_sum_34_reg_1311;
reg   [31:0] w_sum_35_reg_1316;
reg   [31:0] w_sum_36_reg_1321;
wire   [31:0] grp_fu_295_p2;
reg   [31:0] w_sum_37_reg_1326;
reg   [31:0] w_sum_38_reg_1331;
reg   [31:0] w_sum_39_reg_1336;
reg   [31:0] w_sum_40_reg_1341;
reg   [31:0] x_assign_reg_1346;
wire   [31:0] select_ln77_fu_934_p3;
reg   [31:0] select_ln77_reg_1352;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln65_74_fu_772_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln65_78_fu_791_p1;
wire   [63:0] zext_ln65_75_fu_800_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln65_82_fu_819_p1;
wire   [63:0] zext_ln65_79_fu_857_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln65_83_fu_871_p1;
wire   [63:0] zext_ln65_76_fu_881_p1;
wire   [63:0] zext_ln65_80_fu_885_p1;
wire   [63:0] zext_ln65_84_fu_889_p1;
wire    ap_block_pp0_stage1;
reg   [1:0] wc_fu_114;
wire   [1:0] add_ln47_fu_714_p2;
wire    ap_loop_init;
reg   [1:0] wr_fu_118;
wire   [1:0] select_ln45_24_fu_697_p3;
reg   [1:0] ap_sig_allocacmp_wr_6;
reg   [3:0] indvar_flatten_fu_122;
wire   [3:0] select_ln45_25_fu_424_p3;
reg   [3:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [4:0] c_fu_126;
wire   [4:0] select_ln42_24_fu_595_p3;
reg   [6:0] indvar_flatten25_fu_130;
wire   [6:0] select_ln42_25_fu_438_p3;
reg   [6:0] ap_sig_allocacmp_indvar_flatten25_load;
reg   [4:0] r_fu_134;
wire   [4:0] select_ln39_21_fu_535_p3;
reg   [4:0] ap_sig_allocacmp_r_6;
reg   [9:0] indvar_flatten59_fu_138;
wire   [9:0] add_ln39_5_fu_362_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten59_load;
reg    ap_block_pp0_stage0_01001;
reg   [31:0] grp_fu_290_p0;
reg   [31:0] grp_fu_290_p1;
reg   [31:0] grp_fu_295_p0;
reg   [31:0] grp_fu_295_p1;
reg   [31:0] grp_fu_299_p0;
reg   [31:0] grp_fu_299_p1;
reg   [31:0] grp_fu_303_p0;
reg   [31:0] grp_fu_303_p1;
wire   [0:0] or_ln42_fu_404_p2;
wire   [3:0] add_ln45_5_fu_418_p2;
wire   [6:0] add_ln42_5_fu_432_p2;
wire   [4:0] zext_ln45_fu_461_p1;
wire   [4:0] empty_fu_464_p2;
wire   [4:0] add_ln65_64_fu_500_p2;
wire   [4:0] add_ln65_10_fu_469_p2;
wire   [4:0] add_ln65_65_fu_512_p2;
wire   [4:0] add_ln65_11_fu_475_p2;
wire   [0:0] icmp_ln47_fu_524_p2;
wire   [4:0] select_ln39_fu_487_p3;
wire   [4:0] select_ln39_18_fu_494_p3;
wire   [4:0] add_ln65_66_fu_553_p2;
wire   [4:0] select_ln39_19_fu_505_p3;
wire   [4:0] add_ln65_67_fu_566_p2;
wire   [4:0] select_ln39_20_fu_517_p3;
wire   [0:0] xor_ln42_fu_579_p2;
wire   [0:0] and_ln39_fu_530_p2;
wire   [0:0] or_ln42_5_fu_584_p2;
wire   [4:0] add_ln42_fu_540_p2;
wire   [0:0] and_ln42_fu_589_p2;
wire   [0:0] or_ln45_fu_607_p2;
wire   [0:0] or_ln45_6_fu_612_p2;
wire   [1:0] add_ln45_fu_602_p2;
wire   [4:0] zext_ln45_5_fu_625_p1;
wire   [4:0] p_mid1_fu_629_p2;
wire   [4:0] select_ln42_21_fu_546_p3;
wire   [4:0] select_ln45_21_fu_635_p3;
wire   [5:0] tmp_26_fu_651_p3;
wire   [9:0] tmp_25_fu_643_p3;
wire   [9:0] zext_ln65_fu_659_p1;
wire   [4:0] add_ln65_68_fu_669_p2;
wire   [4:0] select_ln42_22_fu_559_p3;
wire   [4:0] add_ln65_69_fu_683_p2;
wire   [4:0] select_ln42_23_fu_572_p3;
wire   [1:0] select_ln45_fu_617_p3;
wire   [4:0] zext_ln47_fu_704_p1;
wire   [5:0] tmp_28_fu_747_p3;
wire   [9:0] tmp_27_fu_740_p3;
wire   [9:0] zext_ln65_71_fu_754_p1;
wire   [9:0] add_ln65_70_fu_767_p2;
wire   [4:0] add_ln65_fu_777_p2;
wire   [9:0] add_ln65_73_fu_786_p2;
wire   [9:0] add_ln65_71_fu_796_p2;
wire   [4:0] add_ln65_5_fu_805_p2;
wire   [9:0] add_ln65_76_fu_814_p2;
wire   [5:0] tmp_30_fu_831_p3;
wire   [9:0] tmp_29_fu_824_p3;
wire   [9:0] zext_ln65_72_fu_838_p1;
wire   [9:0] sub_ln65_10_fu_842_p2;
wire   [9:0] add_ln65_74_fu_853_p2;
wire   [9:0] add_ln65_77_fu_867_p2;
wire   [31:0] bitcast_ln7_fu_893_p1;
wire   [7:0] tmp_fu_896_p4;
wire   [22:0] trunc_ln7_fu_906_p1;
wire   [0:0] icmp_ln7_5_fu_916_p2;
wire   [0:0] icmp_ln7_fu_910_p2;
wire   [0:0] or_ln7_fu_922_p2;
wire   [0:0] grp_fu_307_p2;
wire   [0:0] and_ln7_fu_928_p2;
reg    grp_fu_290_ce;
reg    grp_fu_295_ce;
reg    grp_fu_299_ce;
reg    grp_fu_303_ce;
reg    grp_fu_307_ce;
wire    ap_block_pp0_stage3_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter15_stage0;
reg    ap_idle_pp0_0to14;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0_1to16;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

cnn_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U126(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_290_p0),
    .din1(grp_fu_290_p1),
    .ce(grp_fu_290_ce),
    .dout(grp_fu_290_p2)
);

cnn_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U127(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_295_p0),
    .din1(grp_fu_295_p1),
    .ce(grp_fu_295_ce),
    .dout(grp_fu_295_p2)
);

cnn_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U128(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_299_p0),
    .din1(grp_fu_299_p1),
    .ce(grp_fu_299_ce),
    .dout(grp_fu_299_p2)
);

cnn_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U129(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_303_p0),
    .din1(grp_fu_303_p1),
    .ce(grp_fu_303_ce),
    .dout(grp_fu_303_p2)
);

cnn_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U130(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x_assign_reg_1346),
    .din1(32'd0),
    .ce(grp_fu_307_ce),
    .opcode(5'd2),
    .dout(grp_fu_307_p2)
);

cnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage4),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage4)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter16 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_fu_126 <= 5'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln39_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        c_fu_126 <= select_ln42_24_fu_595_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln39_fu_356_p2 == 1'd0))) begin
            indvar_flatten25_fu_130 <= select_ln42_25_fu_438_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten25_fu_130 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln39_fu_356_p2 == 1'd0))) begin
            indvar_flatten59_fu_138 <= add_ln39_5_fu_362_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten59_fu_138 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln39_fu_356_p2 == 1'd0))) begin
            indvar_flatten_fu_122 <= select_ln45_25_fu_424_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_122 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_fu_134 <= 5'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln39_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        r_fu_134 <= select_ln39_21_fu_535_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        wc_fu_114 <= 2'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln39_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        wc_fu_114 <= add_ln47_fu_714_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        wr_fu_118 <= 2'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln39_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        wr_fu_118 <= select_ln45_24_fu_697_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln39_fu_356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln39_reg_1058 <= add_ln39_fu_374_p2;
        and_ln39_5_reg_1085 <= and_ln39_5_fu_398_p2;
        icmp_ln42_reg_1064 <= icmp_ln42_fu_380_p2;
        icmp_ln45_reg_1080 <= icmp_ln45_fu_392_p2;
        select_ln42_reg_1094 <= select_ln42_fu_410_p3;
        xor_ln39_reg_1075 <= xor_ln39_fu_386_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln39_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add_ln65_72_reg_1181 <= add_ln65_72_fu_848_p2;
        add_ln65_75_reg_1191 <= add_ln65_75_fu_862_p2;
        add_ln65_78_reg_1201 <= add_ln65_78_fu_876_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln39_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        empty_105_reg_1119 <= empty_105_fu_708_p2;
        select_ln45_22_reg_1107 <= select_ln45_22_fu_675_p3;
        select_ln45_23_reg_1113 <= select_ln45_23_fu_689_p3;
        sub_ln65_reg_1100[9 : 1] <= sub_ln65_fu_663_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln39_reg_1054 <= icmp_ln39_fu_356_p2;
        icmp_ln39_reg_1054_pp0_iter10_reg <= icmp_ln39_reg_1054_pp0_iter9_reg;
        icmp_ln39_reg_1054_pp0_iter11_reg <= icmp_ln39_reg_1054_pp0_iter10_reg;
        icmp_ln39_reg_1054_pp0_iter12_reg <= icmp_ln39_reg_1054_pp0_iter11_reg;
        icmp_ln39_reg_1054_pp0_iter13_reg <= icmp_ln39_reg_1054_pp0_iter12_reg;
        icmp_ln39_reg_1054_pp0_iter14_reg <= icmp_ln39_reg_1054_pp0_iter13_reg;
        icmp_ln39_reg_1054_pp0_iter1_reg <= icmp_ln39_reg_1054;
        icmp_ln39_reg_1054_pp0_iter2_reg <= icmp_ln39_reg_1054_pp0_iter1_reg;
        icmp_ln39_reg_1054_pp0_iter3_reg <= icmp_ln39_reg_1054_pp0_iter2_reg;
        icmp_ln39_reg_1054_pp0_iter4_reg <= icmp_ln39_reg_1054_pp0_iter3_reg;
        icmp_ln39_reg_1054_pp0_iter5_reg <= icmp_ln39_reg_1054_pp0_iter4_reg;
        icmp_ln39_reg_1054_pp0_iter6_reg <= icmp_ln39_reg_1054_pp0_iter5_reg;
        icmp_ln39_reg_1054_pp0_iter7_reg <= icmp_ln39_reg_1054_pp0_iter6_reg;
        icmp_ln39_reg_1054_pp0_iter8_reg <= icmp_ln39_reg_1054_pp0_iter7_reg;
        icmp_ln39_reg_1054_pp0_iter9_reg <= icmp_ln39_reg_1054_pp0_iter8_reg;
        mul_2_1_reg_1291_pp0_iter10_reg <= mul_2_1_reg_1291_pp0_iter9_reg;
        mul_2_1_reg_1291_pp0_iter11_reg <= mul_2_1_reg_1291_pp0_iter10_reg;
        mul_2_1_reg_1291_pp0_iter3_reg <= mul_2_1_reg_1291;
        mul_2_1_reg_1291_pp0_iter4_reg <= mul_2_1_reg_1291_pp0_iter3_reg;
        mul_2_1_reg_1291_pp0_iter5_reg <= mul_2_1_reg_1291_pp0_iter4_reg;
        mul_2_1_reg_1291_pp0_iter6_reg <= mul_2_1_reg_1291_pp0_iter5_reg;
        mul_2_1_reg_1291_pp0_iter7_reg <= mul_2_1_reg_1291_pp0_iter6_reg;
        mul_2_1_reg_1291_pp0_iter8_reg <= mul_2_1_reg_1291_pp0_iter7_reg;
        mul_2_1_reg_1291_pp0_iter9_reg <= mul_2_1_reg_1291_pp0_iter8_reg;
        mul_2_reg_1286_pp0_iter3_reg <= mul_2_reg_1286;
        mul_2_reg_1286_pp0_iter4_reg <= mul_2_reg_1286_pp0_iter3_reg;
        mul_2_reg_1286_pp0_iter5_reg <= mul_2_reg_1286_pp0_iter4_reg;
        mul_2_reg_1286_pp0_iter6_reg <= mul_2_reg_1286_pp0_iter5_reg;
        mul_2_reg_1286_pp0_iter7_reg <= mul_2_reg_1286_pp0_iter6_reg;
        mul_2_reg_1286_pp0_iter8_reg <= mul_2_reg_1286_pp0_iter7_reg;
        mul_2_reg_1286_pp0_iter9_reg <= mul_2_reg_1286_pp0_iter8_reg;
        r_6_reg_1046 <= ap_sig_allocacmp_r_6;
        wr_6_reg_1041 <= ap_sig_allocacmp_wr_6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        mul_1_1_reg_1276 <= grp_fu_299_p2;
        mul_1_2_reg_1281 <= grp_fu_303_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        mul_1_1_reg_1276_pp0_iter2_reg <= mul_1_1_reg_1276;
        mul_1_1_reg_1276_pp0_iter3_reg <= mul_1_1_reg_1276_pp0_iter2_reg;
        mul_1_1_reg_1276_pp0_iter4_reg <= mul_1_1_reg_1276_pp0_iter3_reg;
        mul_1_1_reg_1276_pp0_iter5_reg <= mul_1_1_reg_1276_pp0_iter4_reg;
        mul_1_1_reg_1276_pp0_iter6_reg <= mul_1_1_reg_1276_pp0_iter5_reg;
        mul_1_2_reg_1281_pp0_iter2_reg <= mul_1_2_reg_1281;
        mul_1_2_reg_1281_pp0_iter3_reg <= mul_1_2_reg_1281_pp0_iter2_reg;
        mul_1_2_reg_1281_pp0_iter4_reg <= mul_1_2_reg_1281_pp0_iter3_reg;
        mul_1_2_reg_1281_pp0_iter5_reg <= mul_1_2_reg_1281_pp0_iter4_reg;
        mul_1_2_reg_1281_pp0_iter6_reg <= mul_1_2_reg_1281_pp0_iter5_reg;
        mul_1_2_reg_1281_pp0_iter7_reg <= mul_1_2_reg_1281_pp0_iter6_reg;
        select_ln77_reg_1352 <= select_ln77_fu_934_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        mul_1_reg_1271 <= grp_fu_303_p2;
        mul_7_reg_1266 <= grp_fu_299_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        mul_1_reg_1271_pp0_iter2_reg <= mul_1_reg_1271;
        mul_1_reg_1271_pp0_iter3_reg <= mul_1_reg_1271_pp0_iter2_reg;
        mul_1_reg_1271_pp0_iter4_reg <= mul_1_reg_1271_pp0_iter3_reg;
        mul_1_reg_1271_pp0_iter5_reg <= mul_1_reg_1271_pp0_iter4_reg;
        mul_7_reg_1266_pp0_iter2_reg <= mul_7_reg_1266;
        mul_7_reg_1266_pp0_iter3_reg <= mul_7_reg_1266_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_2_1_reg_1291 <= grp_fu_303_p2;
        mul_2_reg_1286 <= grp_fu_299_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul_2_2_reg_1296 <= grp_fu_299_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul_2_2_reg_1296_pp0_iter10_reg <= mul_2_2_reg_1296_pp0_iter9_reg;
        mul_2_2_reg_1296_pp0_iter11_reg <= mul_2_2_reg_1296_pp0_iter10_reg;
        mul_2_2_reg_1296_pp0_iter12_reg <= mul_2_2_reg_1296_pp0_iter11_reg;
        mul_2_2_reg_1296_pp0_iter3_reg <= mul_2_2_reg_1296;
        mul_2_2_reg_1296_pp0_iter4_reg <= mul_2_2_reg_1296_pp0_iter3_reg;
        mul_2_2_reg_1296_pp0_iter5_reg <= mul_2_2_reg_1296_pp0_iter4_reg;
        mul_2_2_reg_1296_pp0_iter6_reg <= mul_2_2_reg_1296_pp0_iter5_reg;
        mul_2_2_reg_1296_pp0_iter7_reg <= mul_2_2_reg_1296_pp0_iter6_reg;
        mul_2_2_reg_1296_pp0_iter8_reg <= mul_2_2_reg_1296_pp0_iter7_reg;
        mul_2_2_reg_1296_pp0_iter9_reg <= mul_2_2_reg_1296_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul_reg_1251 <= grp_fu_299_p2;
        mul_s_reg_1256 <= grp_fu_303_p2;
        pixel_48_reg_1261 <= pad_img_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul_s_reg_1256_pp0_iter2_reg <= mul_s_reg_1256;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln39_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        pixel_41_reg_1165 <= pad_img_q0;
        pixel_reg_1160 <= pad_img_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln39_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        pixel_42_reg_1206 <= pad_img_q1;
        pixel_43_reg_1211 <= pad_img_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pixel_44_reg_1226 <= pad_img_q1;
        pixel_45_reg_1231 <= pad_img_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        pixel_46_reg_1241 <= pad_img_q1;
        pixel_47_reg_1246 <= pad_img_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln39_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        sub_ln65_9_reg_1126[9 : 1] <= sub_ln65_9_fu_758_p2[9 : 1];
        zext_ln65_73_reg_1133[4 : 0] <= zext_ln65_73_fu_764_p1[4 : 0];
        zext_ln65_77_reg_1144[4 : 0] <= zext_ln65_77_fu_782_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        w_sum_33_reg_1306 <= grp_fu_290_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        w_sum_34_reg_1311 <= grp_fu_290_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        w_sum_35_reg_1316 <= grp_fu_290_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        w_sum_36_reg_1321 <= grp_fu_290_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        w_sum_37_reg_1326 <= grp_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        w_sum_38_reg_1331 <= grp_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        w_sum_39_reg_1336 <= grp_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        w_sum_40_reg_1341 <= grp_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        w_sum_reg_1301 <= grp_fu_290_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        x_assign_reg_1346 <= grp_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln39_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        zext_ln65_81_reg_1170[4 : 0] <= zext_ln65_81_fu_810_p1[4 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln39_reg_1054 == 1'd1) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (icmp_ln39_reg_1054_pp0_iter14_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter15_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter15_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to14 = 1'b1;
    end else begin
        ap_idle_pp0_0to14 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to16 = 1'b1;
    end else begin
        ap_idle_pp0_1to16 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten25_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten25_load = indvar_flatten25_fu_130;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten59_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten59_load = indvar_flatten59_fu_138;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 4'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_122;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_r_6 = 5'd0;
    end else begin
        ap_sig_allocacmp_r_6 = r_fu_134;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_wr_6 = 2'd0;
    end else begin
        ap_sig_allocacmp_wr_6 = wr_fu_118;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        conv_to_pool_streams_3_blk_n = conv_to_pool_streams_3_full_n;
    end else begin
        conv_to_pool_streams_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_to_pool_streams_3_write = 1'b1;
    end else begin
        conv_to_pool_streams_3_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_290_ce = 1'b1;
    end else begin
        grp_fu_290_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_290_p0 = w_sum_35_reg_1316;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_290_p0 = w_sum_34_reg_1311;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_290_p0 = w_sum_33_reg_1306;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_290_p0 = w_sum_reg_1301;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_290_p0 = mul_reg_1251;
    end else begin
        grp_fu_290_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_290_p1 = mul_1_1_reg_1276_pp0_iter6_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_290_p1 = mul_1_reg_1271_pp0_iter5_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_290_p1 = mul_7_reg_1266_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_290_p1 = mul_s_reg_1256_pp0_iter2_reg;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_290_p1 = 32'd0;
    end else begin
        grp_fu_290_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_295_ce = 1'b1;
    end else begin
        grp_fu_295_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_295_p0 = w_sum_40_reg_1341;
    end else if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_295_p0 = w_sum_39_reg_1336;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_295_p0 = w_sum_38_reg_1331;
    end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_295_p0 = w_sum_37_reg_1326;
    end else if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_295_p0 = w_sum_36_reg_1321;
    end else begin
        grp_fu_295_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_295_p1 = conv5;
    end else if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_295_p1 = mul_2_2_reg_1296_pp0_iter12_reg;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_295_p1 = mul_2_1_reg_1291_pp0_iter11_reg;
    end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_295_p1 = mul_2_reg_1286_pp0_iter9_reg;
    end else if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_295_p1 = mul_1_2_reg_1281_pp0_iter7_reg;
    end else begin
        grp_fu_295_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_299_ce = 1'b1;
    end else begin
        grp_fu_299_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_299_p0 = w_9;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_299_p0 = w_7;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_299_p0 = w_5;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_299_p0 = w_3;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_299_p0 = w;
    end else begin
        grp_fu_299_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_299_p1 = pixel_48_reg_1261;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_299_p1 = pixel_46_reg_1241;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_299_p1 = pixel_44_reg_1226;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_299_p1 = pixel_42_reg_1206;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_299_p1 = pixel_reg_1160;
    end else begin
        grp_fu_299_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_303_ce = 1'b1;
    end else begin
        grp_fu_303_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_303_p0 = w_8;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_303_p0 = w_6;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_303_p0 = w_4;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_303_p0 = w_13;
    end else begin
        grp_fu_303_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_303_p1 = pixel_47_reg_1246;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_303_p1 = pixel_45_reg_1231;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_303_p1 = pixel_43_reg_1211;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_303_p1 = pixel_41_reg_1165;
    end else begin
        grp_fu_303_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        grp_fu_307_ce = 1'b1;
    end else begin
        grp_fu_307_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        pad_img_address0 = zext_ln65_84_fu_889_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        pad_img_address0 = zext_ln65_80_fu_885_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        pad_img_address0 = zext_ln65_83_fu_871_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        pad_img_address0 = zext_ln65_75_fu_800_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        pad_img_address0 = zext_ln65_78_fu_791_p1;
    end else begin
        pad_img_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        pad_img_address1 = zext_ln65_76_fu_881_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        pad_img_address1 = zext_ln65_79_fu_857_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        pad_img_address1 = zext_ln65_82_fu_819_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        pad_img_address1 = zext_ln65_74_fu_772_p1;
    end else begin
        pad_img_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        pad_img_ce0 = 1'b1;
    end else begin
        pad_img_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        pad_img_ce1 = 1'b1;
    end else begin
        pad_img_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter15_stage0) & (ap_idle_pp0_0to14 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to16 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln39_5_fu_362_p2 = (ap_sig_allocacmp_indvar_flatten59_load + 10'd1);

assign add_ln39_fu_374_p2 = (ap_sig_allocacmp_r_6 + 5'd2);

assign add_ln42_5_fu_432_p2 = (ap_sig_allocacmp_indvar_flatten25_load + 7'd1);

assign add_ln42_fu_540_p2 = (select_ln39_fu_487_p3 + 5'd2);

assign add_ln45_5_fu_418_p2 = (ap_sig_allocacmp_indvar_flatten_load + 4'd1);

assign add_ln45_fu_602_p2 = (select_ln42_reg_1094 + 2'd1);

assign add_ln47_fu_714_p2 = (select_ln45_fu_617_p3 + 2'd1);

assign add_ln65_10_fu_469_p2 = (empty_fu_464_p2 + 5'd1);

assign add_ln65_11_fu_475_p2 = (empty_fu_464_p2 + 5'd2);

assign add_ln65_5_fu_805_p2 = (empty_105_reg_1119 + 5'd2);

assign add_ln65_64_fu_500_p2 = (r_6_reg_1046 + 5'd3);

assign add_ln65_65_fu_512_p2 = (r_6_reg_1046 + 5'd4);

assign add_ln65_66_fu_553_p2 = (select_ln39_21_fu_535_p3 + 5'd1);

assign add_ln65_67_fu_566_p2 = (select_ln39_21_fu_535_p3 + 5'd2);

assign add_ln65_68_fu_669_p2 = (p_mid1_fu_629_p2 + 5'd1);

assign add_ln65_69_fu_683_p2 = (p_mid1_fu_629_p2 + 5'd2);

assign add_ln65_70_fu_767_p2 = (sub_ln65_reg_1100 + zext_ln65_73_fu_764_p1);

assign add_ln65_71_fu_796_p2 = (sub_ln65_9_reg_1126 + zext_ln65_73_reg_1133);

assign add_ln65_72_fu_848_p2 = (sub_ln65_10_fu_842_p2 + zext_ln65_73_reg_1133);

assign add_ln65_73_fu_786_p2 = (sub_ln65_reg_1100 + zext_ln65_77_fu_782_p1);

assign add_ln65_74_fu_853_p2 = (sub_ln65_9_reg_1126 + zext_ln65_77_reg_1144);

assign add_ln65_75_fu_862_p2 = (sub_ln65_10_fu_842_p2 + zext_ln65_77_reg_1144);

assign add_ln65_76_fu_814_p2 = (sub_ln65_reg_1100 + zext_ln65_81_fu_810_p1);

assign add_ln65_77_fu_867_p2 = (sub_ln65_9_reg_1126 + zext_ln65_81_reg_1170);

assign add_ln65_78_fu_876_p2 = (sub_ln65_10_fu_842_p2 + zext_ln65_81_reg_1170);

assign add_ln65_fu_777_p2 = (empty_105_reg_1119 + 5'd1);

assign and_ln39_5_fu_398_p2 = (xor_ln39_fu_386_p2 & icmp_ln45_fu_392_p2);

assign and_ln39_fu_530_p2 = (xor_ln39_reg_1075 & icmp_ln47_fu_524_p2);

assign and_ln42_fu_589_p2 = (or_ln42_5_fu_584_p2 & and_ln39_fu_530_p2);

assign and_ln7_fu_928_p2 = (or_ln7_fu_922_p2 & grp_fu_307_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter16 == 1'b1) & (conv_to_pool_streams_3_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter16 == 1'b1) & (conv_to_pool_streams_3_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter16 == 1'b1) & (conv_to_pool_streams_3_full_n == 1'b0));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage4_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage3_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage4_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage3_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage4_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage3_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage4_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage2_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage3_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage4_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage2_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage3_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage4_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage2_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage3_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage4_iter15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state81_pp0_stage0_iter16 = (conv_to_pool_streams_3_full_n == 1'b0);
end

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage4;

assign bitcast_ln7_fu_893_p1 = x_assign_reg_1346;

assign conv_to_pool_streams_3_din = select_ln77_reg_1352;

assign empty_105_fu_708_p2 = (select_ln42_24_fu_595_p3 + zext_ln47_fu_704_p1);

assign empty_fu_464_p2 = (r_6_reg_1046 + zext_ln45_fu_461_p1);

assign icmp_ln39_fu_356_p2 = ((ap_sig_allocacmp_indvar_flatten59_load == 10'd784) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_380_p2 = ((ap_sig_allocacmp_indvar_flatten25_load == 7'd56) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_392_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_524_p2 = ((wc_fu_114 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln7_5_fu_916_p2 = ((trunc_ln7_fu_906_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln7_fu_910_p2 = ((tmp_fu_896_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln42_5_fu_584_p2 = (xor_ln42_fu_579_p2 | icmp_ln42_reg_1064);

assign or_ln42_fu_404_p2 = (icmp_ln42_fu_380_p2 | and_ln39_5_fu_398_p2);

assign or_ln45_6_fu_612_p2 = (or_ln45_fu_607_p2 | icmp_ln42_reg_1064);

assign or_ln45_fu_607_p2 = (and_ln42_fu_589_p2 | and_ln39_5_reg_1085);

assign or_ln7_fu_922_p2 = (icmp_ln7_fu_910_p2 | icmp_ln7_5_fu_916_p2);

assign p_mid1_fu_629_p2 = (select_ln39_21_fu_535_p3 + zext_ln45_5_fu_625_p1);

assign select_ln39_18_fu_494_p3 = ((icmp_ln42_reg_1064[0:0] == 1'b1) ? add_ln39_reg_1058 : empty_fu_464_p2);

assign select_ln39_19_fu_505_p3 = ((icmp_ln42_reg_1064[0:0] == 1'b1) ? add_ln65_64_fu_500_p2 : add_ln65_10_fu_469_p2);

assign select_ln39_20_fu_517_p3 = ((icmp_ln42_reg_1064[0:0] == 1'b1) ? add_ln65_65_fu_512_p2 : add_ln65_11_fu_475_p2);

assign select_ln39_21_fu_535_p3 = ((icmp_ln42_reg_1064[0:0] == 1'b1) ? add_ln39_reg_1058 : r_6_reg_1046);

assign select_ln39_fu_487_p3 = ((icmp_ln42_reg_1064[0:0] == 1'b1) ? 5'd0 : c_fu_126);

assign select_ln42_21_fu_546_p3 = ((and_ln39_5_reg_1085[0:0] == 1'b1) ? select_ln39_21_fu_535_p3 : select_ln39_18_fu_494_p3);

assign select_ln42_22_fu_559_p3 = ((and_ln39_5_reg_1085[0:0] == 1'b1) ? add_ln65_66_fu_553_p2 : select_ln39_19_fu_505_p3);

assign select_ln42_23_fu_572_p3 = ((and_ln39_5_reg_1085[0:0] == 1'b1) ? add_ln65_67_fu_566_p2 : select_ln39_20_fu_517_p3);

assign select_ln42_24_fu_595_p3 = ((and_ln39_5_reg_1085[0:0] == 1'b1) ? add_ln42_fu_540_p2 : select_ln39_fu_487_p3);

assign select_ln42_25_fu_438_p3 = ((icmp_ln42_fu_380_p2[0:0] == 1'b1) ? 7'd1 : add_ln42_5_fu_432_p2);

assign select_ln42_fu_410_p3 = ((or_ln42_fu_404_p2[0:0] == 1'b1) ? 2'd0 : ap_sig_allocacmp_wr_6);

assign select_ln45_21_fu_635_p3 = ((and_ln42_fu_589_p2[0:0] == 1'b1) ? p_mid1_fu_629_p2 : select_ln42_21_fu_546_p3);

assign select_ln45_22_fu_675_p3 = ((and_ln42_fu_589_p2[0:0] == 1'b1) ? add_ln65_68_fu_669_p2 : select_ln42_22_fu_559_p3);

assign select_ln45_23_fu_689_p3 = ((and_ln42_fu_589_p2[0:0] == 1'b1) ? add_ln65_69_fu_683_p2 : select_ln42_23_fu_572_p3);

assign select_ln45_24_fu_697_p3 = ((and_ln42_fu_589_p2[0:0] == 1'b1) ? add_ln45_fu_602_p2 : select_ln42_reg_1094);

assign select_ln45_25_fu_424_p3 = ((or_ln42_fu_404_p2[0:0] == 1'b1) ? 4'd1 : add_ln45_5_fu_418_p2);

assign select_ln45_fu_617_p3 = ((or_ln45_6_fu_612_p2[0:0] == 1'b1) ? 2'd0 : wc_fu_114);

assign select_ln77_fu_934_p3 = ((and_ln7_fu_928_p2[0:0] == 1'b1) ? bitcast_ln7_fu_893_p1 : 32'd0);

assign sub_ln65_10_fu_842_p2 = (tmp_29_fu_824_p3 - zext_ln65_72_fu_838_p1);

assign sub_ln65_9_fu_758_p2 = (tmp_27_fu_740_p3 - zext_ln65_71_fu_754_p1);

assign sub_ln65_fu_663_p2 = (tmp_25_fu_643_p3 - zext_ln65_fu_659_p1);

assign tmp_25_fu_643_p3 = {{select_ln45_21_fu_635_p3}, {5'd0}};

assign tmp_26_fu_651_p3 = {{select_ln45_21_fu_635_p3}, {1'd0}};

assign tmp_27_fu_740_p3 = {{select_ln45_22_reg_1107}, {5'd0}};

assign tmp_28_fu_747_p3 = {{select_ln45_22_reg_1107}, {1'd0}};

assign tmp_29_fu_824_p3 = {{select_ln45_23_reg_1113}, {5'd0}};

assign tmp_30_fu_831_p3 = {{select_ln45_23_reg_1113}, {1'd0}};

assign tmp_fu_896_p4 = {{bitcast_ln7_fu_893_p1[30:23]}};

assign trunc_ln7_fu_906_p1 = bitcast_ln7_fu_893_p1[22:0];

assign xor_ln39_fu_386_p2 = (icmp_ln42_fu_380_p2 ^ 1'd1);

assign xor_ln42_fu_579_p2 = (icmp_ln45_reg_1080 ^ 1'd1);

assign zext_ln45_5_fu_625_p1 = add_ln45_fu_602_p2;

assign zext_ln45_fu_461_p1 = wr_6_reg_1041;

assign zext_ln47_fu_704_p1 = select_ln45_fu_617_p3;

assign zext_ln65_71_fu_754_p1 = tmp_28_fu_747_p3;

assign zext_ln65_72_fu_838_p1 = tmp_30_fu_831_p3;

assign zext_ln65_73_fu_764_p1 = empty_105_reg_1119;

assign zext_ln65_74_fu_772_p1 = add_ln65_70_fu_767_p2;

assign zext_ln65_75_fu_800_p1 = add_ln65_71_fu_796_p2;

assign zext_ln65_76_fu_881_p1 = add_ln65_72_reg_1181;

assign zext_ln65_77_fu_782_p1 = add_ln65_fu_777_p2;

assign zext_ln65_78_fu_791_p1 = add_ln65_73_fu_786_p2;

assign zext_ln65_79_fu_857_p1 = add_ln65_74_fu_853_p2;

assign zext_ln65_80_fu_885_p1 = add_ln65_75_reg_1191;

assign zext_ln65_81_fu_810_p1 = add_ln65_5_fu_805_p2;

assign zext_ln65_82_fu_819_p1 = add_ln65_76_fu_814_p2;

assign zext_ln65_83_fu_871_p1 = add_ln65_77_fu_867_p2;

assign zext_ln65_84_fu_889_p1 = add_ln65_78_reg_1201;

assign zext_ln65_fu_659_p1 = tmp_26_fu_651_p3;

always @ (posedge ap_clk) begin
    sub_ln65_reg_1100[0] <= 1'b0;
    sub_ln65_9_reg_1126[0] <= 1'b0;
    zext_ln65_73_reg_1133[9:5] <= 5'b00000;
    zext_ln65_77_reg_1144[9:5] <= 5'b00000;
    zext_ln65_81_reg_1170[9:5] <= 5'b00000;
end

endmodule //cnn_convolution_3_Pipeline_conv_for_rows_win_for_rows_win_for_cols
