// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="convolutional_layer_convolutional_layer,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.241250,HLS_SYN_LAT=4003,HLS_SYN_TPT=4004,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=22960,HLS_SYN_LUT=18990,HLS_VERSION=2021_2}" *)

module convolutional_layer (
        ap_local_block,
        ap_local_deadlock,
        pad_img_address0,
        pad_img_ce0,
        pad_img_d0,
        pad_img_q0,
        pad_img_we0,
        pad_img_address1,
        pad_img_ce1,
        pad_img_d1,
        pad_img_q1,
        pad_img_we1,
        pad_img1_address0,
        pad_img1_ce0,
        pad_img1_d0,
        pad_img1_q0,
        pad_img1_we0,
        pad_img1_address1,
        pad_img1_ce1,
        pad_img1_d1,
        pad_img1_q1,
        pad_img1_we1,
        pad_img2_address0,
        pad_img2_ce0,
        pad_img2_d0,
        pad_img2_q0,
        pad_img2_we0,
        pad_img2_address1,
        pad_img2_ce1,
        pad_img2_d1,
        pad_img2_q1,
        pad_img2_we1,
        pad_img3_address0,
        pad_img3_ce0,
        pad_img3_d0,
        pad_img3_q0,
        pad_img3_we0,
        pad_img3_address1,
        pad_img3_ce1,
        pad_img3_d1,
        pad_img3_q1,
        pad_img3_we1,
        pad_img4_address0,
        pad_img4_ce0,
        pad_img4_d0,
        pad_img4_q0,
        pad_img4_we0,
        pad_img4_address1,
        pad_img4_ce1,
        pad_img4_d1,
        pad_img4_q1,
        pad_img4_we1,
        pad_img5_address0,
        pad_img5_ce0,
        pad_img5_d0,
        pad_img5_q0,
        pad_img5_we0,
        pad_img5_address1,
        pad_img5_ce1,
        pad_img5_d1,
        pad_img5_q1,
        pad_img5_we1,
        pad_img6_address0,
        pad_img6_ce0,
        pad_img6_d0,
        pad_img6_q0,
        pad_img6_we0,
        pad_img6_address1,
        pad_img6_ce1,
        pad_img6_d1,
        pad_img6_q1,
        pad_img6_we1,
        pad_img7_address0,
        pad_img7_ce0,
        pad_img7_d0,
        pad_img7_q0,
        pad_img7_we0,
        pad_img7_address1,
        pad_img7_ce1,
        pad_img7_d1,
        pad_img7_q1,
        pad_img7_we1,
        weight_buf_0_address0,
        weight_buf_0_ce0,
        weight_buf_0_d0,
        weight_buf_0_q0,
        weight_buf_0_we0,
        weight_buf_0_address1,
        weight_buf_0_ce1,
        weight_buf_0_d1,
        weight_buf_0_q1,
        weight_buf_0_we1,
        weight_buf_1_address0,
        weight_buf_1_ce0,
        weight_buf_1_d0,
        weight_buf_1_q0,
        weight_buf_1_we0,
        weight_buf_1_address1,
        weight_buf_1_ce1,
        weight_buf_1_d1,
        weight_buf_1_q1,
        weight_buf_1_we1,
        weight_buf_2_address0,
        weight_buf_2_ce0,
        weight_buf_2_d0,
        weight_buf_2_q0,
        weight_buf_2_we0,
        weight_buf_2_address1,
        weight_buf_2_ce1,
        weight_buf_2_d1,
        weight_buf_2_q1,
        weight_buf_2_we1,
        weight_buf_3_address0,
        weight_buf_3_ce0,
        weight_buf_3_d0,
        weight_buf_3_q0,
        weight_buf_3_we0,
        weight_buf_3_address1,
        weight_buf_3_ce1,
        weight_buf_3_d1,
        weight_buf_3_q1,
        weight_buf_3_we1,
        weight_buf_4_address0,
        weight_buf_4_ce0,
        weight_buf_4_d0,
        weight_buf_4_q0,
        weight_buf_4_we0,
        weight_buf_4_address1,
        weight_buf_4_ce1,
        weight_buf_4_d1,
        weight_buf_4_q1,
        weight_buf_4_we1,
        weight_buf_5_address0,
        weight_buf_5_ce0,
        weight_buf_5_d0,
        weight_buf_5_q0,
        weight_buf_5_we0,
        weight_buf_5_address1,
        weight_buf_5_ce1,
        weight_buf_5_d1,
        weight_buf_5_q1,
        weight_buf_5_we1,
        weight_buf_6_address0,
        weight_buf_6_ce0,
        weight_buf_6_d0,
        weight_buf_6_q0,
        weight_buf_6_we0,
        weight_buf_6_address1,
        weight_buf_6_ce1,
        weight_buf_6_d1,
        weight_buf_6_q1,
        weight_buf_6_we1,
        weight_buf_7_address0,
        weight_buf_7_ce0,
        weight_buf_7_d0,
        weight_buf_7_q0,
        weight_buf_7_we0,
        weight_buf_7_address1,
        weight_buf_7_ce1,
        weight_buf_7_d1,
        weight_buf_7_q1,
        weight_buf_7_we1,
        biases_buf_0,
        biases_buf_1,
        biases_buf_2,
        biases_buf_3,
        biases_buf_4,
        biases_buf_5,
        biases_buf_6,
        biases_buf_7,
        conv_to_pool_streams_0_din,
        conv_to_pool_streams_0_full_n,
        conv_to_pool_streams_0_write,
        conv_to_pool_streams_1_din,
        conv_to_pool_streams_1_full_n,
        conv_to_pool_streams_1_write,
        conv_to_pool_streams_2_din,
        conv_to_pool_streams_2_full_n,
        conv_to_pool_streams_2_write,
        conv_to_pool_streams_3_din,
        conv_to_pool_streams_3_full_n,
        conv_to_pool_streams_3_write,
        conv_to_pool_streams_4_din,
        conv_to_pool_streams_4_full_n,
        conv_to_pool_streams_4_write,
        conv_to_pool_streams_5_din,
        conv_to_pool_streams_5_full_n,
        conv_to_pool_streams_5_write,
        conv_to_pool_streams_6_din,
        conv_to_pool_streams_6_full_n,
        conv_to_pool_streams_6_write,
        conv_to_pool_streams_7_din,
        conv_to_pool_streams_7_full_n,
        conv_to_pool_streams_7_write,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle
);


output   ap_local_block;
output   ap_local_deadlock;
output  [9:0] pad_img_address0;
output   pad_img_ce0;
output  [31:0] pad_img_d0;
input  [31:0] pad_img_q0;
output   pad_img_we0;
output  [9:0] pad_img_address1;
output   pad_img_ce1;
output  [31:0] pad_img_d1;
input  [31:0] pad_img_q1;
output   pad_img_we1;
output  [9:0] pad_img1_address0;
output   pad_img1_ce0;
output  [31:0] pad_img1_d0;
input  [31:0] pad_img1_q0;
output   pad_img1_we0;
output  [9:0] pad_img1_address1;
output   pad_img1_ce1;
output  [31:0] pad_img1_d1;
input  [31:0] pad_img1_q1;
output   pad_img1_we1;
output  [9:0] pad_img2_address0;
output   pad_img2_ce0;
output  [31:0] pad_img2_d0;
input  [31:0] pad_img2_q0;
output   pad_img2_we0;
output  [9:0] pad_img2_address1;
output   pad_img2_ce1;
output  [31:0] pad_img2_d1;
input  [31:0] pad_img2_q1;
output   pad_img2_we1;
output  [9:0] pad_img3_address0;
output   pad_img3_ce0;
output  [31:0] pad_img3_d0;
input  [31:0] pad_img3_q0;
output   pad_img3_we0;
output  [9:0] pad_img3_address1;
output   pad_img3_ce1;
output  [31:0] pad_img3_d1;
input  [31:0] pad_img3_q1;
output   pad_img3_we1;
output  [9:0] pad_img4_address0;
output   pad_img4_ce0;
output  [31:0] pad_img4_d0;
input  [31:0] pad_img4_q0;
output   pad_img4_we0;
output  [9:0] pad_img4_address1;
output   pad_img4_ce1;
output  [31:0] pad_img4_d1;
input  [31:0] pad_img4_q1;
output   pad_img4_we1;
output  [9:0] pad_img5_address0;
output   pad_img5_ce0;
output  [31:0] pad_img5_d0;
input  [31:0] pad_img5_q0;
output   pad_img5_we0;
output  [9:0] pad_img5_address1;
output   pad_img5_ce1;
output  [31:0] pad_img5_d1;
input  [31:0] pad_img5_q1;
output   pad_img5_we1;
output  [9:0] pad_img6_address0;
output   pad_img6_ce0;
output  [31:0] pad_img6_d0;
input  [31:0] pad_img6_q0;
output   pad_img6_we0;
output  [9:0] pad_img6_address1;
output   pad_img6_ce1;
output  [31:0] pad_img6_d1;
input  [31:0] pad_img6_q1;
output   pad_img6_we1;
output  [9:0] pad_img7_address0;
output   pad_img7_ce0;
output  [31:0] pad_img7_d0;
input  [31:0] pad_img7_q0;
output   pad_img7_we0;
output  [9:0] pad_img7_address1;
output   pad_img7_ce1;
output  [31:0] pad_img7_d1;
input  [31:0] pad_img7_q1;
output   pad_img7_we1;
output  [3:0] weight_buf_0_address0;
output   weight_buf_0_ce0;
output  [31:0] weight_buf_0_d0;
input  [31:0] weight_buf_0_q0;
output   weight_buf_0_we0;
output  [3:0] weight_buf_0_address1;
output   weight_buf_0_ce1;
output  [31:0] weight_buf_0_d1;
input  [31:0] weight_buf_0_q1;
output   weight_buf_0_we1;
output  [3:0] weight_buf_1_address0;
output   weight_buf_1_ce0;
output  [31:0] weight_buf_1_d0;
input  [31:0] weight_buf_1_q0;
output   weight_buf_1_we0;
output  [3:0] weight_buf_1_address1;
output   weight_buf_1_ce1;
output  [31:0] weight_buf_1_d1;
input  [31:0] weight_buf_1_q1;
output   weight_buf_1_we1;
output  [3:0] weight_buf_2_address0;
output   weight_buf_2_ce0;
output  [31:0] weight_buf_2_d0;
input  [31:0] weight_buf_2_q0;
output   weight_buf_2_we0;
output  [3:0] weight_buf_2_address1;
output   weight_buf_2_ce1;
output  [31:0] weight_buf_2_d1;
input  [31:0] weight_buf_2_q1;
output   weight_buf_2_we1;
output  [3:0] weight_buf_3_address0;
output   weight_buf_3_ce0;
output  [31:0] weight_buf_3_d0;
input  [31:0] weight_buf_3_q0;
output   weight_buf_3_we0;
output  [3:0] weight_buf_3_address1;
output   weight_buf_3_ce1;
output  [31:0] weight_buf_3_d1;
input  [31:0] weight_buf_3_q1;
output   weight_buf_3_we1;
output  [3:0] weight_buf_4_address0;
output   weight_buf_4_ce0;
output  [31:0] weight_buf_4_d0;
input  [31:0] weight_buf_4_q0;
output   weight_buf_4_we0;
output  [3:0] weight_buf_4_address1;
output   weight_buf_4_ce1;
output  [31:0] weight_buf_4_d1;
input  [31:0] weight_buf_4_q1;
output   weight_buf_4_we1;
output  [3:0] weight_buf_5_address0;
output   weight_buf_5_ce0;
output  [31:0] weight_buf_5_d0;
input  [31:0] weight_buf_5_q0;
output   weight_buf_5_we0;
output  [3:0] weight_buf_5_address1;
output   weight_buf_5_ce1;
output  [31:0] weight_buf_5_d1;
input  [31:0] weight_buf_5_q1;
output   weight_buf_5_we1;
output  [3:0] weight_buf_6_address0;
output   weight_buf_6_ce0;
output  [31:0] weight_buf_6_d0;
input  [31:0] weight_buf_6_q0;
output   weight_buf_6_we0;
output  [3:0] weight_buf_6_address1;
output   weight_buf_6_ce1;
output  [31:0] weight_buf_6_d1;
input  [31:0] weight_buf_6_q1;
output   weight_buf_6_we1;
output  [3:0] weight_buf_7_address0;
output   weight_buf_7_ce0;
output  [31:0] weight_buf_7_d0;
input  [31:0] weight_buf_7_q0;
output   weight_buf_7_we0;
output  [3:0] weight_buf_7_address1;
output   weight_buf_7_ce1;
output  [31:0] weight_buf_7_d1;
input  [31:0] weight_buf_7_q1;
output   weight_buf_7_we1;
input  [31:0] biases_buf_0;
input  [31:0] biases_buf_1;
input  [31:0] biases_buf_2;
input  [31:0] biases_buf_3;
input  [31:0] biases_buf_4;
input  [31:0] biases_buf_5;
input  [31:0] biases_buf_6;
input  [31:0] biases_buf_7;
output  [31:0] conv_to_pool_streams_0_din;
input   conv_to_pool_streams_0_full_n;
output   conv_to_pool_streams_0_write;
output  [31:0] conv_to_pool_streams_1_din;
input   conv_to_pool_streams_1_full_n;
output   conv_to_pool_streams_1_write;
output  [31:0] conv_to_pool_streams_2_din;
input   conv_to_pool_streams_2_full_n;
output   conv_to_pool_streams_2_write;
output  [31:0] conv_to_pool_streams_3_din;
input   conv_to_pool_streams_3_full_n;
output   conv_to_pool_streams_3_write;
output  [31:0] conv_to_pool_streams_4_din;
input   conv_to_pool_streams_4_full_n;
output   conv_to_pool_streams_4_write;
output  [31:0] conv_to_pool_streams_5_din;
input   conv_to_pool_streams_5_full_n;
output   conv_to_pool_streams_5_write;
output  [31:0] conv_to_pool_streams_6_din;
input   conv_to_pool_streams_6_full_n;
output   conv_to_pool_streams_6_write;
output  [31:0] conv_to_pool_streams_7_din;
input   conv_to_pool_streams_7_full_n;
output   conv_to_pool_streams_7_write;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;

wire    convolution_U0_ap_start;
wire    convolution_U0_ap_done;
wire    convolution_U0_ap_continue;
wire    convolution_U0_ap_idle;
wire    convolution_U0_ap_ready;
wire   [9:0] convolution_U0_pad_img_address0;
wire    convolution_U0_pad_img_ce0;
wire   [9:0] convolution_U0_pad_img_address1;
wire    convolution_U0_pad_img_ce1;
wire   [3:0] convolution_U0_weight_buf_0_address0;
wire    convolution_U0_weight_buf_0_ce0;
wire   [3:0] convolution_U0_weight_buf_0_address1;
wire    convolution_U0_weight_buf_0_ce1;
wire   [31:0] convolution_U0_conv_to_pool_streams_0_din;
wire    convolution_U0_conv_to_pool_streams_0_write;
wire    convolution_1_U0_ap_start;
wire    convolution_1_U0_ap_done;
wire    convolution_1_U0_ap_continue;
wire    convolution_1_U0_ap_idle;
wire    convolution_1_U0_ap_ready;
wire   [9:0] convolution_1_U0_pad_img1_address0;
wire    convolution_1_U0_pad_img1_ce0;
wire   [9:0] convolution_1_U0_pad_img1_address1;
wire    convolution_1_U0_pad_img1_ce1;
wire   [3:0] convolution_1_U0_weight_buf_1_address0;
wire    convolution_1_U0_weight_buf_1_ce0;
wire   [3:0] convolution_1_U0_weight_buf_1_address1;
wire    convolution_1_U0_weight_buf_1_ce1;
wire   [31:0] convolution_1_U0_conv_to_pool_streams_1_din;
wire    convolution_1_U0_conv_to_pool_streams_1_write;
wire    convolution_2_U0_ap_start;
wire    convolution_2_U0_ap_done;
wire    convolution_2_U0_ap_continue;
wire    convolution_2_U0_ap_idle;
wire    convolution_2_U0_ap_ready;
wire   [9:0] convolution_2_U0_pad_img2_address0;
wire    convolution_2_U0_pad_img2_ce0;
wire   [9:0] convolution_2_U0_pad_img2_address1;
wire    convolution_2_U0_pad_img2_ce1;
wire   [3:0] convolution_2_U0_weight_buf_2_address0;
wire    convolution_2_U0_weight_buf_2_ce0;
wire   [3:0] convolution_2_U0_weight_buf_2_address1;
wire    convolution_2_U0_weight_buf_2_ce1;
wire   [31:0] convolution_2_U0_conv_to_pool_streams_2_din;
wire    convolution_2_U0_conv_to_pool_streams_2_write;
wire    convolution_3_U0_ap_start;
wire    convolution_3_U0_ap_done;
wire    convolution_3_U0_ap_continue;
wire    convolution_3_U0_ap_idle;
wire    convolution_3_U0_ap_ready;
wire   [9:0] convolution_3_U0_pad_img3_address0;
wire    convolution_3_U0_pad_img3_ce0;
wire   [9:0] convolution_3_U0_pad_img3_address1;
wire    convolution_3_U0_pad_img3_ce1;
wire   [3:0] convolution_3_U0_weight_buf_3_address0;
wire    convolution_3_U0_weight_buf_3_ce0;
wire   [3:0] convolution_3_U0_weight_buf_3_address1;
wire    convolution_3_U0_weight_buf_3_ce1;
wire   [31:0] convolution_3_U0_conv_to_pool_streams_3_din;
wire    convolution_3_U0_conv_to_pool_streams_3_write;
wire    convolution_4_U0_ap_start;
wire    convolution_4_U0_ap_done;
wire    convolution_4_U0_ap_continue;
wire    convolution_4_U0_ap_idle;
wire    convolution_4_U0_ap_ready;
wire   [9:0] convolution_4_U0_pad_img4_address0;
wire    convolution_4_U0_pad_img4_ce0;
wire   [9:0] convolution_4_U0_pad_img4_address1;
wire    convolution_4_U0_pad_img4_ce1;
wire   [3:0] convolution_4_U0_weight_buf_4_address0;
wire    convolution_4_U0_weight_buf_4_ce0;
wire   [3:0] convolution_4_U0_weight_buf_4_address1;
wire    convolution_4_U0_weight_buf_4_ce1;
wire   [31:0] convolution_4_U0_conv_to_pool_streams_4_din;
wire    convolution_4_U0_conv_to_pool_streams_4_write;
wire    convolution_5_U0_ap_start;
wire    convolution_5_U0_ap_done;
wire    convolution_5_U0_ap_continue;
wire    convolution_5_U0_ap_idle;
wire    convolution_5_U0_ap_ready;
wire   [9:0] convolution_5_U0_pad_img5_address0;
wire    convolution_5_U0_pad_img5_ce0;
wire   [9:0] convolution_5_U0_pad_img5_address1;
wire    convolution_5_U0_pad_img5_ce1;
wire   [3:0] convolution_5_U0_weight_buf_5_address0;
wire    convolution_5_U0_weight_buf_5_ce0;
wire   [3:0] convolution_5_U0_weight_buf_5_address1;
wire    convolution_5_U0_weight_buf_5_ce1;
wire   [31:0] convolution_5_U0_conv_to_pool_streams_5_din;
wire    convolution_5_U0_conv_to_pool_streams_5_write;
wire    convolution_6_U0_ap_start;
wire    convolution_6_U0_ap_done;
wire    convolution_6_U0_ap_continue;
wire    convolution_6_U0_ap_idle;
wire    convolution_6_U0_ap_ready;
wire   [9:0] convolution_6_U0_pad_img6_address0;
wire    convolution_6_U0_pad_img6_ce0;
wire   [9:0] convolution_6_U0_pad_img6_address1;
wire    convolution_6_U0_pad_img6_ce1;
wire   [3:0] convolution_6_U0_weight_buf_6_address0;
wire    convolution_6_U0_weight_buf_6_ce0;
wire   [3:0] convolution_6_U0_weight_buf_6_address1;
wire    convolution_6_U0_weight_buf_6_ce1;
wire   [31:0] convolution_6_U0_conv_to_pool_streams_6_din;
wire    convolution_6_U0_conv_to_pool_streams_6_write;
wire    convolution_7_U0_ap_start;
wire    convolution_7_U0_ap_done;
wire    convolution_7_U0_ap_continue;
wire    convolution_7_U0_ap_idle;
wire    convolution_7_U0_ap_ready;
wire   [9:0] convolution_7_U0_pad_img7_address0;
wire    convolution_7_U0_pad_img7_ce0;
wire   [9:0] convolution_7_U0_pad_img7_address1;
wire    convolution_7_U0_pad_img7_ce1;
wire   [3:0] convolution_7_U0_weight_buf_7_address0;
wire    convolution_7_U0_weight_buf_7_ce0;
wire   [3:0] convolution_7_U0_weight_buf_7_address1;
wire    convolution_7_U0_weight_buf_7_ce1;
wire   [31:0] convolution_7_U0_conv_to_pool_streams_7_din;
wire    convolution_7_U0_conv_to_pool_streams_7_write;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_convolution_U0_ap_ready;
wire    ap_sync_convolution_U0_ap_ready;
reg    ap_sync_reg_convolution_1_U0_ap_ready;
wire    ap_sync_convolution_1_U0_ap_ready;
reg    ap_sync_reg_convolution_2_U0_ap_ready;
wire    ap_sync_convolution_2_U0_ap_ready;
reg    ap_sync_reg_convolution_3_U0_ap_ready;
wire    ap_sync_convolution_3_U0_ap_ready;
reg    ap_sync_reg_convolution_4_U0_ap_ready;
wire    ap_sync_convolution_4_U0_ap_ready;
reg    ap_sync_reg_convolution_5_U0_ap_ready;
wire    ap_sync_convolution_5_U0_ap_ready;
reg    ap_sync_reg_convolution_6_U0_ap_ready;
wire    ap_sync_convolution_6_U0_ap_ready;
reg    ap_sync_reg_convolution_7_U0_ap_ready;
wire    ap_sync_convolution_7_U0_ap_ready;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_convolution_U0_ap_ready = 1'b0;
#0 ap_sync_reg_convolution_1_U0_ap_ready = 1'b0;
#0 ap_sync_reg_convolution_2_U0_ap_ready = 1'b0;
#0 ap_sync_reg_convolution_3_U0_ap_ready = 1'b0;
#0 ap_sync_reg_convolution_4_U0_ap_ready = 1'b0;
#0 ap_sync_reg_convolution_5_U0_ap_ready = 1'b0;
#0 ap_sync_reg_convolution_6_U0_ap_ready = 1'b0;
#0 ap_sync_reg_convolution_7_U0_ap_ready = 1'b0;
end

convolutional_layer_convolution convolution_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(convolution_U0_ap_start),
    .ap_done(convolution_U0_ap_done),
    .ap_continue(convolution_U0_ap_continue),
    .ap_idle(convolution_U0_ap_idle),
    .ap_ready(convolution_U0_ap_ready),
    .pad_img_address0(convolution_U0_pad_img_address0),
    .pad_img_ce0(convolution_U0_pad_img_ce0),
    .pad_img_q0(pad_img_q0),
    .pad_img_address1(convolution_U0_pad_img_address1),
    .pad_img_ce1(convolution_U0_pad_img_ce1),
    .pad_img_q1(pad_img_q1),
    .weight_buf_0_address0(convolution_U0_weight_buf_0_address0),
    .weight_buf_0_ce0(convolution_U0_weight_buf_0_ce0),
    .weight_buf_0_q0(weight_buf_0_q0),
    .weight_buf_0_address1(convolution_U0_weight_buf_0_address1),
    .weight_buf_0_ce1(convolution_U0_weight_buf_0_ce1),
    .weight_buf_0_q1(weight_buf_0_q1),
    .biases_buf(biases_buf_0),
    .conv_to_pool_streams_0_din(convolution_U0_conv_to_pool_streams_0_din),
    .conv_to_pool_streams_0_full_n(conv_to_pool_streams_0_full_n),
    .conv_to_pool_streams_0_write(convolution_U0_conv_to_pool_streams_0_write)
);

convolutional_layer_convolution_1 convolution_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(convolution_1_U0_ap_start),
    .ap_done(convolution_1_U0_ap_done),
    .ap_continue(convolution_1_U0_ap_continue),
    .ap_idle(convolution_1_U0_ap_idle),
    .ap_ready(convolution_1_U0_ap_ready),
    .pad_img1_address0(convolution_1_U0_pad_img1_address0),
    .pad_img1_ce0(convolution_1_U0_pad_img1_ce0),
    .pad_img1_q0(pad_img1_q0),
    .pad_img1_address1(convolution_1_U0_pad_img1_address1),
    .pad_img1_ce1(convolution_1_U0_pad_img1_ce1),
    .pad_img1_q1(pad_img1_q1),
    .weight_buf_1_address0(convolution_1_U0_weight_buf_1_address0),
    .weight_buf_1_ce0(convolution_1_U0_weight_buf_1_ce0),
    .weight_buf_1_q0(weight_buf_1_q0),
    .weight_buf_1_address1(convolution_1_U0_weight_buf_1_address1),
    .weight_buf_1_ce1(convolution_1_U0_weight_buf_1_ce1),
    .weight_buf_1_q1(weight_buf_1_q1),
    .biases_buf(biases_buf_1),
    .conv_to_pool_streams_1_din(convolution_1_U0_conv_to_pool_streams_1_din),
    .conv_to_pool_streams_1_full_n(conv_to_pool_streams_1_full_n),
    .conv_to_pool_streams_1_write(convolution_1_U0_conv_to_pool_streams_1_write)
);

convolutional_layer_convolution_2 convolution_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(convolution_2_U0_ap_start),
    .ap_done(convolution_2_U0_ap_done),
    .ap_continue(convolution_2_U0_ap_continue),
    .ap_idle(convolution_2_U0_ap_idle),
    .ap_ready(convolution_2_U0_ap_ready),
    .pad_img2_address0(convolution_2_U0_pad_img2_address0),
    .pad_img2_ce0(convolution_2_U0_pad_img2_ce0),
    .pad_img2_q0(pad_img2_q0),
    .pad_img2_address1(convolution_2_U0_pad_img2_address1),
    .pad_img2_ce1(convolution_2_U0_pad_img2_ce1),
    .pad_img2_q1(pad_img2_q1),
    .weight_buf_2_address0(convolution_2_U0_weight_buf_2_address0),
    .weight_buf_2_ce0(convolution_2_U0_weight_buf_2_ce0),
    .weight_buf_2_q0(weight_buf_2_q0),
    .weight_buf_2_address1(convolution_2_U0_weight_buf_2_address1),
    .weight_buf_2_ce1(convolution_2_U0_weight_buf_2_ce1),
    .weight_buf_2_q1(weight_buf_2_q1),
    .biases_buf(biases_buf_2),
    .conv_to_pool_streams_2_din(convolution_2_U0_conv_to_pool_streams_2_din),
    .conv_to_pool_streams_2_full_n(conv_to_pool_streams_2_full_n),
    .conv_to_pool_streams_2_write(convolution_2_U0_conv_to_pool_streams_2_write)
);

convolutional_layer_convolution_3 convolution_3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(convolution_3_U0_ap_start),
    .ap_done(convolution_3_U0_ap_done),
    .ap_continue(convolution_3_U0_ap_continue),
    .ap_idle(convolution_3_U0_ap_idle),
    .ap_ready(convolution_3_U0_ap_ready),
    .pad_img3_address0(convolution_3_U0_pad_img3_address0),
    .pad_img3_ce0(convolution_3_U0_pad_img3_ce0),
    .pad_img3_q0(pad_img3_q0),
    .pad_img3_address1(convolution_3_U0_pad_img3_address1),
    .pad_img3_ce1(convolution_3_U0_pad_img3_ce1),
    .pad_img3_q1(pad_img3_q1),
    .weight_buf_3_address0(convolution_3_U0_weight_buf_3_address0),
    .weight_buf_3_ce0(convolution_3_U0_weight_buf_3_ce0),
    .weight_buf_3_q0(weight_buf_3_q0),
    .weight_buf_3_address1(convolution_3_U0_weight_buf_3_address1),
    .weight_buf_3_ce1(convolution_3_U0_weight_buf_3_ce1),
    .weight_buf_3_q1(weight_buf_3_q1),
    .biases_buf(biases_buf_3),
    .conv_to_pool_streams_3_din(convolution_3_U0_conv_to_pool_streams_3_din),
    .conv_to_pool_streams_3_full_n(conv_to_pool_streams_3_full_n),
    .conv_to_pool_streams_3_write(convolution_3_U0_conv_to_pool_streams_3_write)
);

convolutional_layer_convolution_4 convolution_4_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(convolution_4_U0_ap_start),
    .ap_done(convolution_4_U0_ap_done),
    .ap_continue(convolution_4_U0_ap_continue),
    .ap_idle(convolution_4_U0_ap_idle),
    .ap_ready(convolution_4_U0_ap_ready),
    .pad_img4_address0(convolution_4_U0_pad_img4_address0),
    .pad_img4_ce0(convolution_4_U0_pad_img4_ce0),
    .pad_img4_q0(pad_img4_q0),
    .pad_img4_address1(convolution_4_U0_pad_img4_address1),
    .pad_img4_ce1(convolution_4_U0_pad_img4_ce1),
    .pad_img4_q1(pad_img4_q1),
    .weight_buf_4_address0(convolution_4_U0_weight_buf_4_address0),
    .weight_buf_4_ce0(convolution_4_U0_weight_buf_4_ce0),
    .weight_buf_4_q0(weight_buf_4_q0),
    .weight_buf_4_address1(convolution_4_U0_weight_buf_4_address1),
    .weight_buf_4_ce1(convolution_4_U0_weight_buf_4_ce1),
    .weight_buf_4_q1(weight_buf_4_q1),
    .biases_buf(biases_buf_4),
    .conv_to_pool_streams_4_din(convolution_4_U0_conv_to_pool_streams_4_din),
    .conv_to_pool_streams_4_full_n(conv_to_pool_streams_4_full_n),
    .conv_to_pool_streams_4_write(convolution_4_U0_conv_to_pool_streams_4_write)
);

convolutional_layer_convolution_5 convolution_5_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(convolution_5_U0_ap_start),
    .ap_done(convolution_5_U0_ap_done),
    .ap_continue(convolution_5_U0_ap_continue),
    .ap_idle(convolution_5_U0_ap_idle),
    .ap_ready(convolution_5_U0_ap_ready),
    .pad_img5_address0(convolution_5_U0_pad_img5_address0),
    .pad_img5_ce0(convolution_5_U0_pad_img5_ce0),
    .pad_img5_q0(pad_img5_q0),
    .pad_img5_address1(convolution_5_U0_pad_img5_address1),
    .pad_img5_ce1(convolution_5_U0_pad_img5_ce1),
    .pad_img5_q1(pad_img5_q1),
    .weight_buf_5_address0(convolution_5_U0_weight_buf_5_address0),
    .weight_buf_5_ce0(convolution_5_U0_weight_buf_5_ce0),
    .weight_buf_5_q0(weight_buf_5_q0),
    .weight_buf_5_address1(convolution_5_U0_weight_buf_5_address1),
    .weight_buf_5_ce1(convolution_5_U0_weight_buf_5_ce1),
    .weight_buf_5_q1(weight_buf_5_q1),
    .biases_buf(biases_buf_5),
    .conv_to_pool_streams_5_din(convolution_5_U0_conv_to_pool_streams_5_din),
    .conv_to_pool_streams_5_full_n(conv_to_pool_streams_5_full_n),
    .conv_to_pool_streams_5_write(convolution_5_U0_conv_to_pool_streams_5_write)
);

convolutional_layer_convolution_6 convolution_6_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(convolution_6_U0_ap_start),
    .ap_done(convolution_6_U0_ap_done),
    .ap_continue(convolution_6_U0_ap_continue),
    .ap_idle(convolution_6_U0_ap_idle),
    .ap_ready(convolution_6_U0_ap_ready),
    .pad_img6_address0(convolution_6_U0_pad_img6_address0),
    .pad_img6_ce0(convolution_6_U0_pad_img6_ce0),
    .pad_img6_q0(pad_img6_q0),
    .pad_img6_address1(convolution_6_U0_pad_img6_address1),
    .pad_img6_ce1(convolution_6_U0_pad_img6_ce1),
    .pad_img6_q1(pad_img6_q1),
    .weight_buf_6_address0(convolution_6_U0_weight_buf_6_address0),
    .weight_buf_6_ce0(convolution_6_U0_weight_buf_6_ce0),
    .weight_buf_6_q0(weight_buf_6_q0),
    .weight_buf_6_address1(convolution_6_U0_weight_buf_6_address1),
    .weight_buf_6_ce1(convolution_6_U0_weight_buf_6_ce1),
    .weight_buf_6_q1(weight_buf_6_q1),
    .biases_buf(biases_buf_6),
    .conv_to_pool_streams_6_din(convolution_6_U0_conv_to_pool_streams_6_din),
    .conv_to_pool_streams_6_full_n(conv_to_pool_streams_6_full_n),
    .conv_to_pool_streams_6_write(convolution_6_U0_conv_to_pool_streams_6_write)
);

convolutional_layer_convolution_7 convolution_7_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(convolution_7_U0_ap_start),
    .ap_done(convolution_7_U0_ap_done),
    .ap_continue(convolution_7_U0_ap_continue),
    .ap_idle(convolution_7_U0_ap_idle),
    .ap_ready(convolution_7_U0_ap_ready),
    .pad_img7_address0(convolution_7_U0_pad_img7_address0),
    .pad_img7_ce0(convolution_7_U0_pad_img7_ce0),
    .pad_img7_q0(pad_img7_q0),
    .pad_img7_address1(convolution_7_U0_pad_img7_address1),
    .pad_img7_ce1(convolution_7_U0_pad_img7_ce1),
    .pad_img7_q1(pad_img7_q1),
    .weight_buf_7_address0(convolution_7_U0_weight_buf_7_address0),
    .weight_buf_7_ce0(convolution_7_U0_weight_buf_7_ce0),
    .weight_buf_7_q0(weight_buf_7_q0),
    .weight_buf_7_address1(convolution_7_U0_weight_buf_7_address1),
    .weight_buf_7_ce1(convolution_7_U0_weight_buf_7_ce1),
    .weight_buf_7_q1(weight_buf_7_q1),
    .biases_buf(biases_buf_7),
    .conv_to_pool_streams_7_din(convolution_7_U0_conv_to_pool_streams_7_din),
    .conv_to_pool_streams_7_full_n(conv_to_pool_streams_7_full_n),
    .conv_to_pool_streams_7_write(convolution_7_U0_conv_to_pool_streams_7_write)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_convolution_1_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_convolution_1_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_convolution_1_U0_ap_ready <= ap_sync_convolution_1_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_convolution_2_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_convolution_2_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_convolution_2_U0_ap_ready <= ap_sync_convolution_2_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_convolution_3_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_convolution_3_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_convolution_3_U0_ap_ready <= ap_sync_convolution_3_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_convolution_4_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_convolution_4_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_convolution_4_U0_ap_ready <= ap_sync_convolution_4_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_convolution_5_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_convolution_5_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_convolution_5_U0_ap_ready <= ap_sync_convolution_5_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_convolution_6_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_convolution_6_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_convolution_6_U0_ap_ready <= ap_sync_convolution_6_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_convolution_7_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_convolution_7_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_convolution_7_U0_ap_ready <= ap_sync_convolution_7_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_convolution_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_convolution_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_convolution_U0_ap_ready <= ap_sync_convolution_U0_ap_ready;
        end
    end
end

assign ap_done = ap_sync_done;

assign ap_idle = (convolution_U0_ap_idle & convolution_7_U0_ap_idle & convolution_6_U0_ap_idle & convolution_5_U0_ap_idle & convolution_4_U0_ap_idle & convolution_3_U0_ap_idle & convolution_2_U0_ap_idle & convolution_1_U0_ap_idle);

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'b0;

assign ap_ready = ap_sync_ready;

assign ap_sync_convolution_1_U0_ap_ready = (convolution_1_U0_ap_ready | ap_sync_reg_convolution_1_U0_ap_ready);

assign ap_sync_convolution_2_U0_ap_ready = (convolution_2_U0_ap_ready | ap_sync_reg_convolution_2_U0_ap_ready);

assign ap_sync_convolution_3_U0_ap_ready = (convolution_3_U0_ap_ready | ap_sync_reg_convolution_3_U0_ap_ready);

assign ap_sync_convolution_4_U0_ap_ready = (convolution_4_U0_ap_ready | ap_sync_reg_convolution_4_U0_ap_ready);

assign ap_sync_convolution_5_U0_ap_ready = (convolution_5_U0_ap_ready | ap_sync_reg_convolution_5_U0_ap_ready);

assign ap_sync_convolution_6_U0_ap_ready = (convolution_6_U0_ap_ready | ap_sync_reg_convolution_6_U0_ap_ready);

assign ap_sync_convolution_7_U0_ap_ready = (convolution_7_U0_ap_ready | ap_sync_reg_convolution_7_U0_ap_ready);

assign ap_sync_convolution_U0_ap_ready = (convolution_U0_ap_ready | ap_sync_reg_convolution_U0_ap_ready);

assign ap_sync_done = (convolution_U0_ap_done & convolution_7_U0_ap_done & convolution_6_U0_ap_done & convolution_5_U0_ap_done & convolution_4_U0_ap_done & convolution_3_U0_ap_done & convolution_2_U0_ap_done & convolution_1_U0_ap_done);

assign ap_sync_ready = (ap_sync_convolution_U0_ap_ready & ap_sync_convolution_7_U0_ap_ready & ap_sync_convolution_6_U0_ap_ready & ap_sync_convolution_5_U0_ap_ready & ap_sync_convolution_4_U0_ap_ready & ap_sync_convolution_3_U0_ap_ready & ap_sync_convolution_2_U0_ap_ready & ap_sync_convolution_1_U0_ap_ready);

assign conv_to_pool_streams_0_din = convolution_U0_conv_to_pool_streams_0_din;

assign conv_to_pool_streams_0_write = convolution_U0_conv_to_pool_streams_0_write;

assign conv_to_pool_streams_1_din = convolution_1_U0_conv_to_pool_streams_1_din;

assign conv_to_pool_streams_1_write = convolution_1_U0_conv_to_pool_streams_1_write;

assign conv_to_pool_streams_2_din = convolution_2_U0_conv_to_pool_streams_2_din;

assign conv_to_pool_streams_2_write = convolution_2_U0_conv_to_pool_streams_2_write;

assign conv_to_pool_streams_3_din = convolution_3_U0_conv_to_pool_streams_3_din;

assign conv_to_pool_streams_3_write = convolution_3_U0_conv_to_pool_streams_3_write;

assign conv_to_pool_streams_4_din = convolution_4_U0_conv_to_pool_streams_4_din;

assign conv_to_pool_streams_4_write = convolution_4_U0_conv_to_pool_streams_4_write;

assign conv_to_pool_streams_5_din = convolution_5_U0_conv_to_pool_streams_5_din;

assign conv_to_pool_streams_5_write = convolution_5_U0_conv_to_pool_streams_5_write;

assign conv_to_pool_streams_6_din = convolution_6_U0_conv_to_pool_streams_6_din;

assign conv_to_pool_streams_6_write = convolution_6_U0_conv_to_pool_streams_6_write;

assign conv_to_pool_streams_7_din = convolution_7_U0_conv_to_pool_streams_7_din;

assign conv_to_pool_streams_7_write = convolution_7_U0_conv_to_pool_streams_7_write;

assign convolution_1_U0_ap_continue = ap_sync_done;

assign convolution_1_U0_ap_start = ((ap_sync_reg_convolution_1_U0_ap_ready ^ 1'b1) & ap_start);

assign convolution_2_U0_ap_continue = ap_sync_done;

assign convolution_2_U0_ap_start = ((ap_sync_reg_convolution_2_U0_ap_ready ^ 1'b1) & ap_start);

assign convolution_3_U0_ap_continue = ap_sync_done;

assign convolution_3_U0_ap_start = ((ap_sync_reg_convolution_3_U0_ap_ready ^ 1'b1) & ap_start);

assign convolution_4_U0_ap_continue = ap_sync_done;

assign convolution_4_U0_ap_start = ((ap_sync_reg_convolution_4_U0_ap_ready ^ 1'b1) & ap_start);

assign convolution_5_U0_ap_continue = ap_sync_done;

assign convolution_5_U0_ap_start = ((ap_sync_reg_convolution_5_U0_ap_ready ^ 1'b1) & ap_start);

assign convolution_6_U0_ap_continue = ap_sync_done;

assign convolution_6_U0_ap_start = ((ap_sync_reg_convolution_6_U0_ap_ready ^ 1'b1) & ap_start);

assign convolution_7_U0_ap_continue = ap_sync_done;

assign convolution_7_U0_ap_start = ((ap_sync_reg_convolution_7_U0_ap_ready ^ 1'b1) & ap_start);

assign convolution_U0_ap_continue = ap_sync_done;

assign convolution_U0_ap_start = ((ap_sync_reg_convolution_U0_ap_ready ^ 1'b1) & ap_start);

assign pad_img1_address0 = convolution_1_U0_pad_img1_address0;

assign pad_img1_address1 = convolution_1_U0_pad_img1_address1;

assign pad_img1_ce0 = convolution_1_U0_pad_img1_ce0;

assign pad_img1_ce1 = convolution_1_U0_pad_img1_ce1;

assign pad_img1_d0 = 32'd0;

assign pad_img1_d1 = 32'd0;

assign pad_img1_we0 = 1'b0;

assign pad_img1_we1 = 1'b0;

assign pad_img2_address0 = convolution_2_U0_pad_img2_address0;

assign pad_img2_address1 = convolution_2_U0_pad_img2_address1;

assign pad_img2_ce0 = convolution_2_U0_pad_img2_ce0;

assign pad_img2_ce1 = convolution_2_U0_pad_img2_ce1;

assign pad_img2_d0 = 32'd0;

assign pad_img2_d1 = 32'd0;

assign pad_img2_we0 = 1'b0;

assign pad_img2_we1 = 1'b0;

assign pad_img3_address0 = convolution_3_U0_pad_img3_address0;

assign pad_img3_address1 = convolution_3_U0_pad_img3_address1;

assign pad_img3_ce0 = convolution_3_U0_pad_img3_ce0;

assign pad_img3_ce1 = convolution_3_U0_pad_img3_ce1;

assign pad_img3_d0 = 32'd0;

assign pad_img3_d1 = 32'd0;

assign pad_img3_we0 = 1'b0;

assign pad_img3_we1 = 1'b0;

assign pad_img4_address0 = convolution_4_U0_pad_img4_address0;

assign pad_img4_address1 = convolution_4_U0_pad_img4_address1;

assign pad_img4_ce0 = convolution_4_U0_pad_img4_ce0;

assign pad_img4_ce1 = convolution_4_U0_pad_img4_ce1;

assign pad_img4_d0 = 32'd0;

assign pad_img4_d1 = 32'd0;

assign pad_img4_we0 = 1'b0;

assign pad_img4_we1 = 1'b0;

assign pad_img5_address0 = convolution_5_U0_pad_img5_address0;

assign pad_img5_address1 = convolution_5_U0_pad_img5_address1;

assign pad_img5_ce0 = convolution_5_U0_pad_img5_ce0;

assign pad_img5_ce1 = convolution_5_U0_pad_img5_ce1;

assign pad_img5_d0 = 32'd0;

assign pad_img5_d1 = 32'd0;

assign pad_img5_we0 = 1'b0;

assign pad_img5_we1 = 1'b0;

assign pad_img6_address0 = convolution_6_U0_pad_img6_address0;

assign pad_img6_address1 = convolution_6_U0_pad_img6_address1;

assign pad_img6_ce0 = convolution_6_U0_pad_img6_ce0;

assign pad_img6_ce1 = convolution_6_U0_pad_img6_ce1;

assign pad_img6_d0 = 32'd0;

assign pad_img6_d1 = 32'd0;

assign pad_img6_we0 = 1'b0;

assign pad_img6_we1 = 1'b0;

assign pad_img7_address0 = convolution_7_U0_pad_img7_address0;

assign pad_img7_address1 = convolution_7_U0_pad_img7_address1;

assign pad_img7_ce0 = convolution_7_U0_pad_img7_ce0;

assign pad_img7_ce1 = convolution_7_U0_pad_img7_ce1;

assign pad_img7_d0 = 32'd0;

assign pad_img7_d1 = 32'd0;

assign pad_img7_we0 = 1'b0;

assign pad_img7_we1 = 1'b0;

assign pad_img_address0 = convolution_U0_pad_img_address0;

assign pad_img_address1 = convolution_U0_pad_img_address1;

assign pad_img_ce0 = convolution_U0_pad_img_ce0;

assign pad_img_ce1 = convolution_U0_pad_img_ce1;

assign pad_img_d0 = 32'd0;

assign pad_img_d1 = 32'd0;

assign pad_img_we0 = 1'b0;

assign pad_img_we1 = 1'b0;

assign weight_buf_0_address0 = convolution_U0_weight_buf_0_address0;

assign weight_buf_0_address1 = convolution_U0_weight_buf_0_address1;

assign weight_buf_0_ce0 = convolution_U0_weight_buf_0_ce0;

assign weight_buf_0_ce1 = convolution_U0_weight_buf_0_ce1;

assign weight_buf_0_d0 = 32'd0;

assign weight_buf_0_d1 = 32'd0;

assign weight_buf_0_we0 = 1'b0;

assign weight_buf_0_we1 = 1'b0;

assign weight_buf_1_address0 = convolution_1_U0_weight_buf_1_address0;

assign weight_buf_1_address1 = convolution_1_U0_weight_buf_1_address1;

assign weight_buf_1_ce0 = convolution_1_U0_weight_buf_1_ce0;

assign weight_buf_1_ce1 = convolution_1_U0_weight_buf_1_ce1;

assign weight_buf_1_d0 = 32'd0;

assign weight_buf_1_d1 = 32'd0;

assign weight_buf_1_we0 = 1'b0;

assign weight_buf_1_we1 = 1'b0;

assign weight_buf_2_address0 = convolution_2_U0_weight_buf_2_address0;

assign weight_buf_2_address1 = convolution_2_U0_weight_buf_2_address1;

assign weight_buf_2_ce0 = convolution_2_U0_weight_buf_2_ce0;

assign weight_buf_2_ce1 = convolution_2_U0_weight_buf_2_ce1;

assign weight_buf_2_d0 = 32'd0;

assign weight_buf_2_d1 = 32'd0;

assign weight_buf_2_we0 = 1'b0;

assign weight_buf_2_we1 = 1'b0;

assign weight_buf_3_address0 = convolution_3_U0_weight_buf_3_address0;

assign weight_buf_3_address1 = convolution_3_U0_weight_buf_3_address1;

assign weight_buf_3_ce0 = convolution_3_U0_weight_buf_3_ce0;

assign weight_buf_3_ce1 = convolution_3_U0_weight_buf_3_ce1;

assign weight_buf_3_d0 = 32'd0;

assign weight_buf_3_d1 = 32'd0;

assign weight_buf_3_we0 = 1'b0;

assign weight_buf_3_we1 = 1'b0;

assign weight_buf_4_address0 = convolution_4_U0_weight_buf_4_address0;

assign weight_buf_4_address1 = convolution_4_U0_weight_buf_4_address1;

assign weight_buf_4_ce0 = convolution_4_U0_weight_buf_4_ce0;

assign weight_buf_4_ce1 = convolution_4_U0_weight_buf_4_ce1;

assign weight_buf_4_d0 = 32'd0;

assign weight_buf_4_d1 = 32'd0;

assign weight_buf_4_we0 = 1'b0;

assign weight_buf_4_we1 = 1'b0;

assign weight_buf_5_address0 = convolution_5_U0_weight_buf_5_address0;

assign weight_buf_5_address1 = convolution_5_U0_weight_buf_5_address1;

assign weight_buf_5_ce0 = convolution_5_U0_weight_buf_5_ce0;

assign weight_buf_5_ce1 = convolution_5_U0_weight_buf_5_ce1;

assign weight_buf_5_d0 = 32'd0;

assign weight_buf_5_d1 = 32'd0;

assign weight_buf_5_we0 = 1'b0;

assign weight_buf_5_we1 = 1'b0;

assign weight_buf_6_address0 = convolution_6_U0_weight_buf_6_address0;

assign weight_buf_6_address1 = convolution_6_U0_weight_buf_6_address1;

assign weight_buf_6_ce0 = convolution_6_U0_weight_buf_6_ce0;

assign weight_buf_6_ce1 = convolution_6_U0_weight_buf_6_ce1;

assign weight_buf_6_d0 = 32'd0;

assign weight_buf_6_d1 = 32'd0;

assign weight_buf_6_we0 = 1'b0;

assign weight_buf_6_we1 = 1'b0;

assign weight_buf_7_address0 = convolution_7_U0_weight_buf_7_address0;

assign weight_buf_7_address1 = convolution_7_U0_weight_buf_7_address1;

assign weight_buf_7_ce0 = convolution_7_U0_weight_buf_7_ce0;

assign weight_buf_7_ce1 = convolution_7_U0_weight_buf_7_ce1;

assign weight_buf_7_d0 = 32'd0;

assign weight_buf_7_d1 = 32'd0;

assign weight_buf_7_we0 = 1'b0;

assign weight_buf_7_we1 = 1'b0;

endmodule //convolutional_layer
