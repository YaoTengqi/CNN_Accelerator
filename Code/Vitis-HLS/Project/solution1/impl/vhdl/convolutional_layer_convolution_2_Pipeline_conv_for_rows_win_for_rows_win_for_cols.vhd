-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity convolutional_layer_convolution_2_Pipeline_conv_for_rows_win_for_rows_win_for_cols is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    pad_img2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce0 : OUT STD_LOGIC;
    pad_img2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce1 : OUT STD_LOGIC;
    pad_img2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    w : IN STD_LOGIC_VECTOR (31 downto 0);
    w_41 : IN STD_LOGIC_VECTOR (31 downto 0);
    w_42 : IN STD_LOGIC_VECTOR (31 downto 0);
    w_43 : IN STD_LOGIC_VECTOR (31 downto 0);
    w_44 : IN STD_LOGIC_VECTOR (31 downto 0);
    w_45 : IN STD_LOGIC_VECTOR (31 downto 0);
    w_46 : IN STD_LOGIC_VECTOR (31 downto 0);
    w_47 : IN STD_LOGIC_VECTOR (31 downto 0);
    w_48 : IN STD_LOGIC_VECTOR (31 downto 0);
    biases_buf : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_2_full_n : IN STD_LOGIC;
    conv_to_pool_streams_2_write : OUT STD_LOGIC );
end;


architecture behav of convolutional_layer_convolution_2_Pipeline_conv_for_rows_win_for_rows_win_for_cols is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv10_310 : STD_LOGIC_VECTOR (9 downto 0) := "1100010000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv7_38 : STD_LOGIC_VECTOR (6 downto 0) := "0111000";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state15_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state20_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state25_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state30_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_state35_pp0_stage4_iter6 : BOOLEAN;
    signal ap_block_state40_pp0_stage4_iter7 : BOOLEAN;
    signal ap_block_state45_pp0_stage4_iter8 : BOOLEAN;
    signal ap_block_state50_pp0_stage4_iter9 : BOOLEAN;
    signal ap_block_state55_pp0_stage4_iter10 : BOOLEAN;
    signal ap_block_state60_pp0_stage4_iter11 : BOOLEAN;
    signal ap_block_state65_pp0_stage4_iter12 : BOOLEAN;
    signal ap_block_state70_pp0_stage4_iter13 : BOOLEAN;
    signal ap_block_state75_pp0_stage4_iter14 : BOOLEAN;
    signal ap_block_state80_pp0_stage4_iter15 : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal icmp_ln37_reg_1111 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage4 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal conv_to_pool_streams_2_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal reg_314 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state14_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state19_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state24_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state29_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state34_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state39_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_state44_pp0_stage3_iter8 : BOOLEAN;
    signal ap_block_state49_pp0_stage3_iter9 : BOOLEAN;
    signal ap_block_state54_pp0_stage3_iter10 : BOOLEAN;
    signal ap_block_state59_pp0_stage3_iter11 : BOOLEAN;
    signal ap_block_state64_pp0_stage3_iter12 : BOOLEAN;
    signal ap_block_state69_pp0_stage3_iter13 : BOOLEAN;
    signal ap_block_state74_pp0_stage3_iter14 : BOOLEAN;
    signal ap_block_state79_pp0_stage3_iter15 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state36_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state46_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state51_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state56_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state61_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state66_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state71_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state76_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state81_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state17_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state27_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state32_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state37_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state42_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state47_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state52_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_state57_pp0_stage1_iter11 : BOOLEAN;
    signal ap_block_state62_pp0_stage1_iter12 : BOOLEAN;
    signal ap_block_state67_pp0_stage1_iter13 : BOOLEAN;
    signal ap_block_state72_pp0_stage1_iter14 : BOOLEAN;
    signal ap_block_state77_pp0_stage1_iter15 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state18_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state23_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state28_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state33_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state38_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state43_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_state48_pp0_stage2_iter9 : BOOLEAN;
    signal ap_block_state53_pp0_stage2_iter10 : BOOLEAN;
    signal ap_block_state58_pp0_stage2_iter11 : BOOLEAN;
    signal ap_block_state63_pp0_stage2_iter12 : BOOLEAN;
    signal ap_block_state68_pp0_stage2_iter13 : BOOLEAN;
    signal ap_block_state73_pp0_stage2_iter14 : BOOLEAN;
    signal ap_block_state78_pp0_stage2_iter15 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal reg_319 : STD_LOGIC_VECTOR (31 downto 0);
    signal wr_7_reg_1098 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_7_reg_1103 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln37_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1111_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1111_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1111_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1111_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1111_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1111_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1111_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1111_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1111_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1111_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1111_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1111_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1111_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1111_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln37_fu_386_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln37_reg_1115 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln40_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_1121 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln37_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln37_reg_1132 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_1137 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_6_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_6_reg_1142 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln40_fu_422_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln40_reg_1151 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln60_fu_675_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln60_reg_1157 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln43_27_fu_687_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln43_27_reg_1164 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln43_28_fu_701_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln43_28_reg_1170 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_38_fu_720_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_38_reg_1176 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln60_11_fu_770_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln60_11_reg_1183 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln60_87_fu_776_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln60_87_reg_1190 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln60_91_fu_794_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln60_91_reg_1201 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln60_95_fu_822_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln60_95_reg_1217 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln60_49_fu_860_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln60_49_reg_1228 : STD_LOGIC_VECTOR (9 downto 0);
    signal pixel_fu_865_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln60_52_fu_879_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln60_52_reg_1243 : STD_LOGIC_VECTOR (9 downto 0);
    signal pixel_49_fu_884_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln60_55_fu_898_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln60_55_reg_1258 : STD_LOGIC_VECTOR (9 downto 0);
    signal pixel_50_fu_911_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixel_51_fu_916_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixel_52_fu_925_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixel_53_fu_930_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_301_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_1298 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_305_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_s_reg_1303 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_s_reg_1303_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal pixel_54_fu_935_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixel_55_fu_940_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_8_reg_1318 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_8_reg_1318_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_8_reg_1318_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_1323 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_1323_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_1323_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_1323_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_1323_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal pixel_56_fu_945_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_reg_1333 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_reg_1333_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_reg_1333_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_reg_1333_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_reg_1333_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_reg_1333_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_reg_1338 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_reg_1338_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_reg_1338_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_reg_1338_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_reg_1338_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_reg_1338_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_reg_1338_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_1343 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_1343_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_1343_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_1343_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_1343_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_1343_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_1343_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_1343_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_1_reg_1348 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_1_reg_1348_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_1_reg_1348_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_1_reg_1348_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_1_reg_1348_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_1_reg_1348_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_1_reg_1348_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_1_reg_1348_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_1_reg_1348_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_1_reg_1348_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1353 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1353_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1353_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1353_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1353_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1353_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1353_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1353_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1353_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1353_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1353_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_292_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_reg_1358 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_41_reg_1363 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_42_reg_1368 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_43_reg_1373 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_44_reg_1378 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_297_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_45_reg_1383 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_46_reg_1388 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_47_reg_1393 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_48_reg_1398 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_reg_1403 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln173_fu_991_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln173_reg_1409 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln60_88_fu_784_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln60_92_fu_803_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln60_89_fu_812_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln60_96_fu_831_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln60_93_fu_874_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln60_97_fu_893_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln60_90_fu_903_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln60_94_fu_907_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln60_98_fu_921_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal wc_fu_116 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln45_fu_726_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal wr_fu_120 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln43_29_fu_709_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_wr_7 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_fu_124 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln43_30_fu_436_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (3 downto 0);
    signal c_fu_128 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln40_29_fu_607_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten31_fu_132 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln40_30_fu_450_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_allocacmp_indvar_flatten31_load : STD_LOGIC_VECTOR (6 downto 0);
    signal r_fu_136 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln37_25_fu_547_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_allocacmp_r_7 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten65_fu_140 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln37_6_fu_374_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_indvar_flatten65_load : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_292_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_292_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_297_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_297_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_301_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_301_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_305_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_305_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln40_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln43_6_fu_430_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln40_6_fu_444_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln43_fu_473_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_fu_476_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid151_fu_512_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_35_fu_481_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid155_fu_524_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_36_fu_487_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln45_fu_536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln37_fu_499_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln37_22_fu_506_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid121_fu_565_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln37_23_fu_517_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid125_fu_578_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln37_24_fu_529_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal xor_ln40_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln40_6_fu_596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln40_fu_552_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln40_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln43_fu_619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln43_7_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln43_fu_614_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln43_6_fu_637_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid1_fu_641_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln40_26_fu_558_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln43_26_fu_647_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_26_fu_663_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_655_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln60_fu_671_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_mid14_fu_681_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln40_27_fu_571_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid16_fu_695_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln40_28_fu_584_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln43_fu_629_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln45_fu_716_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_28_fu_759_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_27_fu_752_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln60_85_fu_766_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln60_47_fu_779_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln60_fu_789_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln60_50_fu_798_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln60_48_fu_808_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln60_6_fu_817_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln60_53_fu_826_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_30_fu_843_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_29_fu_836_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln60_86_fu_850_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln60_12_fu_854_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln60_51_fu_870_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln60_54_fu_889_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal bitcast_ln7_fu_950_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_953_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln7_fu_963_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln7_6_fu_973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_fu_967_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln7_fu_979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln7_fu_985_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_292_ce : STD_LOGIC;
    signal grp_fu_297_ce : STD_LOGIC;
    signal grp_fu_301_ce : STD_LOGIC;
    signal grp_fu_305_ce : STD_LOGIC;
    signal grp_fu_309_ce : STD_LOGIC;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter15_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to14 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0_1to16 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component convolutional_layer_fadd_32ns_32ns_32_7_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component convolutional_layer_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component convolutional_layer_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component convolutional_layer_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fadd_32ns_32ns_32_7_full_dsp_1_U46 : component convolutional_layer_fadd_32ns_32ns_32_7_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_292_p0,
        din1 => grp_fu_292_p1,
        ce => grp_fu_292_ce,
        dout => grp_fu_292_p2);

    fadd_32ns_32ns_32_7_full_dsp_1_U47 : component convolutional_layer_fadd_32ns_32ns_32_7_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_297_p0,
        din1 => grp_fu_297_p1,
        ce => grp_fu_297_ce,
        dout => grp_fu_297_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U48 : component convolutional_layer_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_301_p0,
        din1 => grp_fu_301_p1,
        ce => grp_fu_301_ce,
        dout => grp_fu_301_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U49 : component convolutional_layer_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_305_p0,
        din1 => grp_fu_305_p1,
        ce => grp_fu_305_ce,
        dout => grp_fu_305_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U50 : component convolutional_layer_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => x_assign_reg_1403,
        din1 => ap_const_lv32_0,
        ce => grp_fu_309_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_309_p2);

    flow_control_loop_pipe_sequential_init_U : component convolutional_layer_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage4,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter15_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage4)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter10_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter11_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter12_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter13_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter13_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter14_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter14_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter15_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter15_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter8_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter9_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
            end if; 
        end if;
    end process;

    c_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                c_fu_128 <= ap_const_lv5_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln37_reg_1111 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                c_fu_128 <= select_ln40_29_fu_607_p3;
            end if; 
        end if;
    end process;

    indvar_flatten31_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln37_fu_368_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten31_fu_132 <= select_ln40_30_fu_450_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten31_fu_132 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten65_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln37_fu_368_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten65_fu_140 <= add_ln37_6_fu_374_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten65_fu_140 <= ap_const_lv10_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln37_fu_368_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten_fu_124 <= select_ln43_30_fu_436_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_124 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;

    r_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                r_fu_136 <= ap_const_lv5_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln37_reg_1111 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                r_fu_136 <= select_ln37_25_fu_547_p3;
            end if; 
        end if;
    end process;

    reg_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                reg_314 <= pad_img2_q1;
            elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln37_reg_1111 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln37_reg_1111 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
                reg_314 <= pad_img2_q0;
            end if; 
        end if;
    end process;

    reg_319_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                reg_319 <= pad_img2_q0;
            elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln37_reg_1111 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln37_reg_1111 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
                reg_319 <= pad_img2_q1;
            end if; 
        end if;
    end process;

    wc_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                wc_fu_116 <= ap_const_lv2_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln37_reg_1111 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                wc_fu_116 <= add_ln45_fu_726_p2;
            end if; 
        end if;
    end process;

    wr_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                wr_fu_120 <= ap_const_lv2_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln37_reg_1111 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                wr_fu_120 <= select_ln43_29_fu_709_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln37_fu_368_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln37_reg_1115 <= add_ln37_fu_386_p2;
                and_ln37_6_reg_1142 <= and_ln37_6_fu_410_p2;
                icmp_ln40_reg_1121 <= icmp_ln40_fu_392_p2;
                icmp_ln43_reg_1137 <= icmp_ln43_fu_404_p2;
                select_ln40_reg_1151 <= select_ln40_fu_422_p3;
                xor_ln37_reg_1132 <= xor_ln37_fu_398_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln37_reg_1111 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                add_ln60_49_reg_1228 <= add_ln60_49_fu_860_p2;
                add_ln60_52_reg_1243 <= add_ln60_52_fu_879_p2;
                add_ln60_55_reg_1258 <= add_ln60_55_fu_898_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln37_reg_1111 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                empty_38_reg_1176 <= empty_38_fu_720_p2;
                select_ln43_27_reg_1164 <= select_ln43_27_fu_687_p3;
                select_ln43_28_reg_1170 <= select_ln43_28_fu_701_p3;
                    sub_ln60_reg_1157(9 downto 1) <= sub_ln60_fu_675_p2(9 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln37_reg_1111 <= icmp_ln37_fu_368_p2;
                icmp_ln37_reg_1111_pp0_iter10_reg <= icmp_ln37_reg_1111_pp0_iter9_reg;
                icmp_ln37_reg_1111_pp0_iter11_reg <= icmp_ln37_reg_1111_pp0_iter10_reg;
                icmp_ln37_reg_1111_pp0_iter12_reg <= icmp_ln37_reg_1111_pp0_iter11_reg;
                icmp_ln37_reg_1111_pp0_iter13_reg <= icmp_ln37_reg_1111_pp0_iter12_reg;
                icmp_ln37_reg_1111_pp0_iter14_reg <= icmp_ln37_reg_1111_pp0_iter13_reg;
                icmp_ln37_reg_1111_pp0_iter1_reg <= icmp_ln37_reg_1111;
                icmp_ln37_reg_1111_pp0_iter2_reg <= icmp_ln37_reg_1111_pp0_iter1_reg;
                icmp_ln37_reg_1111_pp0_iter3_reg <= icmp_ln37_reg_1111_pp0_iter2_reg;
                icmp_ln37_reg_1111_pp0_iter4_reg <= icmp_ln37_reg_1111_pp0_iter3_reg;
                icmp_ln37_reg_1111_pp0_iter5_reg <= icmp_ln37_reg_1111_pp0_iter4_reg;
                icmp_ln37_reg_1111_pp0_iter6_reg <= icmp_ln37_reg_1111_pp0_iter5_reg;
                icmp_ln37_reg_1111_pp0_iter7_reg <= icmp_ln37_reg_1111_pp0_iter6_reg;
                icmp_ln37_reg_1111_pp0_iter8_reg <= icmp_ln37_reg_1111_pp0_iter7_reg;
                icmp_ln37_reg_1111_pp0_iter9_reg <= icmp_ln37_reg_1111_pp0_iter8_reg;
                mul_2_1_reg_1348_pp0_iter10_reg <= mul_2_1_reg_1348_pp0_iter9_reg;
                mul_2_1_reg_1348_pp0_iter11_reg <= mul_2_1_reg_1348_pp0_iter10_reg;
                mul_2_1_reg_1348_pp0_iter3_reg <= mul_2_1_reg_1348;
                mul_2_1_reg_1348_pp0_iter4_reg <= mul_2_1_reg_1348_pp0_iter3_reg;
                mul_2_1_reg_1348_pp0_iter5_reg <= mul_2_1_reg_1348_pp0_iter4_reg;
                mul_2_1_reg_1348_pp0_iter6_reg <= mul_2_1_reg_1348_pp0_iter5_reg;
                mul_2_1_reg_1348_pp0_iter7_reg <= mul_2_1_reg_1348_pp0_iter6_reg;
                mul_2_1_reg_1348_pp0_iter8_reg <= mul_2_1_reg_1348_pp0_iter7_reg;
                mul_2_1_reg_1348_pp0_iter9_reg <= mul_2_1_reg_1348_pp0_iter8_reg;
                mul_2_reg_1343_pp0_iter3_reg <= mul_2_reg_1343;
                mul_2_reg_1343_pp0_iter4_reg <= mul_2_reg_1343_pp0_iter3_reg;
                mul_2_reg_1343_pp0_iter5_reg <= mul_2_reg_1343_pp0_iter4_reg;
                mul_2_reg_1343_pp0_iter6_reg <= mul_2_reg_1343_pp0_iter5_reg;
                mul_2_reg_1343_pp0_iter7_reg <= mul_2_reg_1343_pp0_iter6_reg;
                mul_2_reg_1343_pp0_iter8_reg <= mul_2_reg_1343_pp0_iter7_reg;
                mul_2_reg_1343_pp0_iter9_reg <= mul_2_reg_1343_pp0_iter8_reg;
                r_7_reg_1103 <= ap_sig_allocacmp_r_7;
                wr_7_reg_1098 <= ap_sig_allocacmp_wr_7;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                mul_1_1_reg_1333 <= grp_fu_301_p2;
                mul_1_2_reg_1338 <= grp_fu_305_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                mul_1_1_reg_1333_pp0_iter2_reg <= mul_1_1_reg_1333;
                mul_1_1_reg_1333_pp0_iter3_reg <= mul_1_1_reg_1333_pp0_iter2_reg;
                mul_1_1_reg_1333_pp0_iter4_reg <= mul_1_1_reg_1333_pp0_iter3_reg;
                mul_1_1_reg_1333_pp0_iter5_reg <= mul_1_1_reg_1333_pp0_iter4_reg;
                mul_1_1_reg_1333_pp0_iter6_reg <= mul_1_1_reg_1333_pp0_iter5_reg;
                mul_1_2_reg_1338_pp0_iter2_reg <= mul_1_2_reg_1338;
                mul_1_2_reg_1338_pp0_iter3_reg <= mul_1_2_reg_1338_pp0_iter2_reg;
                mul_1_2_reg_1338_pp0_iter4_reg <= mul_1_2_reg_1338_pp0_iter3_reg;
                mul_1_2_reg_1338_pp0_iter5_reg <= mul_1_2_reg_1338_pp0_iter4_reg;
                mul_1_2_reg_1338_pp0_iter6_reg <= mul_1_2_reg_1338_pp0_iter5_reg;
                mul_1_2_reg_1338_pp0_iter7_reg <= mul_1_2_reg_1338_pp0_iter6_reg;
                select_ln173_reg_1409 <= select_ln173_fu_991_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                mul_1_reg_1323 <= grp_fu_305_p2;
                mul_8_reg_1318 <= grp_fu_301_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                mul_1_reg_1323_pp0_iter2_reg <= mul_1_reg_1323;
                mul_1_reg_1323_pp0_iter3_reg <= mul_1_reg_1323_pp0_iter2_reg;
                mul_1_reg_1323_pp0_iter4_reg <= mul_1_reg_1323_pp0_iter3_reg;
                mul_1_reg_1323_pp0_iter5_reg <= mul_1_reg_1323_pp0_iter4_reg;
                mul_8_reg_1318_pp0_iter2_reg <= mul_8_reg_1318;
                mul_8_reg_1318_pp0_iter3_reg <= mul_8_reg_1318_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mul_2_1_reg_1348 <= grp_fu_305_p2;
                mul_2_reg_1343 <= grp_fu_301_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                mul_2_2_reg_1353 <= grp_fu_301_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                mul_2_2_reg_1353_pp0_iter10_reg <= mul_2_2_reg_1353_pp0_iter9_reg;
                mul_2_2_reg_1353_pp0_iter11_reg <= mul_2_2_reg_1353_pp0_iter10_reg;
                mul_2_2_reg_1353_pp0_iter12_reg <= mul_2_2_reg_1353_pp0_iter11_reg;
                mul_2_2_reg_1353_pp0_iter3_reg <= mul_2_2_reg_1353;
                mul_2_2_reg_1353_pp0_iter4_reg <= mul_2_2_reg_1353_pp0_iter3_reg;
                mul_2_2_reg_1353_pp0_iter5_reg <= mul_2_2_reg_1353_pp0_iter4_reg;
                mul_2_2_reg_1353_pp0_iter6_reg <= mul_2_2_reg_1353_pp0_iter5_reg;
                mul_2_2_reg_1353_pp0_iter7_reg <= mul_2_2_reg_1353_pp0_iter6_reg;
                mul_2_2_reg_1353_pp0_iter8_reg <= mul_2_2_reg_1353_pp0_iter7_reg;
                mul_2_2_reg_1353_pp0_iter9_reg <= mul_2_2_reg_1353_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                mul_reg_1298 <= grp_fu_301_p2;
                mul_s_reg_1303 <= grp_fu_305_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                mul_s_reg_1303_pp0_iter2_reg <= mul_s_reg_1303;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln37_reg_1111 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                    sub_ln60_11_reg_1183(9 downto 1) <= sub_ln60_11_fu_770_p2(9 downto 1);
                    zext_ln60_87_reg_1190(4 downto 0) <= zext_ln60_87_fu_776_p1(4 downto 0);
                    zext_ln60_91_reg_1201(4 downto 0) <= zext_ln60_91_fu_794_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                w_sum_41_reg_1363 <= grp_fu_292_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                w_sum_42_reg_1368 <= grp_fu_292_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                w_sum_43_reg_1373 <= grp_fu_292_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                w_sum_44_reg_1378 <= grp_fu_292_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                w_sum_45_reg_1383 <= grp_fu_297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                w_sum_46_reg_1388 <= grp_fu_297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                w_sum_47_reg_1393 <= grp_fu_297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                w_sum_48_reg_1398 <= grp_fu_297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                w_sum_reg_1358 <= grp_fu_292_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                x_assign_reg_1403 <= grp_fu_297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln37_reg_1111 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                    zext_ln60_95_reg_1217(4 downto 0) <= zext_ln60_95_fu_822_p1(4 downto 0);
            end if;
        end if;
    end process;
    sub_ln60_reg_1157(0) <= '0';
    sub_ln60_11_reg_1183(0) <= '0';
    zext_ln60_87_reg_1190(9 downto 5) <= "00000";
    zext_ln60_91_reg_1201(9 downto 5) <= "00000";
    zext_ln60_95_reg_1217(9 downto 5) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage4_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter15_stage0, ap_idle_pp0_0to14, ap_idle_pp0_1to16, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter15_stage0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to16 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln37_6_fu_374_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten65_load) + unsigned(ap_const_lv10_1));
    add_ln37_fu_386_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_r_7) + unsigned(ap_const_lv5_2));
    add_ln40_6_fu_444_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten31_load) + unsigned(ap_const_lv7_1));
    add_ln40_fu_552_p2 <= std_logic_vector(unsigned(select_ln37_fu_499_p3) + unsigned(ap_const_lv5_2));
    add_ln43_6_fu_430_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv4_1));
    add_ln43_fu_614_p2 <= std_logic_vector(unsigned(select_ln40_reg_1151) + unsigned(ap_const_lv2_1));
    add_ln45_fu_726_p2 <= std_logic_vector(unsigned(select_ln43_fu_629_p3) + unsigned(ap_const_lv2_1));
    add_ln60_47_fu_779_p2 <= std_logic_vector(unsigned(sub_ln60_reg_1157) + unsigned(zext_ln60_87_fu_776_p1));
    add_ln60_48_fu_808_p2 <= std_logic_vector(unsigned(sub_ln60_11_reg_1183) + unsigned(zext_ln60_87_reg_1190));
    add_ln60_49_fu_860_p2 <= std_logic_vector(unsigned(sub_ln60_12_fu_854_p2) + unsigned(zext_ln60_87_reg_1190));
    add_ln60_50_fu_798_p2 <= std_logic_vector(unsigned(sub_ln60_reg_1157) + unsigned(zext_ln60_91_fu_794_p1));
    add_ln60_51_fu_870_p2 <= std_logic_vector(unsigned(sub_ln60_11_reg_1183) + unsigned(zext_ln60_91_reg_1201));
    add_ln60_52_fu_879_p2 <= std_logic_vector(unsigned(sub_ln60_12_fu_854_p2) + unsigned(zext_ln60_91_reg_1201));
    add_ln60_53_fu_826_p2 <= std_logic_vector(unsigned(sub_ln60_reg_1157) + unsigned(zext_ln60_95_fu_822_p1));
    add_ln60_54_fu_889_p2 <= std_logic_vector(unsigned(sub_ln60_11_reg_1183) + unsigned(zext_ln60_95_reg_1217));
    add_ln60_55_fu_898_p2 <= std_logic_vector(unsigned(sub_ln60_12_fu_854_p2) + unsigned(zext_ln60_95_reg_1217));
    add_ln60_6_fu_817_p2 <= std_logic_vector(unsigned(empty_38_reg_1176) + unsigned(ap_const_lv5_2));
    add_ln60_fu_789_p2 <= std_logic_vector(unsigned(empty_38_reg_1176) + unsigned(ap_const_lv5_1));
    and_ln37_6_fu_410_p2 <= (xor_ln37_fu_398_p2 and icmp_ln43_fu_404_p2);
    and_ln37_fu_542_p2 <= (xor_ln37_reg_1132 and icmp_ln45_fu_536_p2);
    and_ln40_fu_601_p2 <= (or_ln40_6_fu_596_p2 and and_ln37_fu_542_p2);
    and_ln7_fu_985_p2 <= (or_ln7_fu_979_p2 and grp_fu_309_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter16, conv_to_pool_streams_2_full_n)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (conv_to_pool_streams_2_full_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter16, conv_to_pool_streams_2_full_n)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (conv_to_pool_streams_2_full_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter16, conv_to_pool_streams_2_full_n)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (conv_to_pool_streams_2_full_n = ap_const_logic_0));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage4_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage3_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage4_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage2_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage3_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage4_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage2_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage3_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage4_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage1_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage2_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage3_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage4_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage1_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage2_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage3_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage4_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage1_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage2_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage3_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage4_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp0_stage1_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp0_stage2_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp0_stage3_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp0_stage4_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp0_stage1_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp0_stage2_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp0_stage3_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp0_stage4_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state81_pp0_stage0_iter16_assign_proc : process(conv_to_pool_streams_2_full_n)
    begin
                ap_block_state81_pp0_stage0_iter16 <= (conv_to_pool_streams_2_full_n = ap_const_logic_0);
    end process;

        ap_block_state8_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone, icmp_ln37_reg_1111)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln37_reg_1111 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
            ap_condition_exit_pp0_iter0_stage4 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter15_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter15, icmp_ln37_reg_1111_pp0_iter14_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (icmp_ln37_reg_1111_pp0_iter14_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter15_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter15_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter15_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter15_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to14_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to14 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to16_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to16 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to16 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage4;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten31_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten31_fu_132)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten31_load <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_indvar_flatten31_load <= indvar_flatten31_fu_132;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten65_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten65_fu_140)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten65_load <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_indvar_flatten65_load <= indvar_flatten65_fu_140;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_124)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_124;
        end if; 
    end process;


    ap_sig_allocacmp_r_7_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, r_fu_136)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_r_7 <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_r_7 <= r_fu_136;
        end if; 
    end process;


    ap_sig_allocacmp_wr_7_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, wr_fu_120)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_wr_7 <= ap_const_lv2_0;
        else 
            ap_sig_allocacmp_wr_7 <= wr_fu_120;
        end if; 
    end process;

    bitcast_ln7_fu_950_p1 <= x_assign_reg_1403;

    conv_to_pool_streams_2_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter16, conv_to_pool_streams_2_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            conv_to_pool_streams_2_blk_n <= conv_to_pool_streams_2_full_n;
        else 
            conv_to_pool_streams_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    conv_to_pool_streams_2_din <= select_ln173_reg_1409;

    conv_to_pool_streams_2_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_to_pool_streams_2_write <= ap_const_logic_1;
        else 
            conv_to_pool_streams_2_write <= ap_const_logic_0;
        end if; 
    end process;

    empty_35_fu_481_p2 <= std_logic_vector(unsigned(empty_fu_476_p2) + unsigned(ap_const_lv5_1));
    empty_36_fu_487_p2 <= std_logic_vector(unsigned(empty_fu_476_p2) + unsigned(ap_const_lv5_2));
    empty_38_fu_720_p2 <= std_logic_vector(unsigned(select_ln40_29_fu_607_p3) + unsigned(zext_ln45_fu_716_p1));
    empty_fu_476_p2 <= std_logic_vector(unsigned(r_7_reg_1103) + unsigned(zext_ln43_fu_473_p1));

    grp_fu_292_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            grp_fu_292_ce <= ap_const_logic_1;
        else 
            grp_fu_292_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_292_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul_reg_1298, w_sum_reg_1358, w_sum_41_reg_1363, w_sum_42_reg_1368, w_sum_43_reg_1373, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_292_p0 <= w_sum_43_reg_1373;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_292_p0 <= w_sum_42_reg_1368;
        elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_292_p0 <= w_sum_41_reg_1363;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_292_p0 <= w_sum_reg_1358;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_292_p0 <= mul_reg_1298;
        else 
            grp_fu_292_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_292_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul_s_reg_1303_pp0_iter2_reg, mul_8_reg_1318_pp0_iter3_reg, mul_1_reg_1323_pp0_iter5_reg, mul_1_1_reg_1333_pp0_iter6_reg, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_292_p1 <= mul_1_1_reg_1333_pp0_iter6_reg;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_292_p1 <= mul_1_reg_1323_pp0_iter5_reg;
        elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_292_p1 <= mul_8_reg_1318_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_292_p1 <= mul_s_reg_1303_pp0_iter2_reg;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_292_p1 <= ap_const_lv32_0;
        else 
            grp_fu_292_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_297_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            grp_fu_297_ce <= ap_const_logic_1;
        else 
            grp_fu_297_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_297_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter14, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, w_sum_44_reg_1378, w_sum_45_reg_1383, w_sum_46_reg_1388, w_sum_47_reg_1393, w_sum_48_reg_1398, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_297_p0 <= w_sum_48_reg_1398;
        elsif (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_297_p0 <= w_sum_47_reg_1393;
        elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_297_p0 <= w_sum_46_reg_1388;
        elsif (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_297_p0 <= w_sum_45_reg_1383;
        elsif (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_297_p0 <= w_sum_44_reg_1378;
        else 
            grp_fu_297_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_297_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter14, ap_CS_fsm_pp0_stage4, biases_buf, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul_1_2_reg_1338_pp0_iter7_reg, mul_2_reg_1343_pp0_iter9_reg, mul_2_1_reg_1348_pp0_iter11_reg, mul_2_2_reg_1353_pp0_iter12_reg, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_297_p1 <= biases_buf;
        elsif (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_297_p1 <= mul_2_2_reg_1353_pp0_iter12_reg;
        elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_297_p1 <= mul_2_1_reg_1348_pp0_iter11_reg;
        elsif (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_297_p1 <= mul_2_reg_1343_pp0_iter9_reg;
        elsif (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_297_p1 <= mul_1_2_reg_1338_pp0_iter7_reg;
        else 
            grp_fu_297_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_301_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            grp_fu_301_ce <= ap_const_logic_1;
        else 
            grp_fu_301_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_301_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, w, w_42, w_44, w_46, w_48, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_301_p0 <= w_48;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_301_p0 <= w_46;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_301_p0 <= w_44;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_301_p0 <= w_42;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_301_p0 <= w;
        else 
            grp_fu_301_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_301_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, pixel_fu_865_p1, pixel_50_fu_911_p1, pixel_52_fu_925_p1, pixel_54_fu_935_p1, pixel_56_fu_945_p1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_301_p1 <= pixel_56_fu_945_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_301_p1 <= pixel_54_fu_935_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_301_p1 <= pixel_52_fu_925_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_301_p1 <= pixel_50_fu_911_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_301_p1 <= pixel_fu_865_p1;
        else 
            grp_fu_301_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_305_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            grp_fu_305_ce <= ap_const_logic_1;
        else 
            grp_fu_305_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_305_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, w_41, w_43, w_45, w_47, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_305_p0 <= w_47;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_305_p0 <= w_45;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_305_p0 <= w_43;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_305_p0 <= w_41;
        else 
            grp_fu_305_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_305_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, pixel_49_fu_884_p1, pixel_51_fu_916_p1, pixel_53_fu_930_p1, pixel_55_fu_940_p1, ap_block_pp0_stage2, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_305_p1 <= pixel_55_fu_940_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_305_p1 <= pixel_53_fu_930_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_305_p1 <= pixel_51_fu_916_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_305_p1 <= pixel_49_fu_884_p1;
        else 
            grp_fu_305_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_309_ce_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            grp_fu_309_ce <= ap_const_logic_1;
        else 
            grp_fu_309_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln37_fu_368_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten65_load = ap_const_lv10_310) else "0";
    icmp_ln40_fu_392_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten31_load = ap_const_lv7_38) else "0";
    icmp_ln43_fu_404_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv4_4) else "0";
    icmp_ln45_fu_536_p2 <= "1" when (wc_fu_116 = ap_const_lv2_2) else "0";
    icmp_ln7_6_fu_973_p2 <= "1" when (trunc_ln7_fu_963_p1 = ap_const_lv23_0) else "0";
    icmp_ln7_fu_967_p2 <= "0" when (tmp_fu_953_p4 = ap_const_lv8_FF) else "1";
    or_ln40_6_fu_596_p2 <= (xor_ln40_fu_591_p2 or icmp_ln40_reg_1121);
    or_ln40_fu_416_p2 <= (icmp_ln40_fu_392_p2 or and_ln37_6_fu_410_p2);
    or_ln43_7_fu_624_p2 <= (or_ln43_fu_619_p2 or icmp_ln40_reg_1121);
    or_ln43_fu_619_p2 <= (and_ln40_fu_601_p2 or and_ln37_6_reg_1142);
    or_ln7_fu_979_p2 <= (icmp_ln7_fu_967_p2 or icmp_ln7_6_fu_973_p2);
    p_mid121_fu_565_p2 <= std_logic_vector(unsigned(select_ln37_25_fu_547_p3) + unsigned(ap_const_lv5_1));
    p_mid125_fu_578_p2 <= std_logic_vector(unsigned(select_ln37_25_fu_547_p3) + unsigned(ap_const_lv5_2));
    p_mid14_fu_681_p2 <= std_logic_vector(unsigned(p_mid1_fu_641_p2) + unsigned(ap_const_lv5_1));
    p_mid151_fu_512_p2 <= std_logic_vector(unsigned(r_7_reg_1103) + unsigned(ap_const_lv5_3));
    p_mid155_fu_524_p2 <= std_logic_vector(unsigned(r_7_reg_1103) + unsigned(ap_const_lv5_4));
    p_mid16_fu_695_p2 <= std_logic_vector(unsigned(p_mid1_fu_641_p2) + unsigned(ap_const_lv5_2));
    p_mid1_fu_641_p2 <= std_logic_vector(unsigned(select_ln37_25_fu_547_p3) + unsigned(zext_ln43_6_fu_637_p1));

    pad_img2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, zext_ln60_88_fu_784_p1, ap_block_pp0_stage2, ap_block_pp0_stage3, zext_ln60_96_fu_831_p1, zext_ln60_93_fu_874_p1, ap_block_pp0_stage4, zext_ln60_94_fu_907_p1, zext_ln60_98_fu_921_p1, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            pad_img2_address0 <= zext_ln60_98_fu_921_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            pad_img2_address0 <= zext_ln60_94_fu_907_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            pad_img2_address0 <= zext_ln60_93_fu_874_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            pad_img2_address0 <= zext_ln60_96_fu_831_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            pad_img2_address0 <= zext_ln60_88_fu_784_p1(10 - 1 downto 0);
        else 
            pad_img2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    pad_img2_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, zext_ln60_92_fu_803_p1, zext_ln60_89_fu_812_p1, ap_block_pp0_stage3, ap_block_pp0_stage4, zext_ln60_97_fu_893_p1, zext_ln60_90_fu_903_p1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            pad_img2_address1 <= zext_ln60_90_fu_903_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            pad_img2_address1 <= zext_ln60_97_fu_893_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            pad_img2_address1 <= zext_ln60_89_fu_812_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            pad_img2_address1 <= zext_ln60_92_fu_803_p1(10 - 1 downto 0);
        else 
            pad_img2_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    pad_img2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            pad_img2_ce0 <= ap_const_logic_1;
        else 
            pad_img2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pad_img2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            pad_img2_ce1 <= ap_const_logic_1;
        else 
            pad_img2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    pixel_49_fu_884_p1 <= reg_319;
    pixel_50_fu_911_p1 <= reg_314;
    pixel_51_fu_916_p1 <= reg_319;
    pixel_52_fu_925_p1 <= reg_314;
    pixel_53_fu_930_p1 <= reg_319;
    pixel_54_fu_935_p1 <= reg_314;
    pixel_55_fu_940_p1 <= reg_319;
    pixel_56_fu_945_p1 <= reg_314;
    pixel_fu_865_p1 <= reg_314;
    select_ln173_fu_991_p3 <= 
        bitcast_ln7_fu_950_p1 when (and_ln7_fu_985_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln37_22_fu_506_p3 <= 
        add_ln37_reg_1115 when (icmp_ln40_reg_1121(0) = '1') else 
        empty_fu_476_p2;
    select_ln37_23_fu_517_p3 <= 
        p_mid151_fu_512_p2 when (icmp_ln40_reg_1121(0) = '1') else 
        empty_35_fu_481_p2;
    select_ln37_24_fu_529_p3 <= 
        p_mid155_fu_524_p2 when (icmp_ln40_reg_1121(0) = '1') else 
        empty_36_fu_487_p2;
    select_ln37_25_fu_547_p3 <= 
        add_ln37_reg_1115 when (icmp_ln40_reg_1121(0) = '1') else 
        r_7_reg_1103;
    select_ln37_fu_499_p3 <= 
        ap_const_lv5_0 when (icmp_ln40_reg_1121(0) = '1') else 
        c_fu_128;
    select_ln40_26_fu_558_p3 <= 
        select_ln37_25_fu_547_p3 when (and_ln37_6_reg_1142(0) = '1') else 
        select_ln37_22_fu_506_p3;
    select_ln40_27_fu_571_p3 <= 
        p_mid121_fu_565_p2 when (and_ln37_6_reg_1142(0) = '1') else 
        select_ln37_23_fu_517_p3;
    select_ln40_28_fu_584_p3 <= 
        p_mid125_fu_578_p2 when (and_ln37_6_reg_1142(0) = '1') else 
        select_ln37_24_fu_529_p3;
    select_ln40_29_fu_607_p3 <= 
        add_ln40_fu_552_p2 when (and_ln37_6_reg_1142(0) = '1') else 
        select_ln37_fu_499_p3;
    select_ln40_30_fu_450_p3 <= 
        ap_const_lv7_1 when (icmp_ln40_fu_392_p2(0) = '1') else 
        add_ln40_6_fu_444_p2;
    select_ln40_fu_422_p3 <= 
        ap_const_lv2_0 when (or_ln40_fu_416_p2(0) = '1') else 
        ap_sig_allocacmp_wr_7;
    select_ln43_26_fu_647_p3 <= 
        p_mid1_fu_641_p2 when (and_ln40_fu_601_p2(0) = '1') else 
        select_ln40_26_fu_558_p3;
    select_ln43_27_fu_687_p3 <= 
        p_mid14_fu_681_p2 when (and_ln40_fu_601_p2(0) = '1') else 
        select_ln40_27_fu_571_p3;
    select_ln43_28_fu_701_p3 <= 
        p_mid16_fu_695_p2 when (and_ln40_fu_601_p2(0) = '1') else 
        select_ln40_28_fu_584_p3;
    select_ln43_29_fu_709_p3 <= 
        add_ln43_fu_614_p2 when (and_ln40_fu_601_p2(0) = '1') else 
        select_ln40_reg_1151;
    select_ln43_30_fu_436_p3 <= 
        ap_const_lv4_1 when (or_ln40_fu_416_p2(0) = '1') else 
        add_ln43_6_fu_430_p2;
    select_ln43_fu_629_p3 <= 
        ap_const_lv2_0 when (or_ln43_7_fu_624_p2(0) = '1') else 
        wc_fu_116;
    sub_ln60_11_fu_770_p2 <= std_logic_vector(unsigned(tmp_27_fu_752_p3) - unsigned(zext_ln60_85_fu_766_p1));
    sub_ln60_12_fu_854_p2 <= std_logic_vector(unsigned(tmp_29_fu_836_p3) - unsigned(zext_ln60_86_fu_850_p1));
    sub_ln60_fu_675_p2 <= std_logic_vector(unsigned(tmp_s_fu_655_p3) - unsigned(zext_ln60_fu_671_p1));
    tmp_26_fu_663_p3 <= (select_ln43_26_fu_647_p3 & ap_const_lv1_0);
    tmp_27_fu_752_p3 <= (select_ln43_27_reg_1164 & ap_const_lv5_0);
    tmp_28_fu_759_p3 <= (select_ln43_27_reg_1164 & ap_const_lv1_0);
    tmp_29_fu_836_p3 <= (select_ln43_28_reg_1170 & ap_const_lv5_0);
    tmp_30_fu_843_p3 <= (select_ln43_28_reg_1170 & ap_const_lv1_0);
    tmp_fu_953_p4 <= bitcast_ln7_fu_950_p1(30 downto 23);
    tmp_s_fu_655_p3 <= (select_ln43_26_fu_647_p3 & ap_const_lv5_0);
    trunc_ln7_fu_963_p1 <= bitcast_ln7_fu_950_p1(23 - 1 downto 0);
    xor_ln37_fu_398_p2 <= (icmp_ln40_fu_392_p2 xor ap_const_lv1_1);
    xor_ln40_fu_591_p2 <= (icmp_ln43_reg_1137 xor ap_const_lv1_1);
    zext_ln43_6_fu_637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln43_fu_614_p2),5));
    zext_ln43_fu_473_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wr_7_reg_1098),5));
    zext_ln45_fu_716_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln43_fu_629_p3),5));
    zext_ln60_85_fu_766_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_fu_759_p3),10));
    zext_ln60_86_fu_850_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_843_p3),10));
    zext_ln60_87_fu_776_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_38_reg_1176),10));
    zext_ln60_88_fu_784_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln60_47_fu_779_p2),64));
    zext_ln60_89_fu_812_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln60_48_fu_808_p2),64));
    zext_ln60_90_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln60_49_reg_1228),64));
    zext_ln60_91_fu_794_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln60_fu_789_p2),10));
    zext_ln60_92_fu_803_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln60_50_fu_798_p2),64));
    zext_ln60_93_fu_874_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln60_51_fu_870_p2),64));
    zext_ln60_94_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln60_52_reg_1243),64));
    zext_ln60_95_fu_822_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln60_6_fu_817_p2),10));
    zext_ln60_96_fu_831_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln60_53_fu_826_p2),64));
    zext_ln60_97_fu_893_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln60_54_fu_889_p2),64));
    zext_ln60_98_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln60_55_reg_1258),64));
    zext_ln60_fu_671_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_663_p3),10));
end behav;
