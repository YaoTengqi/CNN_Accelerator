-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_dense_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    flat_to_dense_streams_4_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    flat_to_dense_streams_4_empty_n : IN STD_LOGIC;
    flat_to_dense_streams_4_read : OUT STD_LOGIC;
    dense_to_softmax_streams_4_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    dense_to_softmax_streams_4_full_n : IN STD_LOGIC;
    dense_to_softmax_streams_4_write : OUT STD_LOGIC );
end;


architecture behav of cnn_dense_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal dense_array_addr_reg_354 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal dense_array_addr_28_reg_359 : STD_LOGIC_VECTOR (3 downto 0);
    signal dense_array_addr_29_reg_364 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal dense_array_addr_30_reg_369 : STD_LOGIC_VECTOR (3 downto 0);
    signal dense_array_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_array_load_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_array_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_array_load_28_reg_379 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_array_addr_31_reg_384 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal dense_array_addr_32_reg_389 : STD_LOGIC_VECTOR (3 downto 0);
    signal dense_array_load_29_reg_394 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_array_load_30_reg_399 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_array_addr_33_reg_404 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal dense_array_addr_34_reg_409 : STD_LOGIC_VECTOR (3 downto 0);
    signal dense_array_load_31_reg_414 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_array_load_32_reg_419 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_array_addr_35_reg_424 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal dense_array_addr_36_reg_429 : STD_LOGIC_VECTOR (3 downto 0);
    signal dense_array_load_33_reg_434 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_array_load_34_reg_439 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_array_load_35_reg_444 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal dense_array_load_36_reg_449 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_array_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal dense_array_ce0 : STD_LOGIC;
    signal dense_array_we0 : STD_LOGIC;
    signal dense_array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_array_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal dense_array_ce1 : STD_LOGIC;
    signal dense_array_we1 : STD_LOGIC;
    signal dense_array_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_4_Pipeline_1_fu_193_ap_start : STD_LOGIC;
    signal grp_dense_4_Pipeline_1_fu_193_ap_done : STD_LOGIC;
    signal grp_dense_4_Pipeline_1_fu_193_ap_idle : STD_LOGIC;
    signal grp_dense_4_Pipeline_1_fu_193_ap_ready : STD_LOGIC;
    signal grp_dense_4_Pipeline_1_fu_193_dense_array_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dense_4_Pipeline_1_fu_193_dense_array_ce0 : STD_LOGIC;
    signal grp_dense_4_Pipeline_1_fu_193_dense_array_we0 : STD_LOGIC;
    signal grp_dense_4_Pipeline_1_fu_193_dense_array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_ap_start : STD_LOGIC;
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_ap_done : STD_LOGIC;
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_ap_idle : STD_LOGIC;
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_ap_ready : STD_LOGIC;
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_flat_to_dense_streams_4_read : STD_LOGIC;
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_914_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_914_out_ap_vld : STD_LOGIC;
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_813_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_813_out_ap_vld : STD_LOGIC;
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_712_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_712_out_ap_vld : STD_LOGIC;
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_611_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_611_out_ap_vld : STD_LOGIC;
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_510_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_510_out_ap_vld : STD_LOGIC;
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_49_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_49_out_ap_vld : STD_LOGIC;
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_38_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_38_out_ap_vld : STD_LOGIC;
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_27_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_27_out_ap_vld : STD_LOGIC;
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_16_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_16_out_ap_vld : STD_LOGIC;
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_add75_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_add75_out_ap_vld : STD_LOGIC;
    signal grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_start : STD_LOGIC;
    signal grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_done : STD_LOGIC;
    signal grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_idle : STD_LOGIC;
    signal grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_ready : STD_LOGIC;
    signal grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_dense_to_softmax_streams_4_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_dense_to_softmax_streams_4_write : STD_LOGIC;
    signal grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_dense_array_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_dense_array_ce0 : STD_LOGIC;
    signal grp_dense_4_Pipeline_1_fu_193_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call13 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_dense_4_Pipeline_dense_for_flat_fu_199_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_dense_4_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dense_array_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dense_array_ce0 : OUT STD_LOGIC;
        dense_array_we0 : OUT STD_LOGIC;
        dense_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_dense_4_Pipeline_dense_for_flat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dense_array_load_36 : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_array_load_35 : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_array_load_34 : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_array_load_33 : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_array_load_32 : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_array_load_31 : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_array_load_30 : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_array_load_29 : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_array_load_28 : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_array_load : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_to_dense_streams_4_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_to_dense_streams_4_empty_n : IN STD_LOGIC;
        flat_to_dense_streams_4_read : OUT STD_LOGIC;
        add7_914_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add7_914_out_ap_vld : OUT STD_LOGIC;
        add7_813_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add7_813_out_ap_vld : OUT STD_LOGIC;
        add7_712_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add7_712_out_ap_vld : OUT STD_LOGIC;
        add7_611_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add7_611_out_ap_vld : OUT STD_LOGIC;
        add7_510_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add7_510_out_ap_vld : OUT STD_LOGIC;
        add7_49_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add7_49_out_ap_vld : OUT STD_LOGIC;
        add7_38_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add7_38_out_ap_vld : OUT STD_LOGIC;
        add7_27_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add7_27_out_ap_vld : OUT STD_LOGIC;
        add7_16_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add7_16_out_ap_vld : OUT STD_LOGIC;
        add75_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add75_out_ap_vld : OUT STD_LOGIC );
    end component;


    component cnn_dense_4_Pipeline_VITIS_LOOP_60_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dense_to_softmax_streams_4_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dense_to_softmax_streams_4_full_n : IN STD_LOGIC;
        dense_to_softmax_streams_4_write : OUT STD_LOGIC;
        dense_array_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dense_array_ce0 : OUT STD_LOGIC;
        dense_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_dense_dense_array_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    dense_array_U : component cnn_dense_dense_array_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_array_address0,
        ce0 => dense_array_ce0,
        we0 => dense_array_we0,
        d0 => dense_array_d0,
        q0 => dense_array_q0,
        address1 => dense_array_address1,
        ce1 => dense_array_ce1,
        we1 => dense_array_we1,
        d1 => dense_array_d1,
        q1 => dense_array_q1);

    grp_dense_4_Pipeline_1_fu_193 : component cnn_dense_4_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_4_Pipeline_1_fu_193_ap_start,
        ap_done => grp_dense_4_Pipeline_1_fu_193_ap_done,
        ap_idle => grp_dense_4_Pipeline_1_fu_193_ap_idle,
        ap_ready => grp_dense_4_Pipeline_1_fu_193_ap_ready,
        dense_array_address0 => grp_dense_4_Pipeline_1_fu_193_dense_array_address0,
        dense_array_ce0 => grp_dense_4_Pipeline_1_fu_193_dense_array_ce0,
        dense_array_we0 => grp_dense_4_Pipeline_1_fu_193_dense_array_we0,
        dense_array_d0 => grp_dense_4_Pipeline_1_fu_193_dense_array_d0);

    grp_dense_4_Pipeline_dense_for_flat_fu_199 : component cnn_dense_4_Pipeline_dense_for_flat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_4_Pipeline_dense_for_flat_fu_199_ap_start,
        ap_done => grp_dense_4_Pipeline_dense_for_flat_fu_199_ap_done,
        ap_idle => grp_dense_4_Pipeline_dense_for_flat_fu_199_ap_idle,
        ap_ready => grp_dense_4_Pipeline_dense_for_flat_fu_199_ap_ready,
        dense_array_load_36 => dense_array_load_36_reg_449,
        dense_array_load_35 => dense_array_load_35_reg_444,
        dense_array_load_34 => dense_array_load_34_reg_439,
        dense_array_load_33 => dense_array_load_33_reg_434,
        dense_array_load_32 => dense_array_load_32_reg_419,
        dense_array_load_31 => dense_array_load_31_reg_414,
        dense_array_load_30 => dense_array_load_30_reg_399,
        dense_array_load_29 => dense_array_load_29_reg_394,
        dense_array_load_28 => dense_array_load_28_reg_379,
        dense_array_load => dense_array_load_reg_374,
        flat_to_dense_streams_4_dout => flat_to_dense_streams_4_dout,
        flat_to_dense_streams_4_empty_n => flat_to_dense_streams_4_empty_n,
        flat_to_dense_streams_4_read => grp_dense_4_Pipeline_dense_for_flat_fu_199_flat_to_dense_streams_4_read,
        add7_914_out => grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_914_out,
        add7_914_out_ap_vld => grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_914_out_ap_vld,
        add7_813_out => grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_813_out,
        add7_813_out_ap_vld => grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_813_out_ap_vld,
        add7_712_out => grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_712_out,
        add7_712_out_ap_vld => grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_712_out_ap_vld,
        add7_611_out => grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_611_out,
        add7_611_out_ap_vld => grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_611_out_ap_vld,
        add7_510_out => grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_510_out,
        add7_510_out_ap_vld => grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_510_out_ap_vld,
        add7_49_out => grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_49_out,
        add7_49_out_ap_vld => grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_49_out_ap_vld,
        add7_38_out => grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_38_out,
        add7_38_out_ap_vld => grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_38_out_ap_vld,
        add7_27_out => grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_27_out,
        add7_27_out_ap_vld => grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_27_out_ap_vld,
        add7_16_out => grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_16_out,
        add7_16_out_ap_vld => grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_16_out_ap_vld,
        add75_out => grp_dense_4_Pipeline_dense_for_flat_fu_199_add75_out,
        add75_out_ap_vld => grp_dense_4_Pipeline_dense_for_flat_fu_199_add75_out_ap_vld);

    grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247 : component cnn_dense_4_Pipeline_VITIS_LOOP_60_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_start,
        ap_done => grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_done,
        ap_idle => grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_idle,
        ap_ready => grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_ready,
        dense_to_softmax_streams_4_din => grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_dense_to_softmax_streams_4_din,
        dense_to_softmax_streams_4_full_n => dense_to_softmax_streams_4_full_n,
        dense_to_softmax_streams_4_write => grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_dense_to_softmax_streams_4_write,
        dense_array_address0 => grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_dense_array_address0,
        dense_array_ce0 => grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_dense_array_ce0,
        dense_array_q0 => dense_array_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_done = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_4_Pipeline_1_fu_193_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_4_Pipeline_1_fu_193_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_dense_4_Pipeline_1_fu_193_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_4_Pipeline_1_fu_193_ap_ready = ap_const_logic_1)) then 
                    grp_dense_4_Pipeline_1_fu_193_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_ready = ap_const_logic_1)) then 
                    grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_4_Pipeline_dense_for_flat_fu_199_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_4_Pipeline_dense_for_flat_fu_199_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_dense_4_Pipeline_dense_for_flat_fu_199_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_4_Pipeline_dense_for_flat_fu_199_ap_ready = ap_const_logic_1)) then 
                    grp_dense_4_Pipeline_dense_for_flat_fu_199_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                dense_array_load_28_reg_379 <= dense_array_q0;
                dense_array_load_reg_374 <= dense_array_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                dense_array_load_29_reg_394 <= dense_array_q1;
                dense_array_load_30_reg_399 <= dense_array_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                dense_array_load_31_reg_414 <= dense_array_q1;
                dense_array_load_32_reg_419 <= dense_array_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                dense_array_load_33_reg_434 <= dense_array_q1;
                dense_array_load_34_reg_439 <= dense_array_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                dense_array_load_35_reg_444 <= dense_array_q1;
                dense_array_load_36_reg_449 <= dense_array_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, grp_dense_4_Pipeline_1_fu_193_ap_done, grp_dense_4_Pipeline_dense_for_flat_fu_199_ap_done, grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state9, ap_CS_fsm_state16)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_dense_4_Pipeline_1_fu_193_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_dense_4_Pipeline_dense_for_flat_fu_199_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state16_blk_assign_proc : process(grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_done)
    begin
        if ((grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_dense_4_Pipeline_1_fu_193_ap_done)
    begin
        if ((grp_dense_4_Pipeline_1_fu_193_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_dense_4_Pipeline_dense_for_flat_fu_199_ap_done)
    begin
        if ((grp_dense_4_Pipeline_dense_for_flat_fu_199_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call13_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call13 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_done, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_done, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    dense_array_addr_28_reg_359 <= ap_const_lv64_1(4 - 1 downto 0);
    dense_array_addr_29_reg_364 <= ap_const_lv64_2(4 - 1 downto 0);
    dense_array_addr_30_reg_369 <= ap_const_lv64_3(4 - 1 downto 0);
    dense_array_addr_31_reg_384 <= ap_const_lv64_4(4 - 1 downto 0);
    dense_array_addr_32_reg_389 <= ap_const_lv64_5(4 - 1 downto 0);
    dense_array_addr_33_reg_404 <= ap_const_lv64_6(4 - 1 downto 0);
    dense_array_addr_34_reg_409 <= ap_const_lv64_7(4 - 1 downto 0);
    dense_array_addr_35_reg_424 <= ap_const_lv64_8(4 - 1 downto 0);
    dense_array_addr_36_reg_429 <= ap_const_lv64_9(4 - 1 downto 0);
    dense_array_addr_reg_354 <= ap_const_lv64_0(4 - 1 downto 0);

    dense_array_address0_assign_proc : process(ap_CS_fsm_state3, dense_array_addr_28_reg_359, ap_CS_fsm_state4, dense_array_addr_30_reg_369, ap_CS_fsm_state5, dense_array_addr_32_reg_389, ap_CS_fsm_state6, dense_array_addr_34_reg_409, ap_CS_fsm_state7, dense_array_addr_36_reg_429, grp_dense_4_Pipeline_1_fu_193_dense_array_address0, grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_dense_array_address0, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            dense_array_address0 <= dense_array_addr_36_reg_429;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            dense_array_address0 <= dense_array_addr_34_reg_409;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_array_address0 <= dense_array_addr_32_reg_389;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dense_array_address0 <= dense_array_addr_30_reg_369;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_array_address0 <= dense_array_addr_28_reg_359;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dense_array_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dense_array_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dense_array_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dense_array_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dense_array_address0 <= ap_const_lv64_1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dense_array_address0 <= grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_dense_array_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_array_address0 <= grp_dense_4_Pipeline_1_fu_193_dense_array_address0;
        else 
            dense_array_address0 <= "XXXX";
        end if; 
    end process;


    dense_array_address1_assign_proc : process(dense_array_addr_reg_354, ap_CS_fsm_state3, dense_array_addr_29_reg_364, ap_CS_fsm_state4, dense_array_addr_31_reg_384, ap_CS_fsm_state5, dense_array_addr_33_reg_404, ap_CS_fsm_state6, dense_array_addr_35_reg_424, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            dense_array_address1 <= dense_array_addr_35_reg_424;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            dense_array_address1 <= dense_array_addr_33_reg_404;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_array_address1 <= dense_array_addr_31_reg_384;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dense_array_address1 <= dense_array_addr_29_reg_364;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_array_address1 <= dense_array_addr_reg_354;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dense_array_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dense_array_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dense_array_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dense_array_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dense_array_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            dense_array_address1 <= "XXXX";
        end if; 
    end process;


    dense_array_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, grp_dense_4_Pipeline_1_fu_193_dense_array_ce0, grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_dense_array_ce0, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            dense_array_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dense_array_ce0 <= grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_dense_array_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_array_ce0 <= grp_dense_4_Pipeline_1_fu_193_dense_array_ce0;
        else 
            dense_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_array_ce1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            dense_array_ce1 <= ap_const_logic_1;
        else 
            dense_array_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_array_d0_assign_proc : process(grp_dense_4_Pipeline_1_fu_193_dense_array_d0, grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_914_out, grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_712_out, grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_510_out, grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_38_out, grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_16_out, ap_CS_fsm_state2, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            dense_array_d0 <= grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_914_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            dense_array_d0 <= grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_712_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_array_d0 <= grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_510_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dense_array_d0 <= grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_38_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_array_d0 <= grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_16_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_array_d0 <= grp_dense_4_Pipeline_1_fu_193_dense_array_d0;
        else 
            dense_array_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_array_d1_assign_proc : process(grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_813_out, grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_611_out, grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_49_out, grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_27_out, grp_dense_4_Pipeline_dense_for_flat_fu_199_add75_out, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            dense_array_d1 <= grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_813_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            dense_array_d1 <= grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_611_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_array_d1 <= grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_49_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dense_array_d1 <= grp_dense_4_Pipeline_dense_for_flat_fu_199_add7_27_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_array_d1 <= grp_dense_4_Pipeline_dense_for_flat_fu_199_add75_out;
        else 
            dense_array_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_array_we0_assign_proc : process(grp_dense_4_Pipeline_1_fu_193_dense_array_we0, ap_CS_fsm_state2, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            dense_array_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_array_we0 <= grp_dense_4_Pipeline_1_fu_193_dense_array_we0;
        else 
            dense_array_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_array_we1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            dense_array_we1 <= ap_const_logic_1;
        else 
            dense_array_we1 <= ap_const_logic_0;
        end if; 
    end process;

    dense_to_softmax_streams_4_din <= grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_dense_to_softmax_streams_4_din;

    dense_to_softmax_streams_4_write_assign_proc : process(grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_dense_to_softmax_streams_4_write, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dense_to_softmax_streams_4_write <= grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_dense_to_softmax_streams_4_write;
        else 
            dense_to_softmax_streams_4_write <= ap_const_logic_0;
        end if; 
    end process;


    flat_to_dense_streams_4_read_assign_proc : process(grp_dense_4_Pipeline_dense_for_flat_fu_199_flat_to_dense_streams_4_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            flat_to_dense_streams_4_read <= grp_dense_4_Pipeline_dense_for_flat_fu_199_flat_to_dense_streams_4_read;
        else 
            flat_to_dense_streams_4_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_dense_4_Pipeline_1_fu_193_ap_start <= grp_dense_4_Pipeline_1_fu_193_ap_start_reg;
    grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_start <= grp_dense_4_Pipeline_VITIS_LOOP_60_2_fu_247_ap_start_reg;
    grp_dense_4_Pipeline_dense_for_flat_fu_199_ap_start <= grp_dense_4_Pipeline_dense_for_flat_fu_199_ap_start_reg;
end behav;
