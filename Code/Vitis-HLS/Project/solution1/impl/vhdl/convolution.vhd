-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity convolution is
port (
    ap_local_block : OUT STD_LOGIC;
    ap_local_deadlock : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    pad_img_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce0 : OUT STD_LOGIC;
    pad_img_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce1 : OUT STD_LOGIC;
    pad_img_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_ce0 : OUT STD_LOGIC;
    weight_buf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_ce1 : OUT STD_LOGIC;
    weight_buf_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    biases_buf : IN STD_LOGIC_VECTOR (31 downto 0);
    filter : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_stream_full_n : IN STD_LOGIC;
    conv_to_pool_stream_write : OUT STD_LOGIC );
end;


architecture behav of convolution is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "convolution_convolution,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=4038,HLS_SYN_TPT=none,HLS_SYN_MEM=40,HLS_SYN_DSP=0,HLS_SYN_FF=8929,HLS_SYN_LUT=18824,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (19 downto 0) := "00000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (19 downto 0) := "00000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (19 downto 0) := "00000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (19 downto 0) := "00001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (19 downto 0) := "00010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (19 downto 0) := "00100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_3F000000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000000000000000000000000";
    constant ap_const_lv32_3E4CCCCD : STD_LOGIC_VECTOR (31 downto 0) := "00111110010011001100110011001101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal weight_buf_load_reg_420 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal weight_buf_load_1_reg_435 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_buf_load_2_reg_440 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal weight_buf_load_3_reg_455 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_buf_load_4_reg_460 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal weight_buf_load_5_reg_475 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_buf_load_6_reg_480 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_buf_load_7_reg_485 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal weight_buf_load_8_reg_490 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal w_fu_369_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_reg_500 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_1_fu_373_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_1_reg_505 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_2_fu_377_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_2_reg_510 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_3_fu_381_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_3_reg_515 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_4_fu_385_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_4_reg_520 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_5_fu_389_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_5_reg_525 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_6_fu_393_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_6_reg_530 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_7_fu_397_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_7_reg_535 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_8_fu_401_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_8_reg_540 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantize_data_fu_160_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal quantized_weight_reg_545 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_quantize_data_fu_171_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal quantized_weight_1_reg_550 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantize_data_fu_182_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal quantized_weight_2_reg_555 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantize_data_fu_193_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal quantized_weight_3_reg_560 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantize_data_fu_204_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal quantized_weight_4_reg_565 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantize_data_fu_215_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal quantized_weight_5_reg_570 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantize_data_fu_226_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal quantized_weight_6_reg_575 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantize_data_fu_237_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal quantized_weight_7_reg_580 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantize_data_fu_248_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal quantized_weight_8_reg_585 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantize_data_fu_259_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal quantized_bias_reg_590 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_339_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_i_reg_595 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_fu_342_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_i1_reg_600 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_345_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_i2_reg_605 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_348_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_i3_reg_610 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_351_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_i4_reg_615 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_354_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_i5_reg_620 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_357_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_i6_reg_625 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_360_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_i7_reg_630 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_363_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_i8_reg_635 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_366_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_i9_reg_640 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_289_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_reg_645 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_fu_294_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_1_reg_650 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_299_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_2_reg_655 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_304_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_3_reg_660 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_309_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_4_reg_665 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_314_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_5_reg_670 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_319_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_6_reg_675 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_324_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_7_reg_680 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_329_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_8_reg_685 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_334_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal biases_reg_690 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantize_data_fu_160_ap_start : STD_LOGIC;
    signal grp_quantize_data_fu_160_ap_done : STD_LOGIC;
    signal grp_quantize_data_fu_160_ap_idle : STD_LOGIC;
    signal grp_quantize_data_fu_160_ap_ready : STD_LOGIC;
    signal grp_quantize_data_fu_171_ap_start : STD_LOGIC;
    signal grp_quantize_data_fu_171_ap_done : STD_LOGIC;
    signal grp_quantize_data_fu_171_ap_idle : STD_LOGIC;
    signal grp_quantize_data_fu_171_ap_ready : STD_LOGIC;
    signal grp_quantize_data_fu_182_ap_start : STD_LOGIC;
    signal grp_quantize_data_fu_182_ap_done : STD_LOGIC;
    signal grp_quantize_data_fu_182_ap_idle : STD_LOGIC;
    signal grp_quantize_data_fu_182_ap_ready : STD_LOGIC;
    signal grp_quantize_data_fu_193_ap_start : STD_LOGIC;
    signal grp_quantize_data_fu_193_ap_done : STD_LOGIC;
    signal grp_quantize_data_fu_193_ap_idle : STD_LOGIC;
    signal grp_quantize_data_fu_193_ap_ready : STD_LOGIC;
    signal grp_quantize_data_fu_204_ap_start : STD_LOGIC;
    signal grp_quantize_data_fu_204_ap_done : STD_LOGIC;
    signal grp_quantize_data_fu_204_ap_idle : STD_LOGIC;
    signal grp_quantize_data_fu_204_ap_ready : STD_LOGIC;
    signal grp_quantize_data_fu_215_ap_start : STD_LOGIC;
    signal grp_quantize_data_fu_215_ap_done : STD_LOGIC;
    signal grp_quantize_data_fu_215_ap_idle : STD_LOGIC;
    signal grp_quantize_data_fu_215_ap_ready : STD_LOGIC;
    signal grp_quantize_data_fu_226_ap_start : STD_LOGIC;
    signal grp_quantize_data_fu_226_ap_done : STD_LOGIC;
    signal grp_quantize_data_fu_226_ap_idle : STD_LOGIC;
    signal grp_quantize_data_fu_226_ap_ready : STD_LOGIC;
    signal grp_quantize_data_fu_237_ap_start : STD_LOGIC;
    signal grp_quantize_data_fu_237_ap_done : STD_LOGIC;
    signal grp_quantize_data_fu_237_ap_idle : STD_LOGIC;
    signal grp_quantize_data_fu_237_ap_ready : STD_LOGIC;
    signal grp_quantize_data_fu_248_ap_start : STD_LOGIC;
    signal grp_quantize_data_fu_248_ap_done : STD_LOGIC;
    signal grp_quantize_data_fu_248_ap_idle : STD_LOGIC;
    signal grp_quantize_data_fu_248_ap_ready : STD_LOGIC;
    signal grp_quantize_data_fu_259_ap_start : STD_LOGIC;
    signal grp_quantize_data_fu_259_ap_done : STD_LOGIC;
    signal grp_quantize_data_fu_259_ap_idle : STD_LOGIC;
    signal grp_quantize_data_fu_259_ap_ready : STD_LOGIC;
    signal grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_start : STD_LOGIC;
    signal grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_done : STD_LOGIC;
    signal grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_idle : STD_LOGIC;
    signal grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_ready : STD_LOGIC;
    signal grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_pad_img_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_pad_img_ce0 : STD_LOGIC;
    signal grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_pad_img_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_pad_img_ce1 : STD_LOGIC;
    signal grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_conv_to_pool_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_conv_to_pool_stream_write : STD_LOGIC;
    signal grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_289_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_289_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_289_p_ce : STD_LOGIC;
    signal grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_294_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_294_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_294_p_ce : STD_LOGIC;
    signal grp_quantize_data_fu_160_ap_start_reg : STD_LOGIC := '0';
    signal grp_quantize_data_fu_171_ap_start_reg : STD_LOGIC := '0';
    signal grp_quantize_data_fu_182_ap_start_reg : STD_LOGIC := '0';
    signal grp_quantize_data_fu_193_ap_start_reg : STD_LOGIC := '0';
    signal grp_quantize_data_fu_204_ap_start_reg : STD_LOGIC := '0';
    signal grp_quantize_data_fu_215_ap_start_reg : STD_LOGIC := '0';
    signal grp_quantize_data_fu_226_ap_start_reg : STD_LOGIC := '0';
    signal grp_quantize_data_fu_237_ap_start_reg : STD_LOGIC := '0';
    signal grp_quantize_data_fu_248_ap_start_reg : STD_LOGIC := '0';
    signal grp_quantize_data_fu_259_ap_start_reg : STD_LOGIC := '0';
    signal grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_fu_289_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_289_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_fu_294_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_294_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_fu_289_ce : STD_LOGIC;
    signal grp_fu_294_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_block_state8_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component convolution_quantize_data IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        value_r : IN STD_LOGIC_VECTOR (31 downto 0);
        value_scale : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component convolution_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pad_img_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img_ce0 : OUT STD_LOGIC;
        pad_img_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img_ce1 : OUT STD_LOGIC;
        pad_img_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_3 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_5 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_6 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_7 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_8 : IN STD_LOGIC_VECTOR (31 downto 0);
        biases : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_stream_full_n : IN STD_LOGIC;
        conv_to_pool_stream_write : OUT STD_LOGIC;
        grp_fu_289_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_289_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_289_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_289_p_ce : OUT STD_LOGIC;
        grp_fu_294_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_294_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_294_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_294_p_ce : OUT STD_LOGIC );
    end component;


    component convolution_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component convolution_sitofp_32ns_32_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_quantize_data_fu_160 : component convolution_quantize_data
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantize_data_fu_160_ap_start,
        ap_done => grp_quantize_data_fu_160_ap_done,
        ap_idle => grp_quantize_data_fu_160_ap_idle,
        ap_ready => grp_quantize_data_fu_160_ap_ready,
        value_r => w_reg_500,
        value_scale => ap_const_lv32_3F000000,
        ap_return => grp_quantize_data_fu_160_ap_return);

    grp_quantize_data_fu_171 : component convolution_quantize_data
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantize_data_fu_171_ap_start,
        ap_done => grp_quantize_data_fu_171_ap_done,
        ap_idle => grp_quantize_data_fu_171_ap_idle,
        ap_ready => grp_quantize_data_fu_171_ap_ready,
        value_r => w_1_reg_505,
        value_scale => ap_const_lv32_3F000000,
        ap_return => grp_quantize_data_fu_171_ap_return);

    grp_quantize_data_fu_182 : component convolution_quantize_data
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantize_data_fu_182_ap_start,
        ap_done => grp_quantize_data_fu_182_ap_done,
        ap_idle => grp_quantize_data_fu_182_ap_idle,
        ap_ready => grp_quantize_data_fu_182_ap_ready,
        value_r => w_2_reg_510,
        value_scale => ap_const_lv32_3F000000,
        ap_return => grp_quantize_data_fu_182_ap_return);

    grp_quantize_data_fu_193 : component convolution_quantize_data
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantize_data_fu_193_ap_start,
        ap_done => grp_quantize_data_fu_193_ap_done,
        ap_idle => grp_quantize_data_fu_193_ap_idle,
        ap_ready => grp_quantize_data_fu_193_ap_ready,
        value_r => w_3_reg_515,
        value_scale => ap_const_lv32_3F000000,
        ap_return => grp_quantize_data_fu_193_ap_return);

    grp_quantize_data_fu_204 : component convolution_quantize_data
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantize_data_fu_204_ap_start,
        ap_done => grp_quantize_data_fu_204_ap_done,
        ap_idle => grp_quantize_data_fu_204_ap_idle,
        ap_ready => grp_quantize_data_fu_204_ap_ready,
        value_r => w_4_reg_520,
        value_scale => ap_const_lv32_3F000000,
        ap_return => grp_quantize_data_fu_204_ap_return);

    grp_quantize_data_fu_215 : component convolution_quantize_data
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantize_data_fu_215_ap_start,
        ap_done => grp_quantize_data_fu_215_ap_done,
        ap_idle => grp_quantize_data_fu_215_ap_idle,
        ap_ready => grp_quantize_data_fu_215_ap_ready,
        value_r => w_5_reg_525,
        value_scale => ap_const_lv32_3F000000,
        ap_return => grp_quantize_data_fu_215_ap_return);

    grp_quantize_data_fu_226 : component convolution_quantize_data
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantize_data_fu_226_ap_start,
        ap_done => grp_quantize_data_fu_226_ap_done,
        ap_idle => grp_quantize_data_fu_226_ap_idle,
        ap_ready => grp_quantize_data_fu_226_ap_ready,
        value_r => w_6_reg_530,
        value_scale => ap_const_lv32_3F000000,
        ap_return => grp_quantize_data_fu_226_ap_return);

    grp_quantize_data_fu_237 : component convolution_quantize_data
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantize_data_fu_237_ap_start,
        ap_done => grp_quantize_data_fu_237_ap_done,
        ap_idle => grp_quantize_data_fu_237_ap_idle,
        ap_ready => grp_quantize_data_fu_237_ap_ready,
        value_r => w_7_reg_535,
        value_scale => ap_const_lv32_3F000000,
        ap_return => grp_quantize_data_fu_237_ap_return);

    grp_quantize_data_fu_248 : component convolution_quantize_data
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantize_data_fu_248_ap_start,
        ap_done => grp_quantize_data_fu_248_ap_done,
        ap_idle => grp_quantize_data_fu_248_ap_idle,
        ap_ready => grp_quantize_data_fu_248_ap_ready,
        value_r => w_8_reg_540,
        value_scale => ap_const_lv32_3F000000,
        ap_return => grp_quantize_data_fu_248_ap_return);

    grp_quantize_data_fu_259 : component convolution_quantize_data
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantize_data_fu_259_ap_start,
        ap_done => grp_quantize_data_fu_259_ap_done,
        ap_idle => grp_quantize_data_fu_259_ap_idle,
        ap_ready => grp_quantize_data_fu_259_ap_ready,
        value_r => biases_buf,
        value_scale => ap_const_lv32_3E4CCCCD,
        ap_return => grp_quantize_data_fu_259_ap_return);

    grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271 : component convolution_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_start,
        ap_done => grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_done,
        ap_idle => grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_idle,
        ap_ready => grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_ready,
        pad_img_address0 => grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_pad_img_address0,
        pad_img_ce0 => grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_pad_img_ce0,
        pad_img_q0 => pad_img_q0,
        pad_img_address1 => grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_pad_img_address1,
        pad_img_ce1 => grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_pad_img_ce1,
        pad_img_q1 => pad_img_q1,
        weight => weight_reg_645,
        weight_1 => weight_1_reg_650,
        weight_2 => weight_2_reg_655,
        weight_3 => weight_3_reg_660,
        weight_4 => weight_4_reg_665,
        weight_5 => weight_5_reg_670,
        weight_6 => weight_6_reg_675,
        weight_7 => weight_7_reg_680,
        weight_8 => weight_8_reg_685,
        biases => biases_reg_690,
        conv_to_pool_stream_din => grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_conv_to_pool_stream_din,
        conv_to_pool_stream_full_n => conv_to_pool_stream_full_n,
        conv_to_pool_stream_write => grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_conv_to_pool_stream_write,
        grp_fu_289_p_din0 => grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_289_p_din0,
        grp_fu_289_p_din1 => grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_289_p_din1,
        grp_fu_289_p_dout0 => grp_fu_289_p2,
        grp_fu_289_p_ce => grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_289_p_ce,
        grp_fu_294_p_din0 => grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_294_p_din0,
        grp_fu_294_p_din1 => grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_294_p_din1,
        grp_fu_294_p_dout0 => grp_fu_294_p2,
        grp_fu_294_p_ce => grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_294_p_ce);

    fmul_32ns_32ns_32_4_max_dsp_1_U28 : component convolution_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_289_p0,
        din1 => grp_fu_289_p1,
        ce => grp_fu_289_ce,
        dout => grp_fu_289_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U29 : component convolution_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_294_p0,
        din1 => grp_fu_294_p1,
        ce => grp_fu_294_ce,
        dout => grp_fu_294_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U30 : component convolution_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_i2_reg_605,
        din1 => ap_const_lv32_3F000000,
        ce => ap_const_logic_1,
        dout => grp_fu_299_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U31 : component convolution_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_i3_reg_610,
        din1 => ap_const_lv32_3F000000,
        ce => ap_const_logic_1,
        dout => grp_fu_304_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U32 : component convolution_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_i4_reg_615,
        din1 => ap_const_lv32_3F000000,
        ce => ap_const_logic_1,
        dout => grp_fu_309_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U33 : component convolution_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_i5_reg_620,
        din1 => ap_const_lv32_3F000000,
        ce => ap_const_logic_1,
        dout => grp_fu_314_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U34 : component convolution_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_i6_reg_625,
        din1 => ap_const_lv32_3F000000,
        ce => ap_const_logic_1,
        dout => grp_fu_319_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U35 : component convolution_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_i7_reg_630,
        din1 => ap_const_lv32_3F000000,
        ce => ap_const_logic_1,
        dout => grp_fu_324_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U36 : component convolution_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_i8_reg_635,
        din1 => ap_const_lv32_3F000000,
        ce => ap_const_logic_1,
        dout => grp_fu_329_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U37 : component convolution_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_i9_reg_640,
        din1 => ap_const_lv32_3E4CCCCD,
        ce => ap_const_logic_1,
        dout => grp_fu_334_p2);

    sitofp_32ns_32_6_no_dsp_1_U38 : component convolution_sitofp_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => quantized_weight_reg_545,
        ce => ap_const_logic_1,
        dout => grp_fu_339_p1);

    sitofp_32ns_32_6_no_dsp_1_U39 : component convolution_sitofp_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => quantized_weight_1_reg_550,
        ce => ap_const_logic_1,
        dout => grp_fu_342_p1);

    sitofp_32ns_32_6_no_dsp_1_U40 : component convolution_sitofp_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => quantized_weight_2_reg_555,
        ce => ap_const_logic_1,
        dout => grp_fu_345_p1);

    sitofp_32ns_32_6_no_dsp_1_U41 : component convolution_sitofp_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => quantized_weight_3_reg_560,
        ce => ap_const_logic_1,
        dout => grp_fu_348_p1);

    sitofp_32ns_32_6_no_dsp_1_U42 : component convolution_sitofp_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => quantized_weight_4_reg_565,
        ce => ap_const_logic_1,
        dout => grp_fu_351_p1);

    sitofp_32ns_32_6_no_dsp_1_U43 : component convolution_sitofp_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => quantized_weight_5_reg_570,
        ce => ap_const_logic_1,
        dout => grp_fu_354_p1);

    sitofp_32ns_32_6_no_dsp_1_U44 : component convolution_sitofp_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => quantized_weight_6_reg_575,
        ce => ap_const_logic_1,
        dout => grp_fu_357_p1);

    sitofp_32ns_32_6_no_dsp_1_U45 : component convolution_sitofp_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => quantized_weight_7_reg_580,
        ce => ap_const_logic_1,
        dout => grp_fu_360_p1);

    sitofp_32ns_32_6_no_dsp_1_U46 : component convolution_sitofp_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => quantized_weight_8_reg_585,
        ce => ap_const_logic_1,
        dout => grp_fu_363_p1);

    sitofp_32ns_32_6_no_dsp_1_U47 : component convolution_sitofp_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => quantized_bias_reg_590,
        ce => ap_const_logic_1,
        dout => grp_fu_366_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                    grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_ready = ap_const_logic_1)) then 
                    grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_quantize_data_fu_160_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_quantize_data_fu_160_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_quantize_data_fu_160_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_quantize_data_fu_160_ap_ready = ap_const_logic_1)) then 
                    grp_quantize_data_fu_160_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_quantize_data_fu_171_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_quantize_data_fu_171_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_quantize_data_fu_171_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_quantize_data_fu_171_ap_ready = ap_const_logic_1)) then 
                    grp_quantize_data_fu_171_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_quantize_data_fu_182_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_quantize_data_fu_182_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_quantize_data_fu_182_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_quantize_data_fu_182_ap_ready = ap_const_logic_1)) then 
                    grp_quantize_data_fu_182_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_quantize_data_fu_193_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_quantize_data_fu_193_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_quantize_data_fu_193_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_quantize_data_fu_193_ap_ready = ap_const_logic_1)) then 
                    grp_quantize_data_fu_193_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_quantize_data_fu_204_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_quantize_data_fu_204_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_quantize_data_fu_204_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_quantize_data_fu_204_ap_ready = ap_const_logic_1)) then 
                    grp_quantize_data_fu_204_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_quantize_data_fu_215_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_quantize_data_fu_215_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_quantize_data_fu_215_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_quantize_data_fu_215_ap_ready = ap_const_logic_1)) then 
                    grp_quantize_data_fu_215_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_quantize_data_fu_226_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_quantize_data_fu_226_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_quantize_data_fu_226_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_quantize_data_fu_226_ap_ready = ap_const_logic_1)) then 
                    grp_quantize_data_fu_226_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_quantize_data_fu_237_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_quantize_data_fu_237_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_quantize_data_fu_237_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_quantize_data_fu_237_ap_ready = ap_const_logic_1)) then 
                    grp_quantize_data_fu_237_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_quantize_data_fu_248_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_quantize_data_fu_248_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_quantize_data_fu_248_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_quantize_data_fu_248_ap_ready = ap_const_logic_1)) then 
                    grp_quantize_data_fu_248_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_quantize_data_fu_259_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_quantize_data_fu_259_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_quantize_data_fu_259_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_quantize_data_fu_259_ap_ready = ap_const_logic_1)) then 
                    grp_quantize_data_fu_259_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                biases_reg_690 <= grp_fu_334_p2;
                weight_1_reg_650 <= grp_fu_294_p2;
                weight_2_reg_655 <= grp_fu_299_p2;
                weight_3_reg_660 <= grp_fu_304_p2;
                weight_4_reg_665 <= grp_fu_309_p2;
                weight_5_reg_670 <= grp_fu_314_p2;
                weight_6_reg_675 <= grp_fu_319_p2;
                weight_7_reg_680 <= grp_fu_324_p2;
                weight_8_reg_685 <= grp_fu_329_p2;
                weight_reg_645 <= grp_fu_289_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                conv_i1_reg_600 <= grp_fu_342_p1;
                conv_i2_reg_605 <= grp_fu_345_p1;
                conv_i3_reg_610 <= grp_fu_348_p1;
                conv_i4_reg_615 <= grp_fu_351_p1;
                conv_i5_reg_620 <= grp_fu_354_p1;
                conv_i6_reg_625 <= grp_fu_357_p1;
                conv_i7_reg_630 <= grp_fu_360_p1;
                conv_i8_reg_635 <= grp_fu_363_p1;
                conv_i9_reg_640 <= grp_fu_366_p1;
                conv_i_reg_595 <= grp_fu_339_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                quantized_bias_reg_590 <= grp_quantize_data_fu_259_ap_return;
                quantized_weight_1_reg_550 <= grp_quantize_data_fu_171_ap_return;
                quantized_weight_2_reg_555 <= grp_quantize_data_fu_182_ap_return;
                quantized_weight_3_reg_560 <= grp_quantize_data_fu_193_ap_return;
                quantized_weight_4_reg_565 <= grp_quantize_data_fu_204_ap_return;
                quantized_weight_5_reg_570 <= grp_quantize_data_fu_215_ap_return;
                quantized_weight_6_reg_575 <= grp_quantize_data_fu_226_ap_return;
                quantized_weight_7_reg_580 <= grp_quantize_data_fu_237_ap_return;
                quantized_weight_8_reg_585 <= grp_quantize_data_fu_248_ap_return;
                quantized_weight_reg_545 <= grp_quantize_data_fu_160_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                w_1_reg_505 <= w_1_fu_373_p1;
                w_2_reg_510 <= w_2_fu_377_p1;
                w_3_reg_515 <= w_3_fu_381_p1;
                w_4_reg_520 <= w_4_fu_385_p1;
                w_5_reg_525 <= w_5_fu_389_p1;
                w_6_reg_530 <= w_6_fu_393_p1;
                w_7_reg_535 <= w_7_fu_397_p1;
                w_8_reg_540 <= w_8_fu_401_p1;
                w_reg_500 <= w_fu_369_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                weight_buf_load_1_reg_435 <= weight_buf_q1;
                weight_buf_load_2_reg_440 <= weight_buf_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                weight_buf_load_3_reg_455 <= weight_buf_q0;
                weight_buf_load_4_reg_460 <= weight_buf_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                weight_buf_load_5_reg_475 <= weight_buf_q0;
                weight_buf_load_6_reg_480 <= weight_buf_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                weight_buf_load_7_reg_485 <= weight_buf_q0;
                weight_buf_load_8_reg_490 <= weight_buf_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                weight_buf_load_reg_420 <= weight_buf_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state8, grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_done, ap_CS_fsm_state20, ap_block_state8_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state20_blk_assign_proc : process(grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_done)
    begin
        if ((grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state20_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state20_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(ap_block_state8_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state8_on_subcall_done)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state8_on_subcall_done_assign_proc : process(grp_quantize_data_fu_160_ap_done, grp_quantize_data_fu_171_ap_done, grp_quantize_data_fu_182_ap_done, grp_quantize_data_fu_193_ap_done, grp_quantize_data_fu_204_ap_done, grp_quantize_data_fu_215_ap_done, grp_quantize_data_fu_226_ap_done, grp_quantize_data_fu_237_ap_done, grp_quantize_data_fu_248_ap_done, grp_quantize_data_fu_259_ap_done)
    begin
                ap_block_state8_on_subcall_done <= ((grp_quantize_data_fu_259_ap_done = ap_const_logic_0) or (grp_quantize_data_fu_248_ap_done = ap_const_logic_0) or (grp_quantize_data_fu_237_ap_done = ap_const_logic_0) or (grp_quantize_data_fu_226_ap_done = ap_const_logic_0) or (grp_quantize_data_fu_215_ap_done = ap_const_logic_0) or (grp_quantize_data_fu_204_ap_done = ap_const_logic_0) or (grp_quantize_data_fu_193_ap_done = ap_const_logic_0) or (grp_quantize_data_fu_182_ap_done = ap_const_logic_0) or (grp_quantize_data_fu_171_ap_done = ap_const_logic_0) or (grp_quantize_data_fu_160_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_done, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) and (grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_logic_0;

    ap_ready_assign_proc : process(grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_done, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) and (grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    conv_to_pool_stream_din <= grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_conv_to_pool_stream_din;

    conv_to_pool_stream_write_assign_proc : process(grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_conv_to_pool_stream_write, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            conv_to_pool_stream_write <= grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_conv_to_pool_stream_write;
        else 
            conv_to_pool_stream_write <= ap_const_logic_0;
        end if; 
    end process;

    grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_start <= grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_ap_start_reg;

    grp_fu_289_ce_assign_proc : process(grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_289_p_ce, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_289_ce <= grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_289_p_ce;
        else 
            grp_fu_289_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_289_p0_assign_proc : process(conv_i_reg_595, grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_289_p_din0, ap_CS_fsm_state20, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_289_p0 <= grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_289_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_289_p0 <= conv_i_reg_595;
        else 
            grp_fu_289_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_289_p1_assign_proc : process(grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_289_p_din1, ap_CS_fsm_state20, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_289_p1 <= grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_289_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_289_p1 <= ap_const_lv32_3F000000;
        else 
            grp_fu_289_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_294_ce_assign_proc : process(grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_294_p_ce, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_294_ce <= grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_294_p_ce;
        else 
            grp_fu_294_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_294_p0_assign_proc : process(conv_i1_reg_600, grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_294_p_din0, ap_CS_fsm_state20, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_294_p0 <= grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_294_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_294_p0 <= conv_i1_reg_600;
        else 
            grp_fu_294_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_294_p1_assign_proc : process(grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_294_p_din1, ap_CS_fsm_state20, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_294_p1 <= grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_grp_fu_294_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_294_p1 <= ap_const_lv32_3F000000;
        else 
            grp_fu_294_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_quantize_data_fu_160_ap_start <= grp_quantize_data_fu_160_ap_start_reg;
    grp_quantize_data_fu_171_ap_start <= grp_quantize_data_fu_171_ap_start_reg;
    grp_quantize_data_fu_182_ap_start <= grp_quantize_data_fu_182_ap_start_reg;
    grp_quantize_data_fu_193_ap_start <= grp_quantize_data_fu_193_ap_start_reg;
    grp_quantize_data_fu_204_ap_start <= grp_quantize_data_fu_204_ap_start_reg;
    grp_quantize_data_fu_215_ap_start <= grp_quantize_data_fu_215_ap_start_reg;
    grp_quantize_data_fu_226_ap_start <= grp_quantize_data_fu_226_ap_start_reg;
    grp_quantize_data_fu_237_ap_start <= grp_quantize_data_fu_237_ap_start_reg;
    grp_quantize_data_fu_248_ap_start <= grp_quantize_data_fu_248_ap_start_reg;
    grp_quantize_data_fu_259_ap_start <= grp_quantize_data_fu_259_ap_start_reg;
    pad_img_address0 <= grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_pad_img_address0;
    pad_img_address1 <= grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_pad_img_address1;
    pad_img_ce0 <= grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_pad_img_ce0;
    pad_img_ce1 <= grp_convolution_Pipeline_conv_for_rows_win_for_rows_win_for_cols_fu_271_pad_img_ce1;
    w_1_fu_373_p1 <= weight_buf_load_1_reg_435;
    w_2_fu_377_p1 <= weight_buf_load_2_reg_440;
    w_3_fu_381_p1 <= weight_buf_load_3_reg_455;
    w_4_fu_385_p1 <= weight_buf_load_4_reg_460;
    w_5_fu_389_p1 <= weight_buf_load_5_reg_475;
    w_6_fu_393_p1 <= weight_buf_load_6_reg_480;
    w_7_fu_397_p1 <= weight_buf_load_7_reg_485;
    w_8_fu_401_p1 <= weight_buf_load_8_reg_490;
    w_fu_369_p1 <= weight_buf_load_reg_420;

    weight_buf_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            weight_buf_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            weight_buf_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            weight_buf_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            weight_buf_address0 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            weight_buf_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            weight_buf_address0 <= "XXXX";
        end if; 
    end process;


    weight_buf_address1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            weight_buf_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            weight_buf_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            weight_buf_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            weight_buf_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            weight_buf_address1 <= "XXXX";
        end if; 
    end process;


    weight_buf_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            weight_buf_ce0 <= ap_const_logic_1;
        else 
            weight_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buf_ce1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            weight_buf_ce1 <= ap_const_logic_1;
        else 
            weight_buf_ce1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
