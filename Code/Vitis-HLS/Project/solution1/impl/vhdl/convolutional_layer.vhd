-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity convolutional_layer is
port (
    ap_local_block : OUT STD_LOGIC;
    ap_local_deadlock : OUT STD_LOGIC;
    pad_img_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce0 : OUT STD_LOGIC;
    pad_img_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_we0 : OUT STD_LOGIC;
    pad_img_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img_ce1 : OUT STD_LOGIC;
    pad_img_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img_we1 : OUT STD_LOGIC;
    pad_img1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img1_ce0 : OUT STD_LOGIC;
    pad_img1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_we0 : OUT STD_LOGIC;
    pad_img1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img1_ce1 : OUT STD_LOGIC;
    pad_img1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_we1 : OUT STD_LOGIC;
    pad_img2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce0 : OUT STD_LOGIC;
    pad_img2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_we0 : OUT STD_LOGIC;
    pad_img2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img2_ce1 : OUT STD_LOGIC;
    pad_img2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_we1 : OUT STD_LOGIC;
    pad_img3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img3_ce0 : OUT STD_LOGIC;
    pad_img3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_we0 : OUT STD_LOGIC;
    pad_img3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img3_ce1 : OUT STD_LOGIC;
    pad_img3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_we1 : OUT STD_LOGIC;
    pad_img4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img4_ce0 : OUT STD_LOGIC;
    pad_img4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_we0 : OUT STD_LOGIC;
    pad_img4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img4_ce1 : OUT STD_LOGIC;
    pad_img4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img4_we1 : OUT STD_LOGIC;
    pad_img5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img5_ce0 : OUT STD_LOGIC;
    pad_img5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_we0 : OUT STD_LOGIC;
    pad_img5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img5_ce1 : OUT STD_LOGIC;
    pad_img5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img5_we1 : OUT STD_LOGIC;
    pad_img6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img6_ce0 : OUT STD_LOGIC;
    pad_img6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_we0 : OUT STD_LOGIC;
    pad_img6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img6_ce1 : OUT STD_LOGIC;
    pad_img6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img6_we1 : OUT STD_LOGIC;
    pad_img7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img7_ce0 : OUT STD_LOGIC;
    pad_img7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_we0 : OUT STD_LOGIC;
    pad_img7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pad_img7_ce1 : OUT STD_LOGIC;
    pad_img7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img7_we1 : OUT STD_LOGIC;
    weight_buf_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_0_ce0 : OUT STD_LOGIC;
    weight_buf_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_0_we0 : OUT STD_LOGIC;
    weight_buf_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_0_ce1 : OUT STD_LOGIC;
    weight_buf_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_0_we1 : OUT STD_LOGIC;
    weight_buf_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_1_ce0 : OUT STD_LOGIC;
    weight_buf_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_1_we0 : OUT STD_LOGIC;
    weight_buf_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_1_ce1 : OUT STD_LOGIC;
    weight_buf_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_1_we1 : OUT STD_LOGIC;
    weight_buf_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_2_ce0 : OUT STD_LOGIC;
    weight_buf_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_2_we0 : OUT STD_LOGIC;
    weight_buf_2_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_2_ce1 : OUT STD_LOGIC;
    weight_buf_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_2_we1 : OUT STD_LOGIC;
    weight_buf_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_3_ce0 : OUT STD_LOGIC;
    weight_buf_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_3_we0 : OUT STD_LOGIC;
    weight_buf_3_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_3_ce1 : OUT STD_LOGIC;
    weight_buf_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_3_we1 : OUT STD_LOGIC;
    weight_buf_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_4_ce0 : OUT STD_LOGIC;
    weight_buf_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_4_we0 : OUT STD_LOGIC;
    weight_buf_4_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_4_ce1 : OUT STD_LOGIC;
    weight_buf_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_4_we1 : OUT STD_LOGIC;
    weight_buf_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_5_ce0 : OUT STD_LOGIC;
    weight_buf_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_5_we0 : OUT STD_LOGIC;
    weight_buf_5_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_5_ce1 : OUT STD_LOGIC;
    weight_buf_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_5_we1 : OUT STD_LOGIC;
    weight_buf_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_6_ce0 : OUT STD_LOGIC;
    weight_buf_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_6_we0 : OUT STD_LOGIC;
    weight_buf_6_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_6_ce1 : OUT STD_LOGIC;
    weight_buf_6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_6_we1 : OUT STD_LOGIC;
    weight_buf_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_7_ce0 : OUT STD_LOGIC;
    weight_buf_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_7_we0 : OUT STD_LOGIC;
    weight_buf_7_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weight_buf_7_ce1 : OUT STD_LOGIC;
    weight_buf_7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_buf_7_we1 : OUT STD_LOGIC;
    biases_buf_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    biases_buf_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    biases_buf_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    biases_buf_3 : IN STD_LOGIC_VECTOR (31 downto 0);
    biases_buf_4 : IN STD_LOGIC_VECTOR (31 downto 0);
    biases_buf_5 : IN STD_LOGIC_VECTOR (31 downto 0);
    biases_buf_6 : IN STD_LOGIC_VECTOR (31 downto 0);
    biases_buf_7 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_0_full_n : IN STD_LOGIC;
    conv_to_pool_streams_0_write : OUT STD_LOGIC;
    conv_to_pool_streams_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_1_full_n : IN STD_LOGIC;
    conv_to_pool_streams_1_write : OUT STD_LOGIC;
    conv_to_pool_streams_2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_2_full_n : IN STD_LOGIC;
    conv_to_pool_streams_2_write : OUT STD_LOGIC;
    conv_to_pool_streams_3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_3_full_n : IN STD_LOGIC;
    conv_to_pool_streams_3_write : OUT STD_LOGIC;
    conv_to_pool_streams_4_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_4_full_n : IN STD_LOGIC;
    conv_to_pool_streams_4_write : OUT STD_LOGIC;
    conv_to_pool_streams_5_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_5_full_n : IN STD_LOGIC;
    conv_to_pool_streams_5_write : OUT STD_LOGIC;
    conv_to_pool_streams_6_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_6_full_n : IN STD_LOGIC;
    conv_to_pool_streams_6_write : OUT STD_LOGIC;
    conv_to_pool_streams_7_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_to_pool_streams_7_full_n : IN STD_LOGIC;
    conv_to_pool_streams_7_write : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of convolutional_layer is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "convolutional_layer_convolutional_layer,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.241250,HLS_SYN_LAT=4003,HLS_SYN_TPT=4004,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=22960,HLS_SYN_LUT=18990,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal convolution_U0_ap_start : STD_LOGIC;
    signal convolution_U0_ap_done : STD_LOGIC;
    signal convolution_U0_ap_continue : STD_LOGIC;
    signal convolution_U0_ap_idle : STD_LOGIC;
    signal convolution_U0_ap_ready : STD_LOGIC;
    signal convolution_U0_pad_img_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_U0_pad_img_ce0 : STD_LOGIC;
    signal convolution_U0_pad_img_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_U0_pad_img_ce1 : STD_LOGIC;
    signal convolution_U0_weight_buf_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_U0_weight_buf_0_ce0 : STD_LOGIC;
    signal convolution_U0_weight_buf_0_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_U0_weight_buf_0_ce1 : STD_LOGIC;
    signal convolution_U0_conv_to_pool_streams_0_din : STD_LOGIC_VECTOR (31 downto 0);
    signal convolution_U0_conv_to_pool_streams_0_write : STD_LOGIC;
    signal convolution_1_U0_ap_start : STD_LOGIC;
    signal convolution_1_U0_ap_done : STD_LOGIC;
    signal convolution_1_U0_ap_continue : STD_LOGIC;
    signal convolution_1_U0_ap_idle : STD_LOGIC;
    signal convolution_1_U0_ap_ready : STD_LOGIC;
    signal convolution_1_U0_pad_img1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_1_U0_pad_img1_ce0 : STD_LOGIC;
    signal convolution_1_U0_pad_img1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_1_U0_pad_img1_ce1 : STD_LOGIC;
    signal convolution_1_U0_weight_buf_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_1_U0_weight_buf_1_ce0 : STD_LOGIC;
    signal convolution_1_U0_weight_buf_1_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_1_U0_weight_buf_1_ce1 : STD_LOGIC;
    signal convolution_1_U0_conv_to_pool_streams_1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal convolution_1_U0_conv_to_pool_streams_1_write : STD_LOGIC;
    signal convolution_2_U0_ap_start : STD_LOGIC;
    signal convolution_2_U0_ap_done : STD_LOGIC;
    signal convolution_2_U0_ap_continue : STD_LOGIC;
    signal convolution_2_U0_ap_idle : STD_LOGIC;
    signal convolution_2_U0_ap_ready : STD_LOGIC;
    signal convolution_2_U0_pad_img2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_2_U0_pad_img2_ce0 : STD_LOGIC;
    signal convolution_2_U0_pad_img2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_2_U0_pad_img2_ce1 : STD_LOGIC;
    signal convolution_2_U0_weight_buf_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_2_U0_weight_buf_2_ce0 : STD_LOGIC;
    signal convolution_2_U0_weight_buf_2_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_2_U0_weight_buf_2_ce1 : STD_LOGIC;
    signal convolution_2_U0_conv_to_pool_streams_2_din : STD_LOGIC_VECTOR (31 downto 0);
    signal convolution_2_U0_conv_to_pool_streams_2_write : STD_LOGIC;
    signal convolution_3_U0_ap_start : STD_LOGIC;
    signal convolution_3_U0_ap_done : STD_LOGIC;
    signal convolution_3_U0_ap_continue : STD_LOGIC;
    signal convolution_3_U0_ap_idle : STD_LOGIC;
    signal convolution_3_U0_ap_ready : STD_LOGIC;
    signal convolution_3_U0_pad_img3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_3_U0_pad_img3_ce0 : STD_LOGIC;
    signal convolution_3_U0_pad_img3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_3_U0_pad_img3_ce1 : STD_LOGIC;
    signal convolution_3_U0_weight_buf_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_3_U0_weight_buf_3_ce0 : STD_LOGIC;
    signal convolution_3_U0_weight_buf_3_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_3_U0_weight_buf_3_ce1 : STD_LOGIC;
    signal convolution_3_U0_conv_to_pool_streams_3_din : STD_LOGIC_VECTOR (31 downto 0);
    signal convolution_3_U0_conv_to_pool_streams_3_write : STD_LOGIC;
    signal convolution_4_U0_ap_start : STD_LOGIC;
    signal convolution_4_U0_ap_done : STD_LOGIC;
    signal convolution_4_U0_ap_continue : STD_LOGIC;
    signal convolution_4_U0_ap_idle : STD_LOGIC;
    signal convolution_4_U0_ap_ready : STD_LOGIC;
    signal convolution_4_U0_pad_img4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_4_U0_pad_img4_ce0 : STD_LOGIC;
    signal convolution_4_U0_pad_img4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_4_U0_pad_img4_ce1 : STD_LOGIC;
    signal convolution_4_U0_weight_buf_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_4_U0_weight_buf_4_ce0 : STD_LOGIC;
    signal convolution_4_U0_weight_buf_4_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_4_U0_weight_buf_4_ce1 : STD_LOGIC;
    signal convolution_4_U0_conv_to_pool_streams_4_din : STD_LOGIC_VECTOR (31 downto 0);
    signal convolution_4_U0_conv_to_pool_streams_4_write : STD_LOGIC;
    signal convolution_5_U0_ap_start : STD_LOGIC;
    signal convolution_5_U0_ap_done : STD_LOGIC;
    signal convolution_5_U0_ap_continue : STD_LOGIC;
    signal convolution_5_U0_ap_idle : STD_LOGIC;
    signal convolution_5_U0_ap_ready : STD_LOGIC;
    signal convolution_5_U0_pad_img5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_5_U0_pad_img5_ce0 : STD_LOGIC;
    signal convolution_5_U0_pad_img5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_5_U0_pad_img5_ce1 : STD_LOGIC;
    signal convolution_5_U0_weight_buf_5_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_5_U0_weight_buf_5_ce0 : STD_LOGIC;
    signal convolution_5_U0_weight_buf_5_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_5_U0_weight_buf_5_ce1 : STD_LOGIC;
    signal convolution_5_U0_conv_to_pool_streams_5_din : STD_LOGIC_VECTOR (31 downto 0);
    signal convolution_5_U0_conv_to_pool_streams_5_write : STD_LOGIC;
    signal convolution_6_U0_ap_start : STD_LOGIC;
    signal convolution_6_U0_ap_done : STD_LOGIC;
    signal convolution_6_U0_ap_continue : STD_LOGIC;
    signal convolution_6_U0_ap_idle : STD_LOGIC;
    signal convolution_6_U0_ap_ready : STD_LOGIC;
    signal convolution_6_U0_pad_img6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_6_U0_pad_img6_ce0 : STD_LOGIC;
    signal convolution_6_U0_pad_img6_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_6_U0_pad_img6_ce1 : STD_LOGIC;
    signal convolution_6_U0_weight_buf_6_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_6_U0_weight_buf_6_ce0 : STD_LOGIC;
    signal convolution_6_U0_weight_buf_6_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_6_U0_weight_buf_6_ce1 : STD_LOGIC;
    signal convolution_6_U0_conv_to_pool_streams_6_din : STD_LOGIC_VECTOR (31 downto 0);
    signal convolution_6_U0_conv_to_pool_streams_6_write : STD_LOGIC;
    signal convolution_7_U0_ap_start : STD_LOGIC;
    signal convolution_7_U0_ap_done : STD_LOGIC;
    signal convolution_7_U0_ap_continue : STD_LOGIC;
    signal convolution_7_U0_ap_idle : STD_LOGIC;
    signal convolution_7_U0_ap_ready : STD_LOGIC;
    signal convolution_7_U0_pad_img7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_7_U0_pad_img7_ce0 : STD_LOGIC;
    signal convolution_7_U0_pad_img7_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal convolution_7_U0_pad_img7_ce1 : STD_LOGIC;
    signal convolution_7_U0_weight_buf_7_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_7_U0_weight_buf_7_ce0 : STD_LOGIC;
    signal convolution_7_U0_weight_buf_7_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal convolution_7_U0_weight_buf_7_ce1 : STD_LOGIC;
    signal convolution_7_U0_conv_to_pool_streams_7_din : STD_LOGIC_VECTOR (31 downto 0);
    signal convolution_7_U0_conv_to_pool_streams_7_write : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_convolution_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_convolution_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_convolution_1_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_convolution_1_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_convolution_2_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_convolution_2_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_convolution_3_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_convolution_3_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_convolution_4_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_convolution_4_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_convolution_5_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_convolution_5_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_convolution_6_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_convolution_6_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_convolution_7_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_convolution_7_U0_ap_ready : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component convolutional_layer_convolution IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pad_img_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img_ce0 : OUT STD_LOGIC;
        pad_img_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img_ce1 : OUT STD_LOGIC;
        pad_img_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_0_ce0 : OUT STD_LOGIC;
        weight_buf_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_0_ce1 : OUT STD_LOGIC;
        weight_buf_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        biases_buf : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_0_full_n : IN STD_LOGIC;
        conv_to_pool_streams_0_write : OUT STD_LOGIC );
    end component;


    component convolutional_layer_convolution_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pad_img1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img1_ce0 : OUT STD_LOGIC;
        pad_img1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img1_ce1 : OUT STD_LOGIC;
        pad_img1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_1_ce0 : OUT STD_LOGIC;
        weight_buf_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_1_ce1 : OUT STD_LOGIC;
        weight_buf_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        biases_buf : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_1_full_n : IN STD_LOGIC;
        conv_to_pool_streams_1_write : OUT STD_LOGIC );
    end component;


    component convolutional_layer_convolution_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pad_img2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img2_ce0 : OUT STD_LOGIC;
        pad_img2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img2_ce1 : OUT STD_LOGIC;
        pad_img2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_2_ce0 : OUT STD_LOGIC;
        weight_buf_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_2_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_2_ce1 : OUT STD_LOGIC;
        weight_buf_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        biases_buf : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_2_full_n : IN STD_LOGIC;
        conv_to_pool_streams_2_write : OUT STD_LOGIC );
    end component;


    component convolutional_layer_convolution_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pad_img3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img3_ce0 : OUT STD_LOGIC;
        pad_img3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img3_ce1 : OUT STD_LOGIC;
        pad_img3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_3_ce0 : OUT STD_LOGIC;
        weight_buf_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_3_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_3_ce1 : OUT STD_LOGIC;
        weight_buf_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        biases_buf : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_3_full_n : IN STD_LOGIC;
        conv_to_pool_streams_3_write : OUT STD_LOGIC );
    end component;


    component convolutional_layer_convolution_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pad_img4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img4_ce0 : OUT STD_LOGIC;
        pad_img4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img4_ce1 : OUT STD_LOGIC;
        pad_img4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_4_ce0 : OUT STD_LOGIC;
        weight_buf_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_4_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_4_ce1 : OUT STD_LOGIC;
        weight_buf_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        biases_buf : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_4_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_4_full_n : IN STD_LOGIC;
        conv_to_pool_streams_4_write : OUT STD_LOGIC );
    end component;


    component convolutional_layer_convolution_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pad_img5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img5_ce0 : OUT STD_LOGIC;
        pad_img5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img5_ce1 : OUT STD_LOGIC;
        pad_img5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_5_ce0 : OUT STD_LOGIC;
        weight_buf_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_5_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_5_ce1 : OUT STD_LOGIC;
        weight_buf_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        biases_buf : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_5_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_5_full_n : IN STD_LOGIC;
        conv_to_pool_streams_5_write : OUT STD_LOGIC );
    end component;


    component convolutional_layer_convolution_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pad_img6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img6_ce0 : OUT STD_LOGIC;
        pad_img6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img6_ce1 : OUT STD_LOGIC;
        pad_img6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_6_ce0 : OUT STD_LOGIC;
        weight_buf_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_6_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_6_ce1 : OUT STD_LOGIC;
        weight_buf_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        biases_buf : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_6_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_6_full_n : IN STD_LOGIC;
        conv_to_pool_streams_6_write : OUT STD_LOGIC );
    end component;


    component convolutional_layer_convolution_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pad_img7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img7_ce0 : OUT STD_LOGIC;
        pad_img7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        pad_img7_ce1 : OUT STD_LOGIC;
        pad_img7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_7_ce0 : OUT STD_LOGIC;
        weight_buf_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buf_7_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buf_7_ce1 : OUT STD_LOGIC;
        weight_buf_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        biases_buf : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_7_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_7_full_n : IN STD_LOGIC;
        conv_to_pool_streams_7_write : OUT STD_LOGIC );
    end component;



begin
    convolution_U0 : component convolutional_layer_convolution
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => convolution_U0_ap_start,
        ap_done => convolution_U0_ap_done,
        ap_continue => convolution_U0_ap_continue,
        ap_idle => convolution_U0_ap_idle,
        ap_ready => convolution_U0_ap_ready,
        pad_img_address0 => convolution_U0_pad_img_address0,
        pad_img_ce0 => convolution_U0_pad_img_ce0,
        pad_img_q0 => pad_img_q0,
        pad_img_address1 => convolution_U0_pad_img_address1,
        pad_img_ce1 => convolution_U0_pad_img_ce1,
        pad_img_q1 => pad_img_q1,
        weight_buf_0_address0 => convolution_U0_weight_buf_0_address0,
        weight_buf_0_ce0 => convolution_U0_weight_buf_0_ce0,
        weight_buf_0_q0 => weight_buf_0_q0,
        weight_buf_0_address1 => convolution_U0_weight_buf_0_address1,
        weight_buf_0_ce1 => convolution_U0_weight_buf_0_ce1,
        weight_buf_0_q1 => weight_buf_0_q1,
        biases_buf => biases_buf_0,
        conv_to_pool_streams_0_din => convolution_U0_conv_to_pool_streams_0_din,
        conv_to_pool_streams_0_full_n => conv_to_pool_streams_0_full_n,
        conv_to_pool_streams_0_write => convolution_U0_conv_to_pool_streams_0_write);

    convolution_1_U0 : component convolutional_layer_convolution_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => convolution_1_U0_ap_start,
        ap_done => convolution_1_U0_ap_done,
        ap_continue => convolution_1_U0_ap_continue,
        ap_idle => convolution_1_U0_ap_idle,
        ap_ready => convolution_1_U0_ap_ready,
        pad_img1_address0 => convolution_1_U0_pad_img1_address0,
        pad_img1_ce0 => convolution_1_U0_pad_img1_ce0,
        pad_img1_q0 => pad_img1_q0,
        pad_img1_address1 => convolution_1_U0_pad_img1_address1,
        pad_img1_ce1 => convolution_1_U0_pad_img1_ce1,
        pad_img1_q1 => pad_img1_q1,
        weight_buf_1_address0 => convolution_1_U0_weight_buf_1_address0,
        weight_buf_1_ce0 => convolution_1_U0_weight_buf_1_ce0,
        weight_buf_1_q0 => weight_buf_1_q0,
        weight_buf_1_address1 => convolution_1_U0_weight_buf_1_address1,
        weight_buf_1_ce1 => convolution_1_U0_weight_buf_1_ce1,
        weight_buf_1_q1 => weight_buf_1_q1,
        biases_buf => biases_buf_1,
        conv_to_pool_streams_1_din => convolution_1_U0_conv_to_pool_streams_1_din,
        conv_to_pool_streams_1_full_n => conv_to_pool_streams_1_full_n,
        conv_to_pool_streams_1_write => convolution_1_U0_conv_to_pool_streams_1_write);

    convolution_2_U0 : component convolutional_layer_convolution_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => convolution_2_U0_ap_start,
        ap_done => convolution_2_U0_ap_done,
        ap_continue => convolution_2_U0_ap_continue,
        ap_idle => convolution_2_U0_ap_idle,
        ap_ready => convolution_2_U0_ap_ready,
        pad_img2_address0 => convolution_2_U0_pad_img2_address0,
        pad_img2_ce0 => convolution_2_U0_pad_img2_ce0,
        pad_img2_q0 => pad_img2_q0,
        pad_img2_address1 => convolution_2_U0_pad_img2_address1,
        pad_img2_ce1 => convolution_2_U0_pad_img2_ce1,
        pad_img2_q1 => pad_img2_q1,
        weight_buf_2_address0 => convolution_2_U0_weight_buf_2_address0,
        weight_buf_2_ce0 => convolution_2_U0_weight_buf_2_ce0,
        weight_buf_2_q0 => weight_buf_2_q0,
        weight_buf_2_address1 => convolution_2_U0_weight_buf_2_address1,
        weight_buf_2_ce1 => convolution_2_U0_weight_buf_2_ce1,
        weight_buf_2_q1 => weight_buf_2_q1,
        biases_buf => biases_buf_2,
        conv_to_pool_streams_2_din => convolution_2_U0_conv_to_pool_streams_2_din,
        conv_to_pool_streams_2_full_n => conv_to_pool_streams_2_full_n,
        conv_to_pool_streams_2_write => convolution_2_U0_conv_to_pool_streams_2_write);

    convolution_3_U0 : component convolutional_layer_convolution_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => convolution_3_U0_ap_start,
        ap_done => convolution_3_U0_ap_done,
        ap_continue => convolution_3_U0_ap_continue,
        ap_idle => convolution_3_U0_ap_idle,
        ap_ready => convolution_3_U0_ap_ready,
        pad_img3_address0 => convolution_3_U0_pad_img3_address0,
        pad_img3_ce0 => convolution_3_U0_pad_img3_ce0,
        pad_img3_q0 => pad_img3_q0,
        pad_img3_address1 => convolution_3_U0_pad_img3_address1,
        pad_img3_ce1 => convolution_3_U0_pad_img3_ce1,
        pad_img3_q1 => pad_img3_q1,
        weight_buf_3_address0 => convolution_3_U0_weight_buf_3_address0,
        weight_buf_3_ce0 => convolution_3_U0_weight_buf_3_ce0,
        weight_buf_3_q0 => weight_buf_3_q0,
        weight_buf_3_address1 => convolution_3_U0_weight_buf_3_address1,
        weight_buf_3_ce1 => convolution_3_U0_weight_buf_3_ce1,
        weight_buf_3_q1 => weight_buf_3_q1,
        biases_buf => biases_buf_3,
        conv_to_pool_streams_3_din => convolution_3_U0_conv_to_pool_streams_3_din,
        conv_to_pool_streams_3_full_n => conv_to_pool_streams_3_full_n,
        conv_to_pool_streams_3_write => convolution_3_U0_conv_to_pool_streams_3_write);

    convolution_4_U0 : component convolutional_layer_convolution_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => convolution_4_U0_ap_start,
        ap_done => convolution_4_U0_ap_done,
        ap_continue => convolution_4_U0_ap_continue,
        ap_idle => convolution_4_U0_ap_idle,
        ap_ready => convolution_4_U0_ap_ready,
        pad_img4_address0 => convolution_4_U0_pad_img4_address0,
        pad_img4_ce0 => convolution_4_U0_pad_img4_ce0,
        pad_img4_q0 => pad_img4_q0,
        pad_img4_address1 => convolution_4_U0_pad_img4_address1,
        pad_img4_ce1 => convolution_4_U0_pad_img4_ce1,
        pad_img4_q1 => pad_img4_q1,
        weight_buf_4_address0 => convolution_4_U0_weight_buf_4_address0,
        weight_buf_4_ce0 => convolution_4_U0_weight_buf_4_ce0,
        weight_buf_4_q0 => weight_buf_4_q0,
        weight_buf_4_address1 => convolution_4_U0_weight_buf_4_address1,
        weight_buf_4_ce1 => convolution_4_U0_weight_buf_4_ce1,
        weight_buf_4_q1 => weight_buf_4_q1,
        biases_buf => biases_buf_4,
        conv_to_pool_streams_4_din => convolution_4_U0_conv_to_pool_streams_4_din,
        conv_to_pool_streams_4_full_n => conv_to_pool_streams_4_full_n,
        conv_to_pool_streams_4_write => convolution_4_U0_conv_to_pool_streams_4_write);

    convolution_5_U0 : component convolutional_layer_convolution_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => convolution_5_U0_ap_start,
        ap_done => convolution_5_U0_ap_done,
        ap_continue => convolution_5_U0_ap_continue,
        ap_idle => convolution_5_U0_ap_idle,
        ap_ready => convolution_5_U0_ap_ready,
        pad_img5_address0 => convolution_5_U0_pad_img5_address0,
        pad_img5_ce0 => convolution_5_U0_pad_img5_ce0,
        pad_img5_q0 => pad_img5_q0,
        pad_img5_address1 => convolution_5_U0_pad_img5_address1,
        pad_img5_ce1 => convolution_5_U0_pad_img5_ce1,
        pad_img5_q1 => pad_img5_q1,
        weight_buf_5_address0 => convolution_5_U0_weight_buf_5_address0,
        weight_buf_5_ce0 => convolution_5_U0_weight_buf_5_ce0,
        weight_buf_5_q0 => weight_buf_5_q0,
        weight_buf_5_address1 => convolution_5_U0_weight_buf_5_address1,
        weight_buf_5_ce1 => convolution_5_U0_weight_buf_5_ce1,
        weight_buf_5_q1 => weight_buf_5_q1,
        biases_buf => biases_buf_5,
        conv_to_pool_streams_5_din => convolution_5_U0_conv_to_pool_streams_5_din,
        conv_to_pool_streams_5_full_n => conv_to_pool_streams_5_full_n,
        conv_to_pool_streams_5_write => convolution_5_U0_conv_to_pool_streams_5_write);

    convolution_6_U0 : component convolutional_layer_convolution_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => convolution_6_U0_ap_start,
        ap_done => convolution_6_U0_ap_done,
        ap_continue => convolution_6_U0_ap_continue,
        ap_idle => convolution_6_U0_ap_idle,
        ap_ready => convolution_6_U0_ap_ready,
        pad_img6_address0 => convolution_6_U0_pad_img6_address0,
        pad_img6_ce0 => convolution_6_U0_pad_img6_ce0,
        pad_img6_q0 => pad_img6_q0,
        pad_img6_address1 => convolution_6_U0_pad_img6_address1,
        pad_img6_ce1 => convolution_6_U0_pad_img6_ce1,
        pad_img6_q1 => pad_img6_q1,
        weight_buf_6_address0 => convolution_6_U0_weight_buf_6_address0,
        weight_buf_6_ce0 => convolution_6_U0_weight_buf_6_ce0,
        weight_buf_6_q0 => weight_buf_6_q0,
        weight_buf_6_address1 => convolution_6_U0_weight_buf_6_address1,
        weight_buf_6_ce1 => convolution_6_U0_weight_buf_6_ce1,
        weight_buf_6_q1 => weight_buf_6_q1,
        biases_buf => biases_buf_6,
        conv_to_pool_streams_6_din => convolution_6_U0_conv_to_pool_streams_6_din,
        conv_to_pool_streams_6_full_n => conv_to_pool_streams_6_full_n,
        conv_to_pool_streams_6_write => convolution_6_U0_conv_to_pool_streams_6_write);

    convolution_7_U0 : component convolutional_layer_convolution_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => convolution_7_U0_ap_start,
        ap_done => convolution_7_U0_ap_done,
        ap_continue => convolution_7_U0_ap_continue,
        ap_idle => convolution_7_U0_ap_idle,
        ap_ready => convolution_7_U0_ap_ready,
        pad_img7_address0 => convolution_7_U0_pad_img7_address0,
        pad_img7_ce0 => convolution_7_U0_pad_img7_ce0,
        pad_img7_q0 => pad_img7_q0,
        pad_img7_address1 => convolution_7_U0_pad_img7_address1,
        pad_img7_ce1 => convolution_7_U0_pad_img7_ce1,
        pad_img7_q1 => pad_img7_q1,
        weight_buf_7_address0 => convolution_7_U0_weight_buf_7_address0,
        weight_buf_7_ce0 => convolution_7_U0_weight_buf_7_ce0,
        weight_buf_7_q0 => weight_buf_7_q0,
        weight_buf_7_address1 => convolution_7_U0_weight_buf_7_address1,
        weight_buf_7_ce1 => convolution_7_U0_weight_buf_7_ce1,
        weight_buf_7_q1 => weight_buf_7_q1,
        biases_buf => biases_buf_7,
        conv_to_pool_streams_7_din => convolution_7_U0_conv_to_pool_streams_7_din,
        conv_to_pool_streams_7_full_n => conv_to_pool_streams_7_full_n,
        conv_to_pool_streams_7_write => convolution_7_U0_conv_to_pool_streams_7_write);





    ap_sync_reg_convolution_1_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_convolution_1_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_convolution_1_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_convolution_1_U0_ap_ready <= ap_sync_convolution_1_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_convolution_2_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_convolution_2_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_convolution_2_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_convolution_2_U0_ap_ready <= ap_sync_convolution_2_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_convolution_3_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_convolution_3_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_convolution_3_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_convolution_3_U0_ap_ready <= ap_sync_convolution_3_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_convolution_4_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_convolution_4_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_convolution_4_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_convolution_4_U0_ap_ready <= ap_sync_convolution_4_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_convolution_5_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_convolution_5_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_convolution_5_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_convolution_5_U0_ap_ready <= ap_sync_convolution_5_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_convolution_6_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_convolution_6_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_convolution_6_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_convolution_6_U0_ap_ready <= ap_sync_convolution_6_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_convolution_7_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_convolution_7_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_convolution_7_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_convolution_7_U0_ap_ready <= ap_sync_convolution_7_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_convolution_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_convolution_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_convolution_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_convolution_U0_ap_ready <= ap_sync_convolution_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    ap_done <= ap_sync_done;
    ap_idle <= (convolution_U0_ap_idle and convolution_7_U0_ap_idle and convolution_6_U0_ap_idle and convolution_5_U0_ap_idle and convolution_4_U0_ap_idle and convolution_3_U0_ap_idle and convolution_2_U0_ap_idle and convolution_1_U0_ap_idle);
    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_logic_0;
    ap_ready <= ap_sync_ready;
    ap_sync_convolution_1_U0_ap_ready <= (convolution_1_U0_ap_ready or ap_sync_reg_convolution_1_U0_ap_ready);
    ap_sync_convolution_2_U0_ap_ready <= (convolution_2_U0_ap_ready or ap_sync_reg_convolution_2_U0_ap_ready);
    ap_sync_convolution_3_U0_ap_ready <= (convolution_3_U0_ap_ready or ap_sync_reg_convolution_3_U0_ap_ready);
    ap_sync_convolution_4_U0_ap_ready <= (convolution_4_U0_ap_ready or ap_sync_reg_convolution_4_U0_ap_ready);
    ap_sync_convolution_5_U0_ap_ready <= (convolution_5_U0_ap_ready or ap_sync_reg_convolution_5_U0_ap_ready);
    ap_sync_convolution_6_U0_ap_ready <= (convolution_6_U0_ap_ready or ap_sync_reg_convolution_6_U0_ap_ready);
    ap_sync_convolution_7_U0_ap_ready <= (convolution_7_U0_ap_ready or ap_sync_reg_convolution_7_U0_ap_ready);
    ap_sync_convolution_U0_ap_ready <= (convolution_U0_ap_ready or ap_sync_reg_convolution_U0_ap_ready);
    ap_sync_done <= (convolution_U0_ap_done and convolution_7_U0_ap_done and convolution_6_U0_ap_done and convolution_5_U0_ap_done and convolution_4_U0_ap_done and convolution_3_U0_ap_done and convolution_2_U0_ap_done and convolution_1_U0_ap_done);
    ap_sync_ready <= (ap_sync_convolution_U0_ap_ready and ap_sync_convolution_7_U0_ap_ready and ap_sync_convolution_6_U0_ap_ready and ap_sync_convolution_5_U0_ap_ready and ap_sync_convolution_4_U0_ap_ready and ap_sync_convolution_3_U0_ap_ready and ap_sync_convolution_2_U0_ap_ready and ap_sync_convolution_1_U0_ap_ready);
    conv_to_pool_streams_0_din <= convolution_U0_conv_to_pool_streams_0_din;
    conv_to_pool_streams_0_write <= convolution_U0_conv_to_pool_streams_0_write;
    conv_to_pool_streams_1_din <= convolution_1_U0_conv_to_pool_streams_1_din;
    conv_to_pool_streams_1_write <= convolution_1_U0_conv_to_pool_streams_1_write;
    conv_to_pool_streams_2_din <= convolution_2_U0_conv_to_pool_streams_2_din;
    conv_to_pool_streams_2_write <= convolution_2_U0_conv_to_pool_streams_2_write;
    conv_to_pool_streams_3_din <= convolution_3_U0_conv_to_pool_streams_3_din;
    conv_to_pool_streams_3_write <= convolution_3_U0_conv_to_pool_streams_3_write;
    conv_to_pool_streams_4_din <= convolution_4_U0_conv_to_pool_streams_4_din;
    conv_to_pool_streams_4_write <= convolution_4_U0_conv_to_pool_streams_4_write;
    conv_to_pool_streams_5_din <= convolution_5_U0_conv_to_pool_streams_5_din;
    conv_to_pool_streams_5_write <= convolution_5_U0_conv_to_pool_streams_5_write;
    conv_to_pool_streams_6_din <= convolution_6_U0_conv_to_pool_streams_6_din;
    conv_to_pool_streams_6_write <= convolution_6_U0_conv_to_pool_streams_6_write;
    conv_to_pool_streams_7_din <= convolution_7_U0_conv_to_pool_streams_7_din;
    conv_to_pool_streams_7_write <= convolution_7_U0_conv_to_pool_streams_7_write;
    convolution_1_U0_ap_continue <= ap_sync_done;
    convolution_1_U0_ap_start <= ((ap_sync_reg_convolution_1_U0_ap_ready xor ap_const_logic_1) and ap_start);
    convolution_2_U0_ap_continue <= ap_sync_done;
    convolution_2_U0_ap_start <= ((ap_sync_reg_convolution_2_U0_ap_ready xor ap_const_logic_1) and ap_start);
    convolution_3_U0_ap_continue <= ap_sync_done;
    convolution_3_U0_ap_start <= ((ap_sync_reg_convolution_3_U0_ap_ready xor ap_const_logic_1) and ap_start);
    convolution_4_U0_ap_continue <= ap_sync_done;
    convolution_4_U0_ap_start <= ((ap_sync_reg_convolution_4_U0_ap_ready xor ap_const_logic_1) and ap_start);
    convolution_5_U0_ap_continue <= ap_sync_done;
    convolution_5_U0_ap_start <= ((ap_sync_reg_convolution_5_U0_ap_ready xor ap_const_logic_1) and ap_start);
    convolution_6_U0_ap_continue <= ap_sync_done;
    convolution_6_U0_ap_start <= ((ap_sync_reg_convolution_6_U0_ap_ready xor ap_const_logic_1) and ap_start);
    convolution_7_U0_ap_continue <= ap_sync_done;
    convolution_7_U0_ap_start <= ((ap_sync_reg_convolution_7_U0_ap_ready xor ap_const_logic_1) and ap_start);
    convolution_U0_ap_continue <= ap_sync_done;
    convolution_U0_ap_start <= ((ap_sync_reg_convolution_U0_ap_ready xor ap_const_logic_1) and ap_start);
    pad_img1_address0 <= convolution_1_U0_pad_img1_address0;
    pad_img1_address1 <= convolution_1_U0_pad_img1_address1;
    pad_img1_ce0 <= convolution_1_U0_pad_img1_ce0;
    pad_img1_ce1 <= convolution_1_U0_pad_img1_ce1;
    pad_img1_d0 <= ap_const_lv32_0;
    pad_img1_d1 <= ap_const_lv32_0;
    pad_img1_we0 <= ap_const_logic_0;
    pad_img1_we1 <= ap_const_logic_0;
    pad_img2_address0 <= convolution_2_U0_pad_img2_address0;
    pad_img2_address1 <= convolution_2_U0_pad_img2_address1;
    pad_img2_ce0 <= convolution_2_U0_pad_img2_ce0;
    pad_img2_ce1 <= convolution_2_U0_pad_img2_ce1;
    pad_img2_d0 <= ap_const_lv32_0;
    pad_img2_d1 <= ap_const_lv32_0;
    pad_img2_we0 <= ap_const_logic_0;
    pad_img2_we1 <= ap_const_logic_0;
    pad_img3_address0 <= convolution_3_U0_pad_img3_address0;
    pad_img3_address1 <= convolution_3_U0_pad_img3_address1;
    pad_img3_ce0 <= convolution_3_U0_pad_img3_ce0;
    pad_img3_ce1 <= convolution_3_U0_pad_img3_ce1;
    pad_img3_d0 <= ap_const_lv32_0;
    pad_img3_d1 <= ap_const_lv32_0;
    pad_img3_we0 <= ap_const_logic_0;
    pad_img3_we1 <= ap_const_logic_0;
    pad_img4_address0 <= convolution_4_U0_pad_img4_address0;
    pad_img4_address1 <= convolution_4_U0_pad_img4_address1;
    pad_img4_ce0 <= convolution_4_U0_pad_img4_ce0;
    pad_img4_ce1 <= convolution_4_U0_pad_img4_ce1;
    pad_img4_d0 <= ap_const_lv32_0;
    pad_img4_d1 <= ap_const_lv32_0;
    pad_img4_we0 <= ap_const_logic_0;
    pad_img4_we1 <= ap_const_logic_0;
    pad_img5_address0 <= convolution_5_U0_pad_img5_address0;
    pad_img5_address1 <= convolution_5_U0_pad_img5_address1;
    pad_img5_ce0 <= convolution_5_U0_pad_img5_ce0;
    pad_img5_ce1 <= convolution_5_U0_pad_img5_ce1;
    pad_img5_d0 <= ap_const_lv32_0;
    pad_img5_d1 <= ap_const_lv32_0;
    pad_img5_we0 <= ap_const_logic_0;
    pad_img5_we1 <= ap_const_logic_0;
    pad_img6_address0 <= convolution_6_U0_pad_img6_address0;
    pad_img6_address1 <= convolution_6_U0_pad_img6_address1;
    pad_img6_ce0 <= convolution_6_U0_pad_img6_ce0;
    pad_img6_ce1 <= convolution_6_U0_pad_img6_ce1;
    pad_img6_d0 <= ap_const_lv32_0;
    pad_img6_d1 <= ap_const_lv32_0;
    pad_img6_we0 <= ap_const_logic_0;
    pad_img6_we1 <= ap_const_logic_0;
    pad_img7_address0 <= convolution_7_U0_pad_img7_address0;
    pad_img7_address1 <= convolution_7_U0_pad_img7_address1;
    pad_img7_ce0 <= convolution_7_U0_pad_img7_ce0;
    pad_img7_ce1 <= convolution_7_U0_pad_img7_ce1;
    pad_img7_d0 <= ap_const_lv32_0;
    pad_img7_d1 <= ap_const_lv32_0;
    pad_img7_we0 <= ap_const_logic_0;
    pad_img7_we1 <= ap_const_logic_0;
    pad_img_address0 <= convolution_U0_pad_img_address0;
    pad_img_address1 <= convolution_U0_pad_img_address1;
    pad_img_ce0 <= convolution_U0_pad_img_ce0;
    pad_img_ce1 <= convolution_U0_pad_img_ce1;
    pad_img_d0 <= ap_const_lv32_0;
    pad_img_d1 <= ap_const_lv32_0;
    pad_img_we0 <= ap_const_logic_0;
    pad_img_we1 <= ap_const_logic_0;
    weight_buf_0_address0 <= convolution_U0_weight_buf_0_address0;
    weight_buf_0_address1 <= convolution_U0_weight_buf_0_address1;
    weight_buf_0_ce0 <= convolution_U0_weight_buf_0_ce0;
    weight_buf_0_ce1 <= convolution_U0_weight_buf_0_ce1;
    weight_buf_0_d0 <= ap_const_lv32_0;
    weight_buf_0_d1 <= ap_const_lv32_0;
    weight_buf_0_we0 <= ap_const_logic_0;
    weight_buf_0_we1 <= ap_const_logic_0;
    weight_buf_1_address0 <= convolution_1_U0_weight_buf_1_address0;
    weight_buf_1_address1 <= convolution_1_U0_weight_buf_1_address1;
    weight_buf_1_ce0 <= convolution_1_U0_weight_buf_1_ce0;
    weight_buf_1_ce1 <= convolution_1_U0_weight_buf_1_ce1;
    weight_buf_1_d0 <= ap_const_lv32_0;
    weight_buf_1_d1 <= ap_const_lv32_0;
    weight_buf_1_we0 <= ap_const_logic_0;
    weight_buf_1_we1 <= ap_const_logic_0;
    weight_buf_2_address0 <= convolution_2_U0_weight_buf_2_address0;
    weight_buf_2_address1 <= convolution_2_U0_weight_buf_2_address1;
    weight_buf_2_ce0 <= convolution_2_U0_weight_buf_2_ce0;
    weight_buf_2_ce1 <= convolution_2_U0_weight_buf_2_ce1;
    weight_buf_2_d0 <= ap_const_lv32_0;
    weight_buf_2_d1 <= ap_const_lv32_0;
    weight_buf_2_we0 <= ap_const_logic_0;
    weight_buf_2_we1 <= ap_const_logic_0;
    weight_buf_3_address0 <= convolution_3_U0_weight_buf_3_address0;
    weight_buf_3_address1 <= convolution_3_U0_weight_buf_3_address1;
    weight_buf_3_ce0 <= convolution_3_U0_weight_buf_3_ce0;
    weight_buf_3_ce1 <= convolution_3_U0_weight_buf_3_ce1;
    weight_buf_3_d0 <= ap_const_lv32_0;
    weight_buf_3_d1 <= ap_const_lv32_0;
    weight_buf_3_we0 <= ap_const_logic_0;
    weight_buf_3_we1 <= ap_const_logic_0;
    weight_buf_4_address0 <= convolution_4_U0_weight_buf_4_address0;
    weight_buf_4_address1 <= convolution_4_U0_weight_buf_4_address1;
    weight_buf_4_ce0 <= convolution_4_U0_weight_buf_4_ce0;
    weight_buf_4_ce1 <= convolution_4_U0_weight_buf_4_ce1;
    weight_buf_4_d0 <= ap_const_lv32_0;
    weight_buf_4_d1 <= ap_const_lv32_0;
    weight_buf_4_we0 <= ap_const_logic_0;
    weight_buf_4_we1 <= ap_const_logic_0;
    weight_buf_5_address0 <= convolution_5_U0_weight_buf_5_address0;
    weight_buf_5_address1 <= convolution_5_U0_weight_buf_5_address1;
    weight_buf_5_ce0 <= convolution_5_U0_weight_buf_5_ce0;
    weight_buf_5_ce1 <= convolution_5_U0_weight_buf_5_ce1;
    weight_buf_5_d0 <= ap_const_lv32_0;
    weight_buf_5_d1 <= ap_const_lv32_0;
    weight_buf_5_we0 <= ap_const_logic_0;
    weight_buf_5_we1 <= ap_const_logic_0;
    weight_buf_6_address0 <= convolution_6_U0_weight_buf_6_address0;
    weight_buf_6_address1 <= convolution_6_U0_weight_buf_6_address1;
    weight_buf_6_ce0 <= convolution_6_U0_weight_buf_6_ce0;
    weight_buf_6_ce1 <= convolution_6_U0_weight_buf_6_ce1;
    weight_buf_6_d0 <= ap_const_lv32_0;
    weight_buf_6_d1 <= ap_const_lv32_0;
    weight_buf_6_we0 <= ap_const_logic_0;
    weight_buf_6_we1 <= ap_const_logic_0;
    weight_buf_7_address0 <= convolution_7_U0_weight_buf_7_address0;
    weight_buf_7_address1 <= convolution_7_U0_weight_buf_7_address1;
    weight_buf_7_ce0 <= convolution_7_U0_weight_buf_7_ce0;
    weight_buf_7_ce1 <= convolution_7_U0_weight_buf_7_ce1;
    weight_buf_7_d0 <= ap_const_lv32_0;
    weight_buf_7_d1 <= ap_const_lv32_0;
    weight_buf_7_we0 <= ap_const_logic_0;
    weight_buf_7_we1 <= ap_const_logic_0;
end behav;
